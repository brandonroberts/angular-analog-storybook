{
  "version": 3,
  "sources": ["../../../../node_modules/core-js/modules/es.regexp.flags.js"],
  "sourcesContent": ["var global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar regExpFlags = require('../internals/regexp-flags');\nvar fails = require('../internals/fails');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 'd') -> /./d and it causes SyntaxError\nvar RegExp = global.RegExp;\nvar RegExpPrototype = RegExp.prototype;\n\nvar FORCED = DESCRIPTORS && fails(function () {\n  var INDICES_SUPPORT = true;\n  try {\n    RegExp('.', 'd');\n  } catch (error) {\n    INDICES_SUPPORT = false;\n  }\n\n  var O = {};\n  // modern V8 bug\n  var calls = '';\n  var expected = INDICES_SUPPORT ? 'dgimsy' : 'gimsy';\n\n  var addGetter = function (key, chr) {\n    // eslint-disable-next-line es-x/no-object-defineproperty -- safe\n    Object.defineProperty(O, key, { get: function () {\n      calls += chr;\n      return true;\n    } });\n  };\n\n  var pairs = {\n    dotAll: 's',\n    global: 'g',\n    ignoreCase: 'i',\n    multiline: 'm',\n    sticky: 'y'\n  };\n\n  if (INDICES_SUPPORT) pairs.hasIndices = 'd';\n\n  for (var key in pairs) addGetter(key, pairs[key]);\n\n  // eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe\n  var result = Object.getOwnPropertyDescriptor(RegExpPrototype, 'flags').get.call(O);\n\n  return result !== expected || calls !== expected;\n});\n\n// `RegExp.prototype.flags` getter\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nif (FORCED) defineBuiltInAccessor(RegExpPrototype, 'flags', {\n  configurable: true,\n  get: regExpFlags\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAAA;IAAIA,SAASC;AACb,IAAIC,cAAcD;AAClB,IAAIE,wBAAwBF;AAC5B,IAAIG,cAAcH;AAClB,IAAII,QAAQJ;AAGZ,IAAIK,SAASN,OAAOM;AACpB,IAAIC,kBAAkBD,OAAOE;AAE7B,IAAIC,SAASP,eAAeG,MAAM,WAAY;AAC5C,MAAIK,kBAAkB;AACtB,MAAI;AACFJ,WAAO,KAAK,GAAN;EACP,SAAQK,OAAP;AACAD,sBAAkB;EACnB;AAED,MAAIE,IAAI,CAAA;AAER,MAAIC,QAAQ;AACZ,MAAIC,WAAWJ,kBAAkB,WAAW;AAE5C,MAAIK,YAAY,SAAUC,MAAKC,KAAK;AAElCC,WAAOC,eAAeP,GAAGI,MAAK;MAAEI,KAAK,WAAY;AAC/CP,iBAASI;AACT,eAAO;MACR;IAH6B,CAA9B;EAID;AAED,MAAII,QAAQ;IACVC,QAAQ;IACRtB,QAAQ;IACRuB,YAAY;IACZC,WAAW;IACXC,QAAQ;EALE;AAQZ,MAAIf;AAAiBW,UAAMK,aAAa;AAExC,WAASV,OAAOK;AAAON,cAAUC,KAAKK,MAAML,IAAZ;AAGhC,MAAIW,SAAST,OAAOU,yBAAyBrB,iBAAiB,OAAjD,EAA0Da,IAAIS,KAAKjB,CAAnE;AAEb,SAAOe,WAAWb,YAAYD,UAAUC;AACzC,CArCgC;AAyCjC,IAAIL;AAAQN,wBAAsBI,iBAAiB,SAAS;IAC1DuB,cAAc;IACdV,KAAKhB;EAFqD,CAA3B;",
  "names": ["global", "require", "DESCRIPTORS", "defineBuiltInAccessor", "regExpFlags", "fails", "RegExp", "RegExpPrototype", "prototype", "FORCED", "INDICES_SUPPORT", "error", "O", "calls", "expected", "addGetter", "key", "chr", "Object", "defineProperty", "get", "pairs", "dotAll", "ignoreCase", "multiline", "sticky", "hasIndices", "result", "getOwnPropertyDescriptor", "call", "configurable"]
}
