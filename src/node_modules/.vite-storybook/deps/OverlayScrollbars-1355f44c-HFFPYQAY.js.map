{
  "version": 3,
  "sources": ["../../../../node_modules/@storybook/components/dist/esm/OverlayScrollbars-1355f44c.js"],
  "sourcesContent": ["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { c as commonjsGlobal, d as __rest } from './index-681e4b07.js';\nimport React__default, { useRef, useEffect } from 'react';\nimport '@storybook/theming';\nimport 'memoizerific';\nimport '@storybook/csf';\nimport 'qs';\nimport '@storybook/client-logger';\nvar OverlayScrollbars$1 = {\n  exports: {}\n};\n/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.0\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 02.08.2020\r\n */\n\n(function (module) {\n  (function (global, factory) {\n    module.exports = factory(global, global.document, undefined);\n  })(typeof window !== 'undefined' ? window : commonjsGlobal, function (window, document, undefined$1) {\n    var PLUGINNAME = 'OverlayScrollbars';\n    var TYPES = {\n      o: 'object',\n      f: 'function',\n      a: 'array',\n      s: 'string',\n      b: 'boolean',\n      n: 'number',\n      u: 'undefined',\n      z: 'null' //d : 'date',\n      //e : 'error',\n      //r : 'regexp',\n      //y : 'symbol'\n\n    };\n    var LEXICON = {\n      c: 'class',\n      s: 'style',\n      i: 'id',\n      l: 'length',\n      p: 'prototype',\n      ti: 'tabindex',\n      oH: 'offsetHeight',\n      cH: 'clientHeight',\n      sH: 'scrollHeight',\n      oW: 'offsetWidth',\n      cW: 'clientWidth',\n      sW: 'scrollWidth',\n      hOP: 'hasOwnProperty',\n      bCR: 'getBoundingClientRect'\n    };\n\n    var VENDORS = function () {\n      //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\n      var jsCache = {};\n      var cssCache = {};\n      var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\n      var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\n\n      function firstLetterToUpper(str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n      }\n\n      return {\n        _cssPrefixes: cssPrefixes,\n        _jsPrefixes: jsPrefixes,\n        _cssProperty: function _cssProperty(name) {\n          var result = cssCache[name];\n          if (cssCache[LEXICON.hOP](name)) return result;\n          var uppercasedName = firstLetterToUpper(name);\n          var elmStyle = document.createElement('div')[LEXICON.s];\n          var resultPossibilities;\n          var i = 0;\n          var v;\n          var currVendorWithoutDashes;\n\n          for (; i < cssPrefixes.length; i++) {\n            currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\n            resultPossibilities = [name, //transition\n            cssPrefixes[i] + name, //-webkit-transition\n            currVendorWithoutDashes + uppercasedName, //webkitTransition\n            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\n            ];\n\n            for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\n              if (elmStyle[resultPossibilities[v]] !== undefined$1) {\n                result = resultPossibilities[v];\n                break;\n              }\n            }\n          }\n\n          cssCache[name] = result;\n          return result;\n        },\n        _cssPropertyValue: function _cssPropertyValue(property, values, suffix) {\n          var name = property + ' ' + values;\n          var result = cssCache[name];\n          if (cssCache[LEXICON.hOP](name)) return result;\n          var dummyStyle = document.createElement('div')[LEXICON.s];\n          var possbleValues = values.split(' ');\n          var preparedSuffix = suffix || '';\n          var i = 0;\n          var v = -1;\n          var prop;\n\n          for (; i < possbleValues[LEXICON.l]; i++) {\n            for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\n              prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\n              dummyStyle.cssText = property + ':' + prop + preparedSuffix;\n\n              if (dummyStyle[LEXICON.l]) {\n                result = prop;\n                break;\n              }\n            }\n          }\n\n          cssCache[name] = result;\n          return result;\n        },\n        _jsAPI: function _jsAPI(name, isInterface, fallback) {\n          var i = 0;\n          var result = jsCache[name];\n\n          if (!jsCache[LEXICON.hOP](name)) {\n            result = window[name];\n\n            for (; i < jsPrefixes[LEXICON.l]; i++) {\n              result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\n            }\n\n            jsCache[name] = result;\n          }\n\n          return result || fallback;\n        }\n      };\n    }();\n\n    var COMPATIBILITY = function () {\n      function windowSize(x) {\n        return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\n      }\n\n      function bind(func, thisObj) {\n        if (_typeof(func) != TYPES.f) {\n          throw \"Can't bind function!\"; // closest thing possible to the ECMAScript 5\n          // internal IsCallable function\n          //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n        }\n\n        var proto = LEXICON.p;\n        var aArgs = Array[proto].slice.call(arguments, 2);\n\n        var fNOP = function fNOP() {};\n\n        var fBound = function fBound() {\n          return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments)));\n        };\n\n        if (func[proto]) fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\n\n        fBound[proto] = new fNOP();\n        return fBound;\n      }\n\n      return {\n        /**\r\n         * Gets the current window width.\r\n         * @returns {Number|number} The current window width in pixel.\r\n         */\n        wW: bind(windowSize, 0, true),\n\n        /**\r\n         * Gets the current window height.\r\n         * @returns {Number|number} The current window height in pixel.\r\n         */\n        wH: bind(windowSize, 0),\n\n        /**\r\n         * Gets the MutationObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n         */\n        mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\n\n        /**\r\n         * Gets the ResizeObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n         */\n        rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\n\n        /**\r\n         * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n         */\n        rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) {\n          return window.setTimeout(func, 1000 / 60);\n        }),\n\n        /**\r\n         * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n         */\n        cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) {\n          return window.clearTimeout(id);\n        }),\n\n        /**\r\n         * Gets the current time.\r\n         * @returns {number} The current time.\r\n         */\n        now: function now() {\n          return Date.now && Date.now() || new Date().getTime();\n        },\n\n        /**\r\n         * Stops the propagation of the given event.\r\n         * @param event The event of which the propagation shall be stoped.\r\n         */\n        stpP: function stpP(event) {\n          if (event.stopPropagation) event.stopPropagation();else event.cancelBubble = true;\n        },\n\n        /**\r\n         * Prevents the default action of the given event.\r\n         * @param event The event of which the default action shall be prevented.\r\n         */\n        prvD: function prvD(event) {\n          if (event.preventDefault && event.cancelable) event.preventDefault();else event.returnValue = false;\n        },\n\n        /**\r\n         * Gets the pageX and pageY values of the given mouse event.\r\n         * @param event The mouse event of which the pageX and pageX shall be got.\r\n         * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n         */\n        page: function page(event) {\n          event = event.originalEvent || event;\n          var strPage = 'page';\n          var strClient = 'client';\n          var strX = 'X';\n          var strY = 'Y';\n          var target = event.target || event.srcElement || document;\n          var eventDoc = target.ownerDocument || document;\n          var doc = eventDoc.documentElement;\n          var body = eventDoc.body; //if touch event return return pageX/Y of it\n\n          if (event.touches !== undefined$1) {\n            var touch = event.touches[0];\n            return {\n              x: touch[strPage + strX],\n              y: touch[strPage + strY]\n            };\n          } // Calculate pageX/Y if not native supported\n\n\n          if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\n            return {\n              x: event[strClient + strX] + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0),\n              y: event[strClient + strY] + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)\n            };\n          }\n\n          return {\n            x: event[strPage + strX],\n            y: event[strPage + strY]\n          };\n        },\n\n        /**\r\n         * Gets the clicked mouse button of the given mouse event.\r\n         * @param event The mouse event of which the clicked button shal be got.\r\n         * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n         */\n        mBtn: function mBtn(event) {\n          var button = event.button;\n          if (!event.which && button !== undefined$1) return button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;else return event.which;\n        },\n\n        /**\r\n         * Checks whether a item is in the given array and returns its index.\r\n         * @param item The item of which the position in the array shall be determined.\r\n         * @param arr The array.\r\n         * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n         */\n        inA: function inA(item, arr) {\n          for (var i = 0; i < arr[LEXICON.l]; i++) {\n            //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\n            try {\n              if (arr[i] === item) return i;\n            } catch (e) {}\n          }\n\n          return -1;\n        },\n\n        /**\r\n         * Returns true if the given value is a array.\r\n         * @param arr The potential array.\r\n         * @returns {boolean} True if the given value is a array, false otherwise.\r\n         */\n        isA: function isA(arr) {\n          var def = Array.isArray;\n          return def ? def(arr) : this.type(arr) == TYPES.a;\n        },\n\n        /**\r\n         * Determine the internal JavaScript [[Class]] of the given object.\r\n         * @param obj The object of which the type shall be determined.\r\n         * @returns {string} The type of the given object.\r\n         */\n        type: function type(obj) {\n          if (obj === undefined$1) return obj + '';\n          if (obj === null) return obj + '';\n          return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\n        },\n        bind: bind\n        /**\r\n         * Gets the vendor-prefixed CSS property by the given name.\r\n         * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n         * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n         * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n         * @param propName The unprefixed CSS property name.\r\n         * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n          cssProp: function(propName) {\r\n            return VENDORS._cssProperty(propName);\r\n        }\r\n        */\n\n      };\n    }();\n\n    var MATH = Math;\n    var JQUERY = window.jQuery;\n\n    var EASING = function () {\n      var _easingsMath = {\n        p: MATH.PI,\n        c: MATH.cos,\n        s: MATH.sin,\n        w: MATH.pow,\n        t: MATH.sqrt,\n        n: MATH.asin,\n        a: MATH.abs,\n        o: 1.70158\n      };\n      /*\r\n       x : current percent (0 - 1),\r\n       t : current time (duration * percent),\r\n       b : start value (from),\r\n       c : end value (to),\r\n       d : duration\r\n         easingName : function(x, t, b, c, d) { return easedValue; }\r\n       */\n\n      return {\n        swing: function swing(x, t, b, c, d) {\n          return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\n        },\n        linear: function linear(x, t, b, c, d) {\n          return x;\n        },\n        easeInQuad: function easeInQuad(x, t, b, c, d) {\n          return c * (t /= d) * t + b;\n        },\n        easeOutQuad: function easeOutQuad(x, t, b, c, d) {\n          return -c * (t /= d) * (t - 2) + b;\n        },\n        easeInOutQuad: function easeInOutQuad(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t + b : -c / 2 * (--t * (t - 2) - 1) + b;\n        },\n        easeInCubic: function easeInCubic(x, t, b, c, d) {\n          return c * (t /= d) * t * t + b;\n        },\n        easeOutCubic: function easeOutCubic(x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t + 1) + b;\n        },\n        easeInOutCubic: function easeInOutCubic(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\n        },\n        easeInQuart: function easeInQuart(x, t, b, c, d) {\n          return c * (t /= d) * t * t * t + b;\n        },\n        easeOutQuart: function easeOutQuart(x, t, b, c, d) {\n          return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n        },\n        easeInOutQuart: function easeInOutQuart(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n        },\n        easeInQuint: function easeInQuint(x, t, b, c, d) {\n          return c * (t /= d) * t * t * t * t + b;\n        },\n        easeOutQuint: function easeOutQuint(x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n        },\n        easeInOutQuint: function easeInOutQuint(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n        },\n        easeInSine: function easeInSine(x, t, b, c, d) {\n          return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\n        },\n        easeOutSine: function easeOutSine(x, t, b, c, d) {\n          return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\n        },\n        easeInOutSine: function easeInOutSine(x, t, b, c, d) {\n          return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\n        },\n        easeInExpo: function easeInExpo(x, t, b, c, d) {\n          return t == 0 ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\n        },\n        easeOutExpo: function easeOutExpo(x, t, b, c, d) {\n          return t == d ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\n        },\n        easeInOutExpo: function easeInOutExpo(x, t, b, c, d) {\n          if (t == 0) return b;\n          if (t == d) return b + c;\n          if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\n          return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\n        },\n        easeInCirc: function easeInCirc(x, t, b, c, d) {\n          return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\n        },\n        easeOutCirc: function easeOutCirc(x, t, b, c, d) {\n          return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\n        },\n        easeInOutCirc: function easeInOutCirc(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\n        },\n        easeInElastic: function easeInElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d) == 1) return b + c;\n          if (!p) p = d * .3;\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n        },\n        easeOutElastic: function easeOutElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d) == 1) return b + c;\n          if (!p) p = d * .3;\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\n        },\n        easeInOutElastic: function easeInOutElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d / 2) == 2) return b + c;\n          if (!p) p = d * (.3 * 1.5);\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n          return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\n        },\n        easeInBack: function easeInBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return c * (t /= d) * t * ((s + 1) * t - s) + b;\n        },\n        easeOutBack: function easeOutBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n        },\n        easeInOutBack: function easeInOutBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return (t /= d / 2) < 1 ? c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n        },\n        easeInBounce: function easeInBounce(x, t, b, c, d) {\n          return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\n        },\n        easeOutBounce: function easeOutBounce(x, t, b, c, d) {\n          var o = 7.5625;\n\n          if ((t /= d) < 1 / 2.75) {\n            return c * (o * t * t) + b;\n          } else if (t < 2 / 2.75) {\n            return c * (o * (t -= 1.5 / 2.75) * t + .75) + b;\n          } else if (t < 2.5 / 2.75) {\n            return c * (o * (t -= 2.25 / 2.75) * t + .9375) + b;\n          } else {\n            return c * (o * (t -= 2.625 / 2.75) * t + .984375) + b;\n          }\n        },\n        easeInOutBounce: function easeInOutBounce(x, t, b, c, d) {\n          return t < d / 2 ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n        }\n      };\n      /*\r\n       *\r\n       * TERMS OF USE - EASING EQUATIONS\r\n       * \r\n       * Open source under the BSD License. \r\n       * \r\n       * Copyright \u00C2\u00A9 2001 Robert Penner\r\n       * All rights reserved.\r\n       * \r\n       * Redistribution and use in source and binary forms, with or without modification, \r\n       * are permitted provided that the following conditions are met:\r\n       * \r\n       * Redistributions of source code must retain the above copyright notice, this list of \r\n       * conditions and the following disclaimer.\r\n       * Redistributions in binary form must reproduce the above copyright notice, this list \r\n       * of conditions and the following disclaimer in the documentation and/or other materials \r\n       * provided with the distribution.\r\n       * \r\n       * Neither the name of the author nor the names of contributors may be used to endorse \r\n       * or promote products derived from this software without specific prior written permission.\r\n       * \r\n       * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n       * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n       * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n       *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n       *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n       *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n       * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n       *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n       * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n       *\r\n       */\n    }();\n\n    var FRAMEWORK = function () {\n      var _rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\n      var _strSpace = ' ';\n      var _strEmpty = '';\n      var _strScrollLeft = 'scrollLeft';\n      var _strScrollTop = 'scrollTop';\n      var _animations = [];\n      var _type = COMPATIBILITY.type;\n      var _cssNumber = {\n        animationIterationCount: true,\n        columnCount: true,\n        fillOpacity: true,\n        flexGrow: true,\n        flexShrink: true,\n        fontWeight: true,\n        lineHeight: true,\n        opacity: true,\n        order: true,\n        orphans: true,\n        widows: true,\n        zIndex: true,\n        zoom: true\n      };\n\n      function extend() {\n        var src,\n            copyIsArray,\n            copy,\n            name,\n            options,\n            clone,\n            target = arguments[0] || {},\n            i = 1,\n            length = arguments[LEXICON.l],\n            deep = false; // Handle a deep copy situation\n\n        if (_type(target) == TYPES.b) {\n          deep = target;\n          target = arguments[1] || {}; // skip the boolean and the target\n\n          i = 2;\n        } // Handle case when target is a string or something (possible in deep copy)\n\n\n        if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\n          target = {};\n        } // extend jQuery itself if only one argument is passed\n\n\n        if (length === i) {\n          target = FakejQuery;\n          --i;\n        }\n\n        for (; i < length; i++) {\n          // Only deal with non-null/undefined values\n          if ((options = arguments[i]) != null) {\n            // Extend the base object\n            for (name in options) {\n              src = target[name];\n              copy = options[name]; // Prevent never-ending loop\n\n              if (target === copy) {\n                continue;\n              } // Recurse if we're merging plain objects or arrays\n\n\n              if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\n                if (copyIsArray) {\n                  copyIsArray = false;\n                  clone = src && COMPATIBILITY.isA(src) ? src : [];\n                } else {\n                  clone = src && isPlainObject(src) ? src : {};\n                } // Never move original objects, clone them\n\n\n                target[name] = extend(deep, clone, copy); // Don't bring in undefined values\n              } else if (copy !== undefined$1) {\n                target[name] = copy;\n              }\n            }\n          }\n        } // Return the modified object\n\n\n        return target;\n      }\n\n      function inArray(item, arr, fromIndex) {\n        for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++) {\n          if (arr[i] === item) return i;\n        }\n\n        return -1;\n      }\n\n      function isFunction(obj) {\n        return _type(obj) == TYPES.f;\n      }\n\n      function isEmptyObject(obj) {\n        for (var name in obj) {\n          return false;\n        }\n\n        return true;\n      }\n\n      function isPlainObject(obj) {\n        if (!obj || _type(obj) != TYPES.o) return false;\n        var key;\n        var proto = LEXICON.p;\n        var hasOwnProperty = Object[proto].hasOwnProperty;\n        var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\n        var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\n\n        if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n          return false;\n        }\n\n        for (key in obj) {\n          /**/\n        }\n\n        return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\n      }\n\n      function _each(obj, callback) {\n        var i = 0;\n\n        if (isArrayLike(obj)) {\n          for (; i < obj[LEXICON.l]; i++) {\n            if (callback.call(obj[i], i, obj[i]) === false) break;\n          }\n        } else {\n          for (i in obj) {\n            if (callback.call(obj[i], i, obj[i]) === false) break;\n          }\n        }\n\n        return obj;\n      }\n\n      function isArrayLike(obj) {\n        var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\n\n        var t = _type(obj);\n\n        return isFunction(t) ? false : t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && length - 1 in obj;\n      }\n\n      function stripAndCollapse(value) {\n        var tokens = value.match(_rnothtmlwhite) || [];\n        return tokens.join(_strSpace);\n      }\n\n      function matches(elem, selector) {\n        var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\n        var i = nodeList[LEXICON.l];\n\n        while (i--) {\n          if (nodeList[i] == elem) return true;\n        }\n\n        return false;\n      }\n\n      function insertAdjacentElement(el, strategy, child) {\n        if (COMPATIBILITY.isA(child)) {\n          for (var i = 0; i < child[LEXICON.l]; i++) {\n            insertAdjacentElement(el, strategy, child[i]);\n          }\n        } else if (_type(child) == TYPES.s) el.insertAdjacentHTML(strategy, child);else el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\n      }\n\n      function setCSSVal(el, prop, val) {\n        try {\n          if (el[LEXICON.s][prop] !== undefined$1) el[LEXICON.s][prop] = parseCSSVal(prop, val);\n        } catch (e) {}\n      }\n\n      function parseCSSVal(prop, val) {\n        if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n) val += 'px';\n        return val;\n      }\n\n      function startNextAnimationInQ(animObj, removeFromQ) {\n        var index;\n        var nextAnim;\n        if (removeFromQ !== false) animObj.q.splice(0, 1);\n\n        if (animObj.q[LEXICON.l] > 0) {\n          nextAnim = animObj.q[0];\n\n          _animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\n        } else {\n          index = inArray(animObj, _animations);\n          if (index > -1) _animations.splice(index, 1);\n        }\n      }\n\n      function setAnimationValue(el, prop, value) {\n        if (prop === _strScrollLeft || prop === _strScrollTop) el[prop] = value;else setCSSVal(el, prop, value);\n      }\n\n      function _animate(el, props, options, easing, complete, guaranteedNext) {\n        var hasOptions = isPlainObject(options);\n        var from = {};\n        var to = {};\n        var i = 0;\n        var key;\n        var animObj;\n        var progress;\n        var step;\n        var specialEasing;\n        var duration;\n\n        if (hasOptions) {\n          easing = options.easing;\n          progress = options.progress;\n          step = options.step;\n          specialEasing = options.specialEasing;\n          complete = options.complete;\n          duration = options.duration;\n        } else duration = options;\n\n        specialEasing = specialEasing || {};\n        duration = duration || 400;\n        easing = easing || 'swing';\n        guaranteedNext = guaranteedNext || false;\n\n        for (; i < _animations[LEXICON.l]; i++) {\n          if (_animations[i].el === el) {\n            animObj = _animations[i];\n            break;\n          }\n        }\n\n        if (!animObj) {\n          animObj = {\n            el: el,\n            q: []\n          };\n\n          _animations.push(animObj);\n        }\n\n        for (key in props) {\n          if (key === _strScrollLeft || key === _strScrollTop) from[key] = el[key];else from[key] = FakejQuery(el).css(key);\n        }\n\n        for (key in from) {\n          if (from[key] !== props[key] && props[key] !== undefined$1) to[key] = props[key];\n        }\n\n        if (!isEmptyObject(to)) {\n          var timeNow;\n          var end;\n          var percent;\n          var fromVal;\n          var toVal;\n          var easedVal;\n          var timeStart;\n\n          var _frame;\n\n          var elapsed;\n          var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\n          var qObj = {\n            props: to,\n            duration: hasOptions ? options : duration,\n            easing: easing,\n            complete: complete\n          };\n\n          if (qPos === -1) {\n            qPos = animObj.q[LEXICON.l];\n            animObj.q.push(qObj);\n          }\n\n          if (qPos === 0) {\n            if (duration > 0) {\n              timeStart = COMPATIBILITY.now();\n\n              _frame = function frame() {\n                timeNow = COMPATIBILITY.now();\n                elapsed = timeNow - timeStart;\n                end = qObj.stop || elapsed >= duration;\n                percent = 1 - (MATH.max(0, timeStart + duration - timeNow) / duration || 0);\n\n                for (key in to) {\n                  fromVal = parseFloat(from[key]);\n                  toVal = parseFloat(to[key]);\n                  easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\n                  setAnimationValue(el, key, easedVal);\n\n                  if (isFunction(step)) {\n                    step(easedVal, {\n                      elem: el,\n                      prop: key,\n                      start: fromVal,\n                      now: easedVal,\n                      end: toVal,\n                      pos: percent,\n                      options: {\n                        easing: easing,\n                        speacialEasing: specialEasing,\n                        duration: duration,\n                        complete: complete,\n                        step: step\n                      },\n                      startTime: timeStart\n                    });\n                  }\n                }\n\n                if (isFunction(progress)) progress({}, percent, MATH.max(0, duration - elapsed));\n\n                if (end) {\n                  startNextAnimationInQ(animObj);\n                  if (isFunction(complete)) complete();\n                } else qObj.frame = COMPATIBILITY.rAF()(_frame);\n              };\n\n              qObj.frame = COMPATIBILITY.rAF()(_frame);\n            } else {\n              for (key in to) {\n                setAnimationValue(el, key, to[key]);\n              }\n\n              startNextAnimationInQ(animObj);\n            }\n          }\n        } else if (guaranteedNext) startNextAnimationInQ(animObj);\n      }\n\n      function _stop(el, clearQ, jumpToEnd) {\n        var animObj;\n        var qObj;\n        var key;\n        var i = 0;\n\n        for (; i < _animations[LEXICON.l]; i++) {\n          animObj = _animations[i];\n\n          if (animObj.el === el) {\n            if (animObj.q[LEXICON.l] > 0) {\n              qObj = animObj.q[0];\n              qObj.stop = true;\n              COMPATIBILITY.cAF()(qObj.frame);\n              animObj.q.splice(0, 1);\n              if (jumpToEnd) for (key in qObj.props) {\n                setAnimationValue(el, key, qObj.props[key]);\n              }\n              if (clearQ) animObj.q = [];else startNextAnimationInQ(animObj, false);\n            }\n\n            break;\n          }\n        }\n      }\n\n      function elementIsVisible(el) {\n        return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\n      }\n\n      function FakejQuery(selector) {\n        if (arguments[LEXICON.l] === 0) return this;\n        var base = new FakejQuery();\n        var elements = selector;\n        var i = 0;\n        var elms;\n        var el;\n\n        if (_type(selector) == TYPES.s) {\n          elements = [];\n\n          if (selector.charAt(0) === '<') {\n            el = document.createElement('div');\n            el.innerHTML = selector;\n            elms = el.children;\n          } else {\n            elms = document.querySelectorAll(selector);\n          }\n\n          for (; i < elms[LEXICON.l]; i++) {\n            elements.push(elms[i]);\n          }\n        }\n\n        if (elements) {\n          if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self)) elements = [elements];\n\n          for (i = 0; i < elements[LEXICON.l]; i++) {\n            base[i] = elements[i];\n          }\n\n          base[LEXICON.l] = elements[LEXICON.l];\n        }\n\n        return base;\n      }\n\n      FakejQuery[LEXICON.p] = {\n        //EVENTS:\n        on: function on(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          var eventNameLength = eventName[LEXICON.l];\n          var i = 0;\n          var el;\n          return this.each(function () {\n            el = this;\n\n            try {\n              if (el.addEventListener) {\n                for (; i < eventNameLength; i++) {\n                  el.addEventListener(eventName[i], handler);\n                }\n              } else if (el.detachEvent) {\n                for (; i < eventNameLength; i++) {\n                  el.attachEvent('on' + eventName[i], handler);\n                }\n              }\n            } catch (e) {}\n          });\n        },\n        off: function off(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          var eventNameLength = eventName[LEXICON.l];\n          var i = 0;\n          var el;\n          return this.each(function () {\n            el = this;\n\n            try {\n              if (el.removeEventListener) {\n                for (; i < eventNameLength; i++) {\n                  el.removeEventListener(eventName[i], handler);\n                }\n              } else if (el.detachEvent) {\n                for (; i < eventNameLength; i++) {\n                  el.detachEvent('on' + eventName[i], handler);\n                }\n              }\n            } catch (e) {}\n          });\n        },\n        one: function one(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          return this.each(function () {\n            var el = FakejQuery(this);\n            FakejQuery.each(eventName, function (i, oneEventName) {\n              var oneHandler = function oneHandler(e) {\n                handler.call(this, e);\n                el.off(oneEventName, oneHandler);\n              };\n\n              el.on(oneEventName, oneHandler);\n            });\n          });\n        },\n        trigger: function trigger(eventName) {\n          var el;\n          var event;\n          return this.each(function () {\n            el = this;\n\n            if (document.createEvent) {\n              event = document.createEvent('HTMLEvents');\n              event.initEvent(eventName, true, false);\n              el.dispatchEvent(event);\n            } else {\n              el.fireEvent('on' + eventName);\n            }\n          });\n        },\n        //DOM NODE INSERTING / REMOVING:\n        append: function append(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'beforeend', child);\n          });\n        },\n        prepend: function prepend(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'afterbegin', child);\n          });\n        },\n        before: function before(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'beforebegin', child);\n          });\n        },\n        after: function after(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'afterend', child);\n          });\n        },\n        remove: function remove() {\n          return this.each(function () {\n            var el = this;\n            var parentNode = el.parentNode;\n            if (parentNode != null) parentNode.removeChild(el);\n          });\n        },\n        unwrap: function unwrap() {\n          var parents = [];\n          var i;\n          var el;\n          var parent;\n          this.each(function () {\n            parent = this.parentNode;\n            if (inArray(parent, parents) === -1) parents.push(parent);\n          });\n\n          for (i = 0; i < parents[LEXICON.l]; i++) {\n            el = parents[i];\n            parent = el.parentNode;\n\n            while (el.firstChild) {\n              parent.insertBefore(el.firstChild, el);\n            }\n\n            parent.removeChild(el);\n          }\n\n          return this;\n        },\n        wrapAll: function wrapAll(wrapperHTML) {\n          var i;\n          var nodes = this;\n          var wrapper = FakejQuery(wrapperHTML)[0];\n          var deepest = wrapper;\n          var parent = nodes[0].parentNode;\n          var previousSibling = nodes[0].previousSibling;\n\n          while (deepest.childNodes[LEXICON.l] > 0) {\n            deepest = deepest.childNodes[0];\n          }\n\n          for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++) {\n            deepest.appendChild(nodes[i]);\n          }\n\n          var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\n          parent.insertBefore(wrapper, nextSibling);\n          return this;\n        },\n        wrapInner: function wrapInner(wrapperHTML) {\n          return this.each(function () {\n            var el = FakejQuery(this);\n            var contents = el.contents();\n            if (contents[LEXICON.l]) contents.wrapAll(wrapperHTML);else el.append(wrapperHTML);\n          });\n        },\n        wrap: function wrap(wrapperHTML) {\n          return this.each(function () {\n            FakejQuery(this).wrapAll(wrapperHTML);\n          });\n        },\n        //DOM NODE MANIPULATION / INFORMATION:\n        css: function css(styles, val) {\n          var el;\n          var key;\n          var cptStyle;\n          var getCptStyle = window.getComputedStyle;\n\n          if (_type(styles) == TYPES.s) {\n            if (val === undefined$1) {\n              el = this[0];\n              cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles]; //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\n\n              return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\n            } else {\n              return this.each(function () {\n                setCSSVal(this, styles, val);\n              });\n            }\n          } else {\n            return this.each(function () {\n              for (key in styles) {\n                setCSSVal(this, key, styles[key]);\n              }\n            });\n          }\n        },\n        hasClass: function hasClass(className) {\n          var elem,\n              i = 0;\n          var classNamePrepared = _strSpace + className + _strSpace;\n          var classList;\n\n          while (elem = this[i++]) {\n            classList = elem.classList;\n            if (classList && classList.contains(className)) return true;else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1) return true;\n          }\n\n          return false;\n        },\n        addClass: function addClass(className) {\n          var classes;\n          var elem;\n          var cur;\n          var curValue;\n          var clazz;\n          var finalValue;\n          var supportClassList;\n          var elmClassList;\n          var i = 0;\n          var v = 0;\n\n          if (className) {\n            classes = className.match(_rnothtmlwhite) || [];\n\n            while (elem = this[i++]) {\n              elmClassList = elem.classList;\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\n\n              if (supportClassList) {\n                while (clazz = classes[v++]) {\n                  elmClassList.add(clazz);\n                }\n              } else {\n                curValue = elem.className + _strEmpty;\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n                if (cur) {\n                  while (clazz = classes[v++]) {\n                    if (cur.indexOf(_strSpace + clazz + _strSpace) < 0) cur += clazz + _strSpace;\n                  }\n\n                  finalValue = stripAndCollapse(cur);\n                  if (curValue !== finalValue) elem.className = finalValue;\n                }\n              }\n            }\n          }\n\n          return this;\n        },\n        removeClass: function removeClass(className) {\n          var classes;\n          var elem;\n          var cur;\n          var curValue;\n          var clazz;\n          var finalValue;\n          var supportClassList;\n          var elmClassList;\n          var i = 0;\n          var v = 0;\n\n          if (className) {\n            classes = className.match(_rnothtmlwhite) || [];\n\n            while (elem = this[i++]) {\n              elmClassList = elem.classList;\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\n\n              if (supportClassList) {\n                while (clazz = classes[v++]) {\n                  elmClassList.remove(clazz);\n                }\n              } else {\n                curValue = elem.className + _strEmpty;\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n                if (cur) {\n                  while (clazz = classes[v++]) {\n                    while (cur.indexOf(_strSpace + clazz + _strSpace) > -1) {\n                      cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\n                    }\n                  }\n\n                  finalValue = stripAndCollapse(cur);\n                  if (curValue !== finalValue) elem.className = finalValue;\n                }\n              }\n            }\n          }\n\n          return this;\n        },\n        hide: function hide() {\n          return this.each(function () {\n            this[LEXICON.s].display = 'none';\n          });\n        },\n        show: function show() {\n          return this.each(function () {\n            this[LEXICON.s].display = 'block';\n          });\n        },\n        attr: function attr(attrName, value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el.getAttribute(attrName);\n            el.setAttribute(attrName, value);\n          }\n\n          return this;\n        },\n        removeAttr: function removeAttr(attrName) {\n          return this.each(function () {\n            this.removeAttribute(attrName);\n          });\n        },\n        offset: function offset() {\n          var el = this[0];\n          var rect = el[LEXICON.bCR]();\n          var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\n          var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\n          return {\n            top: rect.top + scrollTop,\n            left: rect.left + scrollLeft\n          };\n        },\n        position: function position() {\n          var el = this[0];\n          return {\n            top: el.offsetTop,\n            left: el.offsetLeft\n          };\n        },\n        scrollLeft: function scrollLeft(value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el[_strScrollLeft];\n            el[_strScrollLeft] = value;\n          }\n\n          return this;\n        },\n        scrollTop: function scrollTop(value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el[_strScrollTop];\n            el[_strScrollTop] = value;\n          }\n\n          return this;\n        },\n        val: function val(value) {\n          var el = this[0];\n          if (!value) return el.value;\n          el.value = value;\n          return this;\n        },\n        //DOM TRAVERSAL / FILTERING:\n        first: function first() {\n          return this.eq(0);\n        },\n        last: function last() {\n          return this.eq(-1);\n        },\n        eq: function eq(index) {\n          return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\n        },\n        find: function find(selector) {\n          var children = [];\n          var i;\n          this.each(function () {\n            var el = this;\n            var ch = el.querySelectorAll(selector);\n\n            for (i = 0; i < ch[LEXICON.l]; i++) {\n              children.push(ch[i]);\n            }\n          });\n          return FakejQuery(children);\n        },\n        children: function children(selector) {\n          var children = [];\n          var el;\n          var ch;\n          var i;\n          this.each(function () {\n            ch = this.children;\n\n            for (i = 0; i < ch[LEXICON.l]; i++) {\n              el = ch[i];\n\n              if (selector) {\n                if (el.matches && el.matches(selector) || matches(el, selector)) children.push(el);\n              } else children.push(el);\n            }\n          });\n          return FakejQuery(children);\n        },\n        parent: function parent(selector) {\n          var parents = [];\n          var parent;\n          this.each(function () {\n            parent = this.parentNode;\n            if (selector ? FakejQuery(parent).is(selector) : true) parents.push(parent);\n          });\n          return FakejQuery(parents);\n        },\n        is: function is(selector) {\n          var el;\n          var i;\n\n          for (i = 0; i < this[LEXICON.l]; i++) {\n            el = this[i];\n            if (selector === ':visible') return elementIsVisible(el);\n            if (selector === ':hidden') return !elementIsVisible(el);\n            if (el.matches && el.matches(selector) || matches(el, selector)) return true;\n          }\n\n          return false;\n        },\n        contents: function contents() {\n          var contents = [];\n          var childs;\n          var i;\n          this.each(function () {\n            childs = this.childNodes;\n\n            for (i = 0; i < childs[LEXICON.l]; i++) {\n              contents.push(childs[i]);\n            }\n          });\n          return FakejQuery(contents);\n        },\n        each: function each(callback) {\n          return _each(this, callback);\n        },\n        //ANIMATION:\n        animate: function animate(props, duration, easing, complete) {\n          return this.each(function () {\n            _animate(this, props, duration, easing, complete);\n          });\n        },\n        stop: function stop(clearQ, jump) {\n          return this.each(function () {\n            _stop(this, clearQ, jump);\n          });\n        }\n      };\n      extend(FakejQuery, {\n        extend: extend,\n        inArray: inArray,\n        isEmptyObject: isEmptyObject,\n        isPlainObject: isPlainObject,\n        each: _each\n      });\n      return FakejQuery;\n    }();\n\n    var INSTANCES = function () {\n      var _targets = [];\n      var _instancePropertyString = '__overlayScrollbars__';\n      /**\r\n       * Register, unregister or get a certain (or all) instances.\r\n       * Register: Pass the target and the instance.\r\n       * Unregister: Pass the target and null.\r\n       * Get Instance: Pass the target from which the instance shall be got.\r\n       * Get Targets: Pass no arguments.\r\n       * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n       * @param instance The instance.\r\n       * @returns {*|void} Returns the instance from the given target.\r\n       */\n\n      return function (target, instance) {\n        var argLen = arguments[LEXICON.l];\n\n        if (argLen < 1) {\n          //return all targets\n          return _targets;\n        } else {\n          if (instance) {\n            //register instance\n            target[_instancePropertyString] = instance;\n\n            _targets.push(target);\n          } else {\n            var index = COMPATIBILITY.inA(target, _targets);\n\n            if (index > -1) {\n              if (argLen > 1) {\n                //unregister instance\n                delete target[_instancePropertyString];\n\n                _targets.splice(index, 1);\n              } else {\n                //get instance from target\n                return _targets[index][_instancePropertyString];\n              }\n            }\n          }\n        }\n      };\n    }();\n\n    var PLUGIN = function () {\n      var _plugin;\n\n      var _pluginsGlobals;\n\n      var _pluginsAutoUpdateLoop;\n\n      var _pluginsExtensions = [];\n\n      var _pluginsOptions = function () {\n        var type = COMPATIBILITY.type;\n        var possibleTemplateTypes = [TYPES.b, //boolean\n        TYPES.n, //number\n        TYPES.s, //string\n        TYPES.a, //array\n        TYPES.o, //object\n        TYPES.f, //function\n        TYPES.z //null\n        ];\n        var restrictedStringsSplit = ' ';\n        var restrictedStringsPossibilitiesSplit = ':';\n        var classNameAllowedValues = [TYPES.z, TYPES.s];\n        var numberAllowedValues = TYPES.n;\n        var booleanNullAllowedValues = [TYPES.z, TYPES.b];\n        var booleanTrueTemplate = [true, TYPES.b];\n        var booleanFalseTemplate = [false, TYPES.b];\n        var callbackTemplate = [null, [TYPES.z, TYPES.f]];\n        var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\n        var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\n        var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\n        var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\n        var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\n        var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\n        var optionsDefaultsAndTemplate = {\n          className: ['os-theme-dark', classNameAllowedValues],\n          //null || string\n          resize: ['none', resizeAllowedValues],\n          //none || both  || horizontal || vertical || n || b || h || v\n          sizeAutoCapable: booleanTrueTemplate,\n          //true || false\n          clipAlways: booleanTrueTemplate,\n          //true || false\n          normalizeRTL: booleanTrueTemplate,\n          //true || false\n          paddingAbsolute: booleanFalseTemplate,\n          //true || false\n          autoUpdate: [null, booleanNullAllowedValues],\n          //true || false || null\n          autoUpdateInterval: [33, numberAllowedValues],\n          //number\n          updateOnLoad: updateOnLoadTemplate,\n          //string || array || null\n          nativeScrollbarsOverlaid: {\n            showNativeScrollbars: booleanFalseTemplate,\n            //true || false\n            initialize: booleanTrueTemplate //true || false\n\n          },\n          overflowBehavior: {\n            x: ['scroll', overflowBehaviorAllowedValues],\n            //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n            y: ['scroll', overflowBehaviorAllowedValues] //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n\n          },\n          scrollbars: {\n            visibility: ['auto', scrollbarsVisibilityAllowedValues],\n            //visible || hidden || auto || v || h || a\n            autoHide: ['never', scrollbarsAutoHideAllowedValues],\n            //never || scroll || leave || move || n || s || l || m\n            autoHideDelay: [800, numberAllowedValues],\n            //number\n            dragScrolling: booleanTrueTemplate,\n            //true || false\n            clickScrolling: booleanFalseTemplate,\n            //true || false\n            touchSupport: booleanTrueTemplate,\n            //true || false\n            snapHandle: booleanFalseTemplate //true || false\n\n          },\n          textarea: {\n            dynWidth: booleanFalseTemplate,\n            //true || false\n            dynHeight: booleanFalseTemplate,\n            //true || false\n            inheritedAttrs: inheritedAttrsTemplate //string || array || null\n\n          },\n          callbacks: {\n            onInitialized: callbackTemplate,\n            //null || function\n            onInitializationWithdrawn: callbackTemplate,\n            //null || function\n            onDestroyed: callbackTemplate,\n            //null || function\n            onScrollStart: callbackTemplate,\n            //null || function\n            onScroll: callbackTemplate,\n            //null || function\n            onScrollStop: callbackTemplate,\n            //null || function\n            onOverflowChanged: callbackTemplate,\n            //null || function\n            onOverflowAmountChanged: callbackTemplate,\n            //null || function\n            onDirectionChanged: callbackTemplate,\n            //null || function\n            onContentSizeChanged: callbackTemplate,\n            //null || function\n            onHostSizeChanged: callbackTemplate,\n            //null || function\n            onUpdated: callbackTemplate //null || function\n\n          }\n        };\n\n        var convert = function convert(template) {\n          var recursive = function recursive(obj) {\n            var key;\n            var val;\n            var valType;\n\n            for (key in obj) {\n              if (!obj[LEXICON.hOP](key)) continue;\n              val = obj[key];\n              valType = type(val);\n              if (valType == TYPES.a) obj[key] = val[template ? 1 : 0];else if (valType == TYPES.o) obj[key] = recursive(val);\n            }\n\n            return obj;\n          };\n\n          return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\n        };\n\n        return {\n          _defaults: convert(),\n          _template: convert(true),\n\n          /**\r\n           * Validates the passed object by the passed template.\r\n           * @param obj The object which shall be validated.\r\n           * @param template The template which defines the allowed values and types.\r\n           * @param writeErrors True if errors shall be logged to the console.\r\n           * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n           * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n           */\n          _validate: function _validate(obj, template, writeErrors, diffObj) {\n            var validatedOptions = {};\n            var validatedOptionsPrepared = {};\n            var objectCopy = FRAMEWORK.extend(true, {}, obj);\n            var inArray = FRAMEWORK.inArray;\n            var isEmptyObj = FRAMEWORK.isEmptyObject;\n\n            var checkObjectProps = function checkObjectProps(data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\n              for (var prop in template) {\n                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\n                  var isValid = false;\n                  var isDiff = false;\n                  var templateValue = template[prop];\n                  var templateValueType = type(templateValue);\n                  var templateIsComplex = templateValueType == TYPES.o;\n                  var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\n                  var dataDiffValue = diffData[prop];\n                  var dataValue = data[prop];\n                  var dataValueType = type(dataValue);\n                  var propPrefix = prevPropName ? prevPropName + '.' : '';\n                  var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\n                  var errorPossibleTypes = [];\n                  var errorRestrictedStrings = [];\n                  var restrictedStringValuesSplit;\n                  var restrictedStringValuesPossibilitiesSplit;\n                  var isRestrictedValue;\n                  var mainPossibility;\n                  var currType;\n                  var i;\n                  var v;\n                  var j;\n                  dataDiffValue = dataDiffValue === undefined$1 ? {} : dataDiffValue; //if the template has a object as value, it means that the options are complex (verschachtelt)\n\n                  if (templateIsComplex && dataValueType == TYPES.o) {\n                    validatedOptions[prop] = {};\n                    validatedOptionsPrepared[prop] = {};\n                    checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\n                    FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\n                      if (isEmptyObj(value[prop])) {\n                        delete value[prop];\n                      }\n                    });\n                  } else if (!templateIsComplex) {\n                    for (i = 0; i < templateTypes[LEXICON.l]; i++) {\n                      currType = templateTypes[i];\n                      templateValueType = type(currType); //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\n\n                      isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\n\n                      if (isRestrictedValue) {\n                        errorPossibleTypes.push(TYPES.s); //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\n\n                        restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\n                        errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\n\n                        for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\n                          //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\n                          restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\n                          mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\n\n                          for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\n                            //if any possibility matches with the dataValue, its valid\n                            if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\n                              isValid = true;\n                              break;\n                            }\n                          }\n\n                          if (isValid) break;\n                        }\n                      } else {\n                        errorPossibleTypes.push(currType);\n\n                        if (dataValueType === currType) {\n                          isValid = true;\n                          break;\n                        }\n                      }\n                    }\n\n                    if (isValid) {\n                      isDiff = dataValue !== dataDiffValue;\n                      if (isDiff) validatedOptions[prop] = dataValue;\n                      if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff) validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\n                    } else if (writeErrors) {\n                      console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" + \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" + (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\n                    }\n\n                    delete data[prop];\n                  }\n                }\n              }\n            };\n\n            checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared); //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\n\n            /*\r\n            if(keepForeignProps) {\r\n                FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n            }\r\n            */\n\n            if (!isEmptyObj(objectCopy) && writeErrors) console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\n            return {\n              _default: validatedOptions,\n              _prepared: validatedOptionsPrepared\n            };\n          }\n        };\n      }();\n      /**\r\n       * Initializes the object which contains global information about the plugin and each instance of it.\r\n       */\n\n\n      function initOverlayScrollbarsStatics() {\n        if (!_pluginsGlobals) _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\n        if (!_pluginsAutoUpdateLoop) _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\n      }\n      /**\r\n       * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @param defaultOptions\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsGlobals(defaultOptions) {\n        var _base = this;\n\n        var strOverflow = 'overflow';\n        var strHidden = 'hidden';\n        var strScroll = 'scroll';\n        var bodyElement = FRAMEWORK('body');\n        var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\n        var scrollbarDummyElement0 = scrollbarDummyElement[0];\n        var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\n        bodyElement.append(scrollbarDummyElement);\n        scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\n\n        var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\n        var nativeScrollbarIsOverlaid = {\n          x: nativeScrollbarSize.x === 0,\n          y: nativeScrollbarSize.y === 0\n        };\n\n        var msie = function () {\n          var ua = window.navigator.userAgent;\n          var strIndexOf = 'indexOf';\n          var strSubString = 'substring';\n          var msie = ua[strIndexOf]('MSIE ');\n          var trident = ua[strIndexOf]('Trident/');\n          var edge = ua[strIndexOf]('Edge/');\n          var rv = ua[strIndexOf]('rv:');\n          var result;\n          var parseIntFunc = parseInt; // IE 10 or older => return version number\n\n          if (msie > 0) result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10); // IE 11 => return version number\n          else if (trident > 0) result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10); // Edge (IE 12+) => return version number\n          else if (edge > 0) result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10); // other browser\n\n          return result;\n        }();\n\n        FRAMEWORK.extend(_base, {\n          defaultOptions: defaultOptions,\n          msie: msie,\n          autoUpdateLoop: false,\n          autoUpdateRecommended: !COMPATIBILITY.mO(),\n          nativeScrollbarSize: nativeScrollbarSize,\n          nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\n          nativeScrollbarStyling: function () {\n            var result = false;\n            scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\n\n            try {\n              result = scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\n            } catch (ex) {} //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\n            //and set overflow to scroll\n            //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\n            //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\n\n\n            return result;\n          }(),\n          overlayScrollbarDummySize: {\n            x: 30,\n            y: 30\n          },\n          cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\n          restrictedMeasuring: function () {\n            //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\n            //since 1.11.0 always false -> fixed via CSS (hopefully)\n            scrollbarDummyElement.css(strOverflow, strHidden);\n            var scrollSize = {\n              w: scrollbarDummyElement0[LEXICON.sW],\n              h: scrollbarDummyElement0[LEXICON.sH]\n            };\n            scrollbarDummyElement.css(strOverflow, 'visible');\n            var scrollSize2 = {\n              w: scrollbarDummyElement0[LEXICON.sW],\n              h: scrollbarDummyElement0[LEXICON.sH]\n            };\n            return scrollSize.w - scrollSize2.w !== 0 || scrollSize.h - scrollSize2.h !== 0;\n          }(),\n          rtlScrollBehavior: function () {\n            scrollbarDummyElement.css({\n              'overflow-y': strHidden,\n              'overflow-x': strScroll,\n              'direction': 'rtl'\n            }).scrollLeft(0);\n            var dummyContainerOffset = scrollbarDummyElement.offset();\n            var dummyContainerChildOffset = dummyContainerChild.offset(); //https://github.com/KingSora/OverlayScrollbars/issues/187\n\n            scrollbarDummyElement.scrollLeft(-999);\n            var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\n            return {\n              //origin direction = determines if the zero scroll position is on the left or right side\n              //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\n              //true = on the left side\n              //false = on the right side\n              i: dummyContainerOffset.left === dummyContainerChildOffset.left,\n              //negative = determines if the maximum scroll is positive or negative\n              //'n' means 'negate' (n === true means that the axis must be negated to be correct)\n              //true = negative\n              //false = positive\n              n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\n            };\n          }(),\n          supportTransform: !!VENDORS._cssProperty('transform'),\n          supportTransition: !!VENDORS._cssProperty('transition'),\n          supportPassiveEvents: function () {\n            var supportsPassive = false;\n\n            try {\n              window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: function get() {\n                  supportsPassive = true;\n                }\n              }));\n            } catch (e) {}\n\n            return supportsPassive;\n          }(),\n          supportResizeObserver: !!COMPATIBILITY.rO(),\n          supportMutationObserver: !!COMPATIBILITY.mO()\n        });\n        scrollbarDummyElement.removeAttr(LEXICON.s).remove(); //Catch zoom event:\n\n        (function () {\n          if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y) return;\n          var abs = MATH.abs;\n          var windowWidth = COMPATIBILITY.wW();\n          var windowHeight = COMPATIBILITY.wH();\n          var windowDpr = getWindowDPR();\n\n          var onResize = function onResize() {\n            if (INSTANCES().length > 0) {\n              var newW = COMPATIBILITY.wW();\n              var newH = COMPATIBILITY.wH();\n              var deltaW = newW - windowWidth;\n              var deltaH = newH - windowHeight;\n              if (deltaW === 0 && deltaH === 0) return;\n              var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\n              var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\n              var absDeltaW = abs(deltaW);\n              var absDeltaH = abs(deltaH);\n              var absDeltaWRatio = abs(deltaWRatio);\n              var absDeltaHRatio = abs(deltaHRatio);\n              var newDPR = getWindowDPR();\n              var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\n              var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\n              var dprChanged = newDPR !== windowDpr && windowDpr > 0;\n              var isZoom = deltaIsBigger && difference && dprChanged;\n              var oldScrollbarSize = _base.nativeScrollbarSize;\n              var newScrollbarSize;\n\n              if (isZoom) {\n                bodyElement.append(scrollbarDummyElement);\n                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\n                scrollbarDummyElement.remove();\n\n                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\n                  FRAMEWORK.each(INSTANCES(), function () {\n                    if (INSTANCES(this)) INSTANCES(this).update('zoom');\n                  });\n                }\n              }\n\n              windowWidth = newW;\n              windowHeight = newH;\n              windowDpr = newDPR;\n            }\n          };\n\n          function differenceIsBiggerThanOne(valOne, valTwo) {\n            var absValOne = abs(valOne);\n            var absValTwo = abs(valTwo);\n            return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\n          }\n\n          function getWindowDPR() {\n            var dDPI = window.screen.deviceXDPI || 0;\n            var sDPI = window.screen.logicalXDPI || 1;\n            return window.devicePixelRatio || dDPI / sDPI;\n          }\n\n          FRAMEWORK(window).on('resize', onResize);\n        })();\n\n        function calcNativeScrollbarSize(measureElement) {\n          return {\n            x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\n            y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\n          };\n        }\n      }\n      /**\r\n       * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsAutoUpdateLoop(globals) {\n        var _base = this;\n\n        var _inArray = FRAMEWORK.inArray;\n        var _getNow = COMPATIBILITY.now;\n        var _strAutoUpdate = 'autoUpdate';\n\n        var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\n\n        var _strLength = LEXICON.l;\n        var _loopingInstances = [];\n        var _loopingInstancesIntervalCache = [];\n        var _loopIsActive = false;\n        var _loopIntervalDefault = 33;\n        var _loopInterval = _loopIntervalDefault;\n\n        var _loopTimeOld = _getNow();\n\n        var _loopID;\n        /**\r\n         * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n         */\n\n\n        var loop = function loop() {\n          if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\n            _loopID = COMPATIBILITY.rAF()(function () {\n              loop();\n            });\n\n            var timeNew = _getNow();\n\n            var timeDelta = timeNew - _loopTimeOld;\n            var lowestInterval;\n            var instance;\n            var instanceOptions;\n            var instanceAutoUpdateAllowed;\n            var instanceAutoUpdateInterval;\n            var now;\n\n            if (timeDelta > _loopInterval) {\n              _loopTimeOld = timeNew - timeDelta % _loopInterval;\n              lowestInterval = _loopIntervalDefault;\n\n              for (var i = 0; i < _loopingInstances[_strLength]; i++) {\n                instance = _loopingInstances[i];\n\n                if (instance !== undefined$1) {\n                  instanceOptions = instance.options();\n                  instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\n                  instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\n                  now = _getNow();\n\n                  if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && now - _loopingInstancesIntervalCache[i] > instanceAutoUpdateInterval) {\n                    instance.update('auto');\n                    _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\n                  }\n\n                  lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\n                }\n              }\n\n              _loopInterval = lowestInterval;\n            }\n          } else {\n            _loopInterval = _loopIntervalDefault;\n          }\n        };\n        /**\r\n         * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\n\n\n        _base.add = function (instance) {\n          if (_inArray(instance, _loopingInstances) === -1) {\n            _loopingInstances.push(instance);\n\n            _loopingInstancesIntervalCache.push(_getNow());\n\n            if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\n              _loopIsActive = true;\n              globals.autoUpdateLoop = _loopIsActive;\n              loop();\n            }\n          }\n        };\n        /**\r\n         * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\n\n\n        _base.remove = function (instance) {\n          var index = _inArray(instance, _loopingInstances);\n\n          if (index > -1) {\n            //remove from loopingInstances list\n            _loopingInstancesIntervalCache.splice(index, 1);\n\n            _loopingInstances.splice(index, 1); //correct update loop behavior\n\n\n            if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\n              _loopIsActive = false;\n              globals.autoUpdateLoop = _loopIsActive;\n\n              if (_loopID !== undefined$1) {\n                COMPATIBILITY.cAF()(_loopID);\n                _loopID = -1;\n              }\n            }\n          }\n        };\n      }\n      /**\r\n       * A object which manages the scrollbars visibility of the target element.\r\n       * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n       * @param options The custom options.\r\n       * @param extensions The custom extensions.\r\n       * @param globals\r\n       * @param autoUpdateLoop\r\n       * @returns {*}\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\n        //shortcuts\n        var type = COMPATIBILITY.type;\n        var inArray = FRAMEWORK.inArray;\n        var each = FRAMEWORK.each; //make correct instanceof\n\n        var _base = new _plugin();\n\n        var _frameworkProto = FRAMEWORK[LEXICON.p]; //if passed element is no HTML element: skip and return\n\n        if (!isHTMLElement(pluginTargetElement)) return; //if passed element is already initialized: set passed options if there are any and return its instance\n\n        if (INSTANCES(pluginTargetElement)) {\n          var inst = INSTANCES(pluginTargetElement);\n          inst.options(options);\n          return inst;\n        } //globals:\n\n\n        var _nativeScrollbarIsOverlaid;\n\n        var _overlayScrollbarDummySize;\n\n        var _rtlScrollBehavior;\n\n        var _autoUpdateRecommended;\n\n        var _msieVersion;\n\n        var _nativeScrollbarStyling;\n\n        var _cssCalc;\n\n        var _nativeScrollbarSize;\n\n        var _supportTransition;\n\n        var _supportTransform;\n\n        var _supportPassiveEvents;\n\n        var _supportResizeObserver;\n\n        var _supportMutationObserver;\n\n        var _initialized;\n\n        var _destroyed;\n\n        var _isTextarea;\n\n        var _isBody;\n\n        var _documentMixed;\n\n        var _domExists; //general:\n\n\n        var _isBorderBox;\n\n        var _sizeAutoObserverAdded;\n\n        var _paddingX;\n\n        var _paddingY;\n\n        var _borderX;\n\n        var _borderY;\n\n        var _marginX;\n\n        var _marginY;\n\n        var _isRTL;\n\n        var _sleeping;\n\n        var _contentBorderSize = {};\n        var _scrollHorizontalInfo = {};\n        var _scrollVerticalInfo = {};\n        var _viewportSize = {};\n        var _nativeScrollbarMinSize = {}; //naming:\t\n\n        var _strMinusHidden = '-hidden';\n        var _strMarginMinus = 'margin-';\n        var _strPaddingMinus = 'padding-';\n        var _strBorderMinus = 'border-';\n        var _strTop = 'top';\n        var _strRight = 'right';\n        var _strBottom = 'bottom';\n        var _strLeft = 'left';\n        var _strMinMinus = 'min-';\n        var _strMaxMinus = 'max-';\n        var _strWidth = 'width';\n        var _strHeight = 'height';\n        var _strFloat = 'float';\n        var _strEmpty = '';\n        var _strAuto = 'auto';\n        var _strSync = 'sync';\n        var _strScroll = 'scroll';\n        var _strHundredPercent = '100%';\n        var _strX = 'x';\n        var _strY = 'y';\n        var _strDot = '.';\n        var _strSpace = ' ';\n        var _strScrollbar = 'scrollbar';\n        var _strMinusHorizontal = '-horizontal';\n        var _strMinusVertical = '-vertical';\n\n        var _strScrollLeft = _strScroll + 'Left';\n\n        var _strScrollTop = _strScroll + 'Top';\n\n        var _strMouseTouchDownEvent = 'mousedown touchstart';\n        var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\n        var _strMouseTouchMoveEvent = 'mousemove touchmove';\n        var _strMouseEnter = 'mouseenter';\n        var _strMouseLeave = 'mouseleave';\n        var _strKeyDownEvent = 'keydown';\n        var _strKeyUpEvent = 'keyup';\n        var _strSelectStartEvent = 'selectstart';\n        var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\n        var _strResizeObserverProperty = '__overlayScrollbarsRO__'; //class names:\t\n\n        var _cassNamesPrefix = 'os-';\n\n        var _classNameHTMLElement = _cassNamesPrefix + 'html';\n\n        var _classNameHostElement = _cassNamesPrefix + 'host';\n\n        var _classNameHostElementForeign = _classNameHostElement + '-foreign';\n\n        var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\n\n        var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\n\n        var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\n\n        var _classNameHostTransition = _classNameHostElement + '-transition';\n\n        var _classNameHostRTL = _classNameHostElement + '-rtl';\n\n        var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\n\n        var _classNameHostScrolling = _classNameHostElement + '-scrolling';\n\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n        var _classNameHostOverflowX = _classNameHostOverflow + '-x';\n\n        var _classNameHostOverflowY = _classNameHostOverflow + '-y';\n\n        var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\n\n        var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\n\n        var _classNamePaddingElement = _cassNamesPrefix + 'padding';\n\n        var _classNameViewportElement = _cassNamesPrefix + 'viewport';\n\n        var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\n\n        var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\n\n        var _classNameContentElement = _cassNamesPrefix + 'content';\n\n        var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\n\n        var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\n\n        var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\n\n        var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\n\n        var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\n\n        var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\n\n        var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\n\n        var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\n\n        var _classNameScrollbarTrack = _classNameScrollbar + '-track';\n\n        var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\n\n        var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\n\n        var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\n\n        var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\n\n        var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\n\n        var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\n\n        var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\n\n        var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\n\n        var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\n\n        var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\n\n        var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\n\n        var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\n\n        var _classNameDragging = _cassNamesPrefix + 'dragging';\n\n        var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\n\n        var _classNamesDynamicDestroy = [_classNameViewportNativeScrollbarsInvisible, _classNameViewportNativeScrollbarsOverlaid, _classNameScrollbarTrackOff, _classNameScrollbarHandleOff, _classNameScrollbarUnusable, _classNameScrollbarAutoHidden, _classNameScrollbarCornerResize, _classNameScrollbarCornerResizeB, _classNameScrollbarCornerResizeH, _classNameScrollbarCornerResizeV, _classNameDragging].join(_strSpace); //callbacks:\t\n\n\n        var _callbacksInitQeueue = []; //attrs viewport shall inherit from target\t\n\n        var _viewportAttrsFromTarget = [LEXICON.ti]; //options:\t\n\n        var _defaultOptions;\n\n        var _currentOptions;\n\n        var _currentPreparedOptions; //extensions:\t\n\n\n        var _extensions = {};\n        var _extensionsPrivateMethods = 'added removed on contract'; //update\t\n\n        var _lastUpdateTime;\n\n        var _swallowedUpdateHints = {};\n\n        var _swallowedUpdateTimeout;\n\n        var _swallowUpdateLag = 42;\n        var _updateOnLoadEventName = 'load';\n        var _updateOnLoadElms = []; //DOM elements:\t\n\n        var _windowElement;\n\n        var _documentElement;\n\n        var _htmlElement;\n\n        var _bodyElement;\n\n        var _targetElement; //the target element of this OverlayScrollbars object\t\n\n\n        var _hostElement; //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\n\n\n        var _sizeAutoObserverElement; //observes size auto changes\t\n\n\n        var _sizeObserverElement; //observes size and padding changes\t\n\n\n        var _paddingElement; //manages the padding\t\n\n\n        var _viewportElement; //is the viewport of our scrollbar model\t\n\n\n        var _contentElement; //the element which holds the content\t\n\n\n        var _contentArrangeElement; //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\n\n\n        var _contentGlueElement; //has always the size of the content element\t\n\n\n        var _textareaCoverElement; //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\n\n\n        var _scrollbarCornerElement;\n\n        var _scrollbarHorizontalElement;\n\n        var _scrollbarHorizontalTrackElement;\n\n        var _scrollbarHorizontalHandleElement;\n\n        var _scrollbarVerticalElement;\n\n        var _scrollbarVerticalTrackElement;\n\n        var _scrollbarVerticalHandleElement;\n\n        var _windowElementNative;\n\n        var _documentElementNative;\n\n        var _targetElementNative;\n\n        var _hostElementNative;\n\n        var _sizeAutoObserverElementNative;\n\n        var _sizeObserverElementNative;\n\n        var _paddingElementNative;\n\n        var _viewportElementNative;\n\n        var _contentElementNative; //Cache:\t\n\n\n        var _hostSizeCache;\n\n        var _contentScrollSizeCache;\n\n        var _arrangeContentSizeCache;\n\n        var _hasOverflowCache;\n\n        var _hideOverflowCache;\n\n        var _widthAutoCache;\n\n        var _heightAutoCache;\n\n        var _cssBoxSizingCache;\n\n        var _cssPaddingCache;\n\n        var _cssBorderCache;\n\n        var _cssMarginCache;\n\n        var _cssDirectionCache;\n\n        var _cssDirectionDetectedCache;\n\n        var _paddingAbsoluteCache;\n\n        var _clipAlwaysCache;\n\n        var _contentGlueSizeCache;\n\n        var _overflowBehaviorCache;\n\n        var _overflowAmountCache;\n\n        var _ignoreOverlayScrollbarHidingCache;\n\n        var _autoUpdateCache;\n\n        var _sizeAutoCapableCache;\n\n        var _contentElementScrollSizeChangeDetectedCache;\n\n        var _hostElementSizeChangeDetectedCache;\n\n        var _scrollbarsVisibilityCache;\n\n        var _scrollbarsAutoHideCache;\n\n        var _scrollbarsClickScrollingCache;\n\n        var _scrollbarsDragScrollingCache;\n\n        var _resizeCache;\n\n        var _normalizeRTLCache;\n\n        var _classNameCache;\n\n        var _oldClassName;\n\n        var _textareaAutoWrappingCache;\n\n        var _textareaInfoCache;\n\n        var _textareaSizeCache;\n\n        var _textareaDynHeightCache;\n\n        var _textareaDynWidthCache;\n\n        var _bodyMinSizeCache;\n\n        var _updateAutoCache = {}; //MutationObserver:\t\n\n        var _mutationObserverHost;\n\n        var _mutationObserverContent;\n\n        var _mutationObserverHostCallback;\n\n        var _mutationObserverContentCallback;\n\n        var _mutationObserversConnected;\n\n        var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\n\n        var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget); //events:\t\n\n\n        var _destroyEvents = []; //textarea:\t\n\n        var _textareaHasFocus; //scrollbars:\t\n\n\n        var _scrollbarsAutoHideTimeoutId;\n\n        var _scrollbarsAutoHideMoveTimeoutId;\n\n        var _scrollbarsAutoHideDelay;\n\n        var _scrollbarsAutoHideNever;\n\n        var _scrollbarsAutoHideScroll;\n\n        var _scrollbarsAutoHideMove;\n\n        var _scrollbarsAutoHideLeave;\n\n        var _scrollbarsHandleHovered;\n\n        var _scrollbarsHandlesDefineScrollPos; //resize\t\n\n\n        var _resizeNone;\n\n        var _resizeBoth;\n\n        var _resizeHorizontal;\n\n        var _resizeVertical; //==== Event Listener ====//\t\n\n        /**\t\r\n         * Adds or removes a event listener from the given element. \t\r\n         * @param element The element to which the event listener shall be applied or removed.\t\r\n         * @param eventNames The name(s) of the events.\t\r\n         * @param listener The method which shall be called.\t\r\n         * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n         * @param passiveOrOptions The options for the event.\r\n         */\n\n\n        function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\n          var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\n          var method = remove ? 'removeEventListener' : 'addEventListener';\n          var onOff = remove ? 'off' : 'on';\n          var events = collected ? false : eventNames.split(_strSpace);\n          var i = 0;\n          var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\n          var passive = _supportPassiveEvents && (passiveOrOptionsIsObj ? passiveOrOptions._passive : passiveOrOptions) || false;\n          var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\n          var nativeParam = _supportPassiveEvents ? {\n            passive: passive,\n            capture: capture\n          } : capture;\n\n          if (collected) {\n            for (; i < eventNames[LEXICON.l]; i++) {\n              setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\n            }\n          } else {\n            for (; i < events[LEXICON.l]; i++) {\n              if (_supportPassiveEvents) {\n                element[0][method](events[i], listener, nativeParam);\n              } else {\n                element[onOff](events[i], listener);\n              }\n            }\n          }\n        }\n\n        function addDestroyEventListener(element, eventNames, listener, passive) {\n          setupResponsiveEventListener(element, eventNames, listener, false, passive);\n\n          _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\n        } //==== Resize Observer ====//\n\n        /**\r\n         * Adds or removes a resize observer from the given element.\r\n         * @param targetElement The element to which the resize observer shall be added or removed.\r\n         * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n         */\n\n\n        function setupResizeObserver(targetElement, onElementResizedCallback) {\n          if (targetElement) {\n            var resizeObserver = COMPATIBILITY.rO();\n            var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\n            var strChildNodes = 'childNodes';\n            var constScroll = 3333333;\n\n            var callback = function callback() {\n              targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\n\n              onElementResizedCallback();\n            }; //add resize observer:\n\n\n            if (onElementResizedCallback) {\n              if (_supportResizeObserver) {\n                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\n                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\n                observer.observe(element);\n              } else {\n                if (_msieVersion > 9 || !_autoUpdateRecommended) {\n                  targetElement.prepend(generateDiv(_classNameResizeObserverElement, generateDiv({\n                    c: _classNameResizeObserverItemElement,\n                    dir: 'ltr'\n                  }, generateDiv(_classNameResizeObserverItemElement, generateDiv(_classNameResizeObserverItemFinalElement)) + generateDiv(_classNameResizeObserverItemElement, generateDiv({\n                    c: _classNameResizeObserverItemFinalElement,\n                    style: 'width: 200%; height: 200%'\n                  })))));\n                  var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\n                  var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\n                  var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\n                  var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\n                  var widthCache = observerElement[LEXICON.oW];\n                  var heightCache = observerElement[LEXICON.oH];\n                  var isDirty;\n                  var rAFId;\n                  var currWidth;\n                  var currHeight;\n                  var factor = 2;\n                  var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\n\n                  var reset = function reset() {\n                    /*\r\n                     var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var expandChildCSS = {};\r\n                     expandChildCSS[_strWidth] = sizeResetWidth;\r\n                     expandChildCSS[_strHeight] = sizeResetHeight;\r\n                     expandElementChild.css(expandChildCSS);\r\n                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     */\n                    expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n\n                    shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n                  };\n\n                  var onResized = function onResized() {\n                    rAFId = 0;\n                    if (!isDirty) return;\n                    widthCache = currWidth;\n                    heightCache = currHeight;\n                    callback();\n                  };\n\n                  var onScroll = function onScroll(event) {\n                    currWidth = observerElement[LEXICON.oW];\n                    currHeight = observerElement[LEXICON.oH];\n                    isDirty = currWidth != widthCache || currHeight != heightCache;\n\n                    if (event && isDirty && !rAFId) {\n                      COMPATIBILITY.cAF()(rAFId);\n                      rAFId = COMPATIBILITY.rAF()(onResized);\n                    } else if (!event) onResized();\n\n                    reset();\n\n                    if (event) {\n                      COMPATIBILITY.prvD(event);\n                      COMPATIBILITY.stpP(event);\n                    }\n\n                    return false;\n                  };\n\n                  var expandChildCSS = {};\n                  var observerElementCSS = {};\n                  setTopRightBottomLeft(observerElementCSS, _strEmpty, [-((nativeScrollbarSize.y + 1) * factor), nativeScrollbarSize.x * -factor, nativeScrollbarSize.y * -factor, -((nativeScrollbarSize.x + 1) * factor)]);\n                  FRAMEWORK(observerElement).css(observerElementCSS);\n                  expandElement.on(_strScroll, onScroll);\n                  shrinkElement.on(_strScroll, onScroll);\n                  targetElement.on(strAnimationStartEvent, function () {\n                    onScroll(false);\n                  }); //lets assume that the divs will never be that large and a constant value is enough\n\n                  expandChildCSS[_strWidth] = constScroll;\n                  expandChildCSS[_strHeight] = constScroll;\n                  expandElementChild.css(expandChildCSS);\n                  reset();\n                } else {\n                  var attachEvent = _documentElementNative.attachEvent;\n                  var isIE = _msieVersion !== undefined$1;\n\n                  if (attachEvent) {\n                    targetElement.prepend(generateDiv(_classNameResizeObserverElement));\n                    findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\n                  } else {\n                    var obj = _documentElementNative.createElement(TYPES.o);\n\n                    obj.setAttribute(LEXICON.ti, '-1');\n                    obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\n\n                    obj.onload = function () {\n                      var wnd = this.contentDocument.defaultView;\n                      wnd.addEventListener('resize', callback);\n                      wnd.document.documentElement.style.display = 'none';\n                    };\n\n                    obj.type = 'text/html';\n                    if (isIE) targetElement.prepend(obj);\n                    obj.data = 'about:blank';\n                    if (!isIE) targetElement.prepend(obj);\n                    targetElement.on(strAnimationStartEvent, callback);\n                  }\n                }\n              }\n\n              if (targetElement[0] === _sizeObserverElementNative) {\n                var directionChanged = function directionChanged() {\n                  var dir = _hostElement.css('direction');\n\n                  var css = {};\n                  var scrollLeftValue = 0;\n                  var result = false;\n\n                  if (dir !== _cssDirectionDetectedCache) {\n                    if (dir === 'ltr') {\n                      css[_strLeft] = 0;\n                      css[_strRight] = _strAuto;\n                      scrollLeftValue = constScroll;\n                    } else {\n                      css[_strLeft] = _strAuto;\n                      css[_strRight] = 0;\n                      scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\n                    } //execution order is important for IE!!!\n\n\n                    _sizeObserverElement.children().eq(0).css(css);\n\n                    _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\n\n                    _cssDirectionDetectedCache = dir;\n                    result = true;\n                  }\n\n                  return result;\n                };\n\n                directionChanged();\n                addDestroyEventListener(targetElement, _strScroll, function (event) {\n                  if (directionChanged()) update();\n                  COMPATIBILITY.prvD(event);\n                  COMPATIBILITY.stpP(event);\n                  return false;\n                });\n              }\n            } //remove resize observer:\n            else {\n              if (_supportResizeObserver) {\n                var element = targetElement.contents()[0];\n                var resizeObserverObj = element[_strResizeObserverProperty];\n\n                if (resizeObserverObj) {\n                  resizeObserverObj.disconnect();\n                  delete element[_strResizeObserverProperty];\n                }\n              } else {\n                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\n              }\n            }\n          }\n        }\n        /**\r\n         * Freezes or unfreezes the given resize observer.\r\n         * @param targetElement The element to which the target resize observer is applied.\r\n         * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n         \r\n        function freezeResizeObserver(targetElement, freeze) {\r\n            if (targetElement !== undefined) {\r\n                if(freeze) {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].unobserve(element);\r\n                    }\r\n                    else {\r\n                        targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                        var w = targetElement.css(_strWidth);\r\n                        var h = targetElement.css(_strHeight);\r\n                        var css = {};\r\n                        css[_strWidth] = w;\r\n                        css[_strHeight] = h;\r\n                        targetElement.css(css);\r\n                    }\r\n                }\r\n                else {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].observe(element);\r\n                    }\r\n                    else {\r\n                        var css = { };\r\n                        css[_strHeight] = _strEmpty;\r\n                        css[_strWidth] = _strEmpty;\r\n                        targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        */\n        //==== Mutation Observers ====//\n\n        /**\r\n         * Creates MutationObservers for the host and content Element if they are supported.\r\n         */\n\n\n        function createMutationObservers() {\n          if (_supportMutationObserver) {\n            var mutationObserverContentLag = 11;\n            var mutationObserver = COMPATIBILITY.mO();\n            var contentLastUpdate = COMPATIBILITY.now();\n            var mutationTarget;\n            var mutationAttrName;\n            var mutationIsClass;\n            var oldMutationVal;\n            var newClassVal;\n            var hostClassNameRegex;\n            var contentTimeout;\n            var now;\n            var sizeAuto;\n            var action;\n\n            _mutationObserverHostCallback = function _mutationObserverHostCallback(mutations) {\n              var doUpdate = false;\n              var doUpdateForce = false;\n              var mutation;\n              var mutatedAttrs = [];\n\n              if (_initialized && !_sleeping) {\n                each(mutations, function () {\n                  mutation = this;\n                  mutationTarget = mutation.target;\n                  mutationAttrName = mutation.attributeName;\n                  mutationIsClass = mutationAttrName === LEXICON.c;\n                  oldMutationVal = mutation.oldValue;\n                  newClassVal = mutationTarget.className;\n\n                  if (_domExists && mutationIsClass && !doUpdateForce) {\n                    // if old class value contains _classNameHostElementForeign and new class value doesn't\n                    if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\n                      hostClassNameRegex = createHostClassNameRegExp(true);\n                      _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\n                        return name.match(hostClassNameRegex);\n                      })).join(_strSpace);\n                      doUpdate = doUpdateForce = true;\n                    }\n                  }\n\n                  if (!doUpdate) {\n                    doUpdate = mutationIsClass ? hostClassNamesChanged(oldMutationVal, newClassVal) : mutationAttrName === LEXICON.s ? oldMutationVal !== mutationTarget[LEXICON.s].cssText : true;\n                  }\n\n                  mutatedAttrs.push(mutationAttrName);\n                });\n                updateViewportAttrsFromTarget(mutatedAttrs);\n                if (doUpdate) _base.update(doUpdateForce || _strAuto);\n              }\n\n              return doUpdate;\n            };\n\n            _mutationObserverContentCallback = function _mutationObserverContentCallback(mutations) {\n              var doUpdate = false;\n              var mutation;\n\n              if (_initialized && !_sleeping) {\n                each(mutations, function () {\n                  mutation = this;\n                  doUpdate = isUnknownMutation(mutation);\n                  return !doUpdate;\n                });\n\n                if (doUpdate) {\n                  now = COMPATIBILITY.now();\n                  sizeAuto = _heightAutoCache || _widthAutoCache;\n\n                  action = function action() {\n                    if (!_destroyed) {\n                      contentLastUpdate = now; //if cols, rows or wrap attr was changed\n\n                      if (_isTextarea) textareaUpdate();\n                      if (sizeAuto) update();else _base.update(_strAuto);\n                    }\n                  };\n\n                  clearTimeout(contentTimeout);\n                  if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto) action();else contentTimeout = setTimeout(action, mutationObserverContentLag);\n                }\n              }\n\n              return doUpdate;\n            };\n\n            _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\n            _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\n          }\n        }\n        /**\r\n         * Connects the MutationObservers if they are supported.\r\n         */\n\n\n        function connectMutationObservers() {\n          if (_supportMutationObserver && !_mutationObserversConnected) {\n            _mutationObserverHost.observe(_hostElementNative, {\n              attributes: true,\n              attributeOldValue: true,\n              attributeFilter: _mutationObserverAttrsHost\n            });\n\n            _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\n              attributes: true,\n              attributeOldValue: true,\n              subtree: !_isTextarea,\n              childList: !_isTextarea,\n              characterData: !_isTextarea,\n              attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\n            });\n\n            _mutationObserversConnected = true;\n          }\n        }\n        /**\r\n         * Disconnects the MutationObservers if they are supported.\r\n         */\n\n\n        function disconnectMutationObservers() {\n          if (_supportMutationObserver && _mutationObserversConnected) {\n            _mutationObserverHost.disconnect();\n\n            _mutationObserverContent.disconnect();\n\n            _mutationObserversConnected = false;\n          }\n        } //==== Events of elements ====//\n\n        /**\r\n         * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n         * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n         * If there are any size changes, the update method gets called.\r\n         */\n\n\n        function hostOnResized() {\n          if (!_sleeping) {\n            var changed;\n            var hostSize = {\n              w: _sizeObserverElementNative[LEXICON.sW],\n              h: _sizeObserverElementNative[LEXICON.sH]\n            };\n            changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\n            _hostElementSizeChangeDetectedCache = hostSize;\n            if (changed) update({\n              _hostSizeChanged: true\n            });\n          }\n        }\n        /**\r\n         * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n         */\n\n\n        function hostOnMouseEnter() {\n          if (_scrollbarsAutoHideLeave) refreshScrollbarsAutoHide(true);\n        }\n        /**\r\n         * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n         */\n\n\n        function hostOnMouseLeave() {\n          if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging)) refreshScrollbarsAutoHide(false);\n        }\n        /**\r\n         * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n         */\n\n\n        function hostOnMouseMove() {\n          if (_scrollbarsAutoHideMove) {\n            refreshScrollbarsAutoHide(true);\n            clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\n            _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\n              if (_scrollbarsAutoHideMove && !_destroyed) refreshScrollbarsAutoHide(false);\n            }, 100);\n          }\n        }\n        /**\r\n         * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n         * @param event The select start event.\r\n         */\n\n\n        function documentOnSelectStart(event) {\n          COMPATIBILITY.prvD(event);\n          return false;\n        }\n        /**\t\r\n         * A callback which will be called after a element has loaded.\t\r\n         */\n\n\n        function updateOnLoadCallback(event) {\n          var elm = FRAMEWORK(event.target);\n          eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n            if (elm.is(updateOnLoadSelector)) {\n              update({\n                _contentSizeChanged: true\n              });\n            }\n          });\n        }\n        /**\r\n        * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n        * @param destroy Indicates whether the events shall be added or removed.\r\n        */\n\n\n        function setupHostMouseTouchEvents(destroy) {\n          if (!destroy) setupHostMouseTouchEvents(true);\n          setupResponsiveEventListener(_hostElement, _strMouseTouchMoveEvent.split(_strSpace)[0], hostOnMouseMove, !_scrollbarsAutoHideMove || destroy, true);\n          setupResponsiveEventListener(_hostElement, [_strMouseEnter, _strMouseLeave], [hostOnMouseEnter, hostOnMouseLeave], !_scrollbarsAutoHideLeave || destroy, true); //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\n\n          if (!_initialized && !destroy) _hostElement.one('mouseover', hostOnMouseEnter);\n        } //==== Update Detection ====//\n\n        /**\r\n         * Measures the min width and min height of the body element and refreshes the related cache.\r\n         * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n         */\n\n\n        function bodyMinSizeChanged() {\n          var bodyMinSize = {};\n\n          if (_isBody && _contentArrangeElement) {\n            bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\n            bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\n            bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\n            bodyMinSize.f = true; //flag for \"measured at least once\"\n          }\n\n          _bodyMinSizeCache = bodyMinSize;\n          return !!bodyMinSize.c;\n        }\n        /**\r\n         * Returns true if the class names really changed (new class without plugin host prefix)\r\n         * @param oldClassNames The old ClassName string or array.\r\n         * @param newClassNames The new ClassName string or array.\r\n         * @returns {boolean} True if the class names has really changed, false otherwise.\r\n         */\n\n\n        function hostClassNamesChanged(oldClassNames, newClassNames) {\n          var currClasses = _typeof(newClassNames) == TYPES.s ? newClassNames.split(_strSpace) : [];\n          var oldClasses = _typeof(oldClassNames) == TYPES.s ? oldClassNames.split(_strSpace) : [];\n          var diff = getArrayDifferences(oldClasses, currClasses); // remove none theme from diff list to prevent update\n\n          var idx = inArray(_classNameThemeNone, diff);\n          var i;\n          var regex;\n          if (idx > -1) diff.splice(idx, 1);\n\n          if (diff[LEXICON.l] > 0) {\n            regex = createHostClassNameRegExp(true, true);\n\n            for (i = 0; i < diff.length; i++) {\n              if (!diff[i].match(regex)) {\n                return true;\n              }\n            }\n          }\n\n          return false;\n        }\n        /**\r\n         * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n         * @param mutation The mutation which shall be checked.\r\n         * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n         */\n\n\n        function isUnknownMutation(mutation) {\n          var attributeName = mutation.attributeName;\n          var mutationTarget = mutation.target;\n          var mutationType = mutation.type;\n          var strClosest = 'closest';\n          if (mutationTarget === _contentElementNative) return attributeName === null;\n\n          if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\n            //ignore className changes by the plugin\t\n            if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement)) return hostClassNamesChanged(mutation.oldValue, mutationTarget.className); //only do it of browser support it natively\t\n\n            if (_typeof(mutationTarget[strClosest]) != TYPES.f) return true;\n            if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null) return false;\n          }\n\n          return true;\n        }\n        /**\r\n         * Returns true if the content size was changed since the last time this method was called.\r\n         * @returns {boolean} True if the content size was changed, false otherwise.\r\n         */\n\n\n        function updateAutoContentSizeChanged() {\n          if (_sleeping) return false;\n          var contentMeasureElement = getContentMeasureElement();\n          var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\n          var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\n          var css = {};\n          var float;\n          var bodyMinSizeC;\n          var changed;\n          var contentElementScrollSize;\n\n          if (setCSS) {\n            float = _contentElement.css(_strFloat);\n            css[_strFloat] = _isRTL ? _strRight : _strLeft;\n            css[_strWidth] = _strAuto;\n\n            _contentElement.css(css);\n          }\n\n          contentElementScrollSize = {\n            w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\n            h: contentMeasureElement[LEXICON.sH] + textareaValueLength\n          };\n\n          if (setCSS) {\n            css[_strFloat] = float;\n            css[_strWidth] = _strHundredPercent;\n\n            _contentElement.css(css);\n          }\n\n          bodyMinSizeC = bodyMinSizeChanged();\n          changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\n          _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\n          return changed || bodyMinSizeC;\n        }\n        /**\r\n         * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n         * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n         */\n\n\n        function meaningfulAttrsChanged() {\n          if (_sleeping || _mutationObserversConnected) return;\n          var elem;\n          var curr;\n          var cache;\n          var changedAttrs = [];\n          var checks = [{\n            _elem: _hostElement,\n            _attrs: _mutationObserverAttrsHost.concat(':visible')\n          }, {\n            _elem: _isTextarea ? _targetElement : undefined$1,\n            _attrs: _mutationObserverAttrsTextarea\n          }];\n          each(checks, function (index, check) {\n            elem = check._elem;\n\n            if (elem) {\n              each(check._attrs, function (index, attr) {\n                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\n                cache = _updateAutoCache[attr];\n\n                if (checkCache(curr, cache)) {\n                  changedAttrs.push(attr);\n                }\n\n                _updateAutoCache[attr] = curr;\n              });\n            }\n          });\n          updateViewportAttrsFromTarget(changedAttrs);\n          return changedAttrs[LEXICON.l] > 0;\n        }\n        /**\r\n         * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n         * @param propertyName The CSS property name.\r\n         * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n         */\n\n\n        function isSizeAffectingCSSProperty(propertyName) {\n          if (!_initialized) return true;\n          var flexGrow = 'flex-grow';\n          var flexShrink = 'flex-shrink';\n          var flexBasis = 'flex-basis';\n          var affectingPropsX = [_strWidth, _strMinMinus + _strWidth, _strMaxMinus + _strWidth, _strMarginMinus + _strLeft, _strMarginMinus + _strRight, _strLeft, _strRight, 'font-weight', 'word-spacing', flexGrow, flexShrink, flexBasis];\n          var affectingPropsXContentBox = [_strPaddingMinus + _strLeft, _strPaddingMinus + _strRight, _strBorderMinus + _strLeft + _strWidth, _strBorderMinus + _strRight + _strWidth];\n          var affectingPropsY = [_strHeight, _strMinMinus + _strHeight, _strMaxMinus + _strHeight, _strMarginMinus + _strTop, _strMarginMinus + _strBottom, _strTop, _strBottom, 'line-height', flexGrow, flexShrink, flexBasis];\n          var affectingPropsYContentBox = [_strPaddingMinus + _strTop, _strPaddingMinus + _strBottom, _strBorderMinus + _strTop + _strWidth, _strBorderMinus + _strBottom + _strWidth];\n          var _strS = 's';\n          var _strVS = 'v-s';\n          var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\n          var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\n          var sizeIsAffected = false;\n\n          var checkPropertyName = function checkPropertyName(arr, name) {\n            for (var i = 0; i < arr[LEXICON.l]; i++) {\n              if (arr[i] === name) return true;\n            }\n\n            return false;\n          };\n\n          if (checkY) {\n            sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\n          }\n\n          if (checkX && !sizeIsAffected) {\n            sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\n          }\n\n          return sizeIsAffected;\n        } //==== Update ====//\n\n        /**\r\n         * Sets the attribute values of the viewport element to the values from the target element.\r\n         * The value of a attribute is only set if the attribute is whitelisted.\r\n         * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n         */\n\n\n        function updateViewportAttrsFromTarget(attrs) {\n          attrs = attrs || _viewportAttrsFromTarget;\n          each(attrs, function (index, attr) {\n            if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\n              var targetAttr = _targetElement.attr(attr);\n\n              if (type(targetAttr) == TYPES.s) {\n                _viewportElement.attr(attr, targetAttr);\n              } else {\n                _viewportElement.removeAttr(attr);\n              }\n            }\n          });\n        }\n        /**\r\n         * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n         */\n\n\n        function textareaUpdate() {\n          if (!_sleeping) {\n            var wrapAttrOff = !_textareaAutoWrappingCache;\n            var minWidth = _viewportSize.w;\n            var minHeight = _viewportSize.h;\n            var css = {};\n            var doMeasure = _widthAutoCache || wrapAttrOff;\n            var origWidth;\n            var width;\n            var origHeight;\n            var height; //reset min size\n\n            css[_strMinMinus + _strWidth] = _strEmpty;\n            css[_strMinMinus + _strHeight] = _strEmpty; //set width auto\n\n            css[_strWidth] = _strAuto;\n\n            _targetElement.css(css); //measure width\n\n\n            origWidth = _targetElementNative[LEXICON.oW];\n            width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\n            /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\n            //set measured width\n\n            css[_strWidth] = _widthAutoCache ? _strAuto\n            /*width*/\n            : _strHundredPercent;\n            css[_strMinMinus + _strWidth] = _strHundredPercent; //set height auto\n\n            css[_strHeight] = _strAuto;\n\n            _targetElement.css(css); //measure height\n\n\n            origHeight = _targetElementNative[LEXICON.oH];\n            height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1); //append correct size values\n\n            css[_strWidth] = width;\n            css[_strHeight] = height;\n\n            _textareaCoverElement.css(css); //apply min width / min height to prevent textarea collapsing\n\n\n            css[_strMinMinus + _strWidth] = minWidth\n            /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/\n            ;\n            css[_strMinMinus + _strHeight] = minHeight\n            /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/\n            ;\n\n            _targetElement.css(css);\n\n            return {\n              _originalWidth: origWidth,\n              _originalHeight: origHeight,\n              _dynamicWidth: width,\n              _dynamicHeight: height\n            };\n          }\n        }\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param updateHints A objects which contains hints for this update:\r\n         * {\r\n         *   _hostSizeChanged : boolean,\r\n         *   _contentSizeChanged : boolean,\r\n         *   _force : boolean,                             == preventSwallowing\r\n         *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n        *  }\r\n         */\n\n\n        function update(updateHints) {\n          clearTimeout(_swallowedUpdateTimeout);\n          updateHints = updateHints || {};\n          _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\n          _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\n          _swallowedUpdateHints._force |= updateHints._force;\n          var now = COMPATIBILITY.now();\n          var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\n          var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\n          var force = !!_swallowedUpdateHints._force;\n          var changedOptions = updateHints._changedOptions;\n          var swallow = _initialized && !_destroyed && !force && !changedOptions && now - _lastUpdateTime < _swallowUpdateLag && !_heightAutoCache && !_widthAutoCache;\n          var displayIsHidden;\n          if (swallow) _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag); //abort update due to:\n          //destroyed\n          //swallowing\n          //sleeping\n          //host is hidden or has false display\n\n          if (_destroyed || swallow || _sleeping && !changedOptions || _initialized && !force && (displayIsHidden = _hostElement.is(':hidden')) || _hostElement.css('display') === 'inline') return;\n          _lastUpdateTime = now;\n          _swallowedUpdateHints = {}; //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\n\n          if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n            //native scrollbars are hidden, so change the values to zero\n            _nativeScrollbarSize.x = 0;\n            _nativeScrollbarSize.y = 0;\n          } else {\n            //refresh native scrollbar size (in case of zoom)\n            _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n          } // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\n          // The calculation: [scrollbar size +3 *3]\n          // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\n          // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\n\n\n          _nativeScrollbarMinSize = {\n            x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\n            y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\n          };\n          changedOptions = changedOptions || {}; //freezeResizeObserver(_sizeObserverElement, true);\n          //freezeResizeObserver(_sizeAutoObserverElement, true);\n\n          var checkCacheAutoForce = function checkCacheAutoForce() {\n            return checkCache.apply(this, [].slice.call(arguments).concat([force]));\n          }; //save current scroll offset\n\n\n          var currScroll = {\n            x: _viewportElement[_strScrollLeft](),\n            y: _viewportElement[_strScrollTop]()\n          };\n          var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\n          var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea; //scrollbars visibility:\n\n          var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\n          var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache); //scrollbars autoHide:\n\n          var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\n          var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache); //scrollbars click scrolling\n\n          var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\n          var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache); //scrollbars drag scrolling\n\n          var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\n          var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache); //className\n\n          var className = _currentPreparedOptions.className;\n          var classNameChanged = checkCacheAutoForce(className, _classNameCache); //resize\n\n          var resize = _currentPreparedOptions.resize;\n          var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\n          //paddingAbsolute\n\n          var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\n          var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache); //clipAlways\n\n          var clipAlways = _currentPreparedOptions.clipAlways;\n          var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache); //sizeAutoCapable\n\n          var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\n\n          var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache); //showNativeScrollbars\n\n          var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\n          var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache); //autoUpdate\n\n          var autoUpdate = _currentPreparedOptions.autoUpdate;\n          var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache); //overflowBehavior\n\n          var overflowBehavior = _currentPreparedOptions.overflowBehavior;\n          var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force); //dynWidth:\n\n          var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\n          var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth); //dynHeight:\n\n          var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\n          var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight); //scrollbars visibility\n\n          _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\n          _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\n          _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\n          _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l'; //scrollbars autoHideDelay\n\n          _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay; //old className\n\n          _oldClassName = _classNameCache; //resize\n\n          _resizeNone = resize === 'n';\n          _resizeBoth = resize === 'b';\n          _resizeHorizontal = resize === 'h';\n          _resizeVertical = resize === 'v'; //normalizeRTL\n\n          _normalizeRTLCache = _currentPreparedOptions.normalizeRTL; //ignore overlay scrollbar hiding\n\n          ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y; //refresh options cache\n\n          _scrollbarsVisibilityCache = scrollbarsVisibility;\n          _scrollbarsAutoHideCache = scrollbarsAutoHide;\n          _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\n          _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\n          _classNameCache = className;\n          _resizeCache = resize;\n          _paddingAbsoluteCache = paddingAbsolute;\n          _clipAlwaysCache = clipAlways;\n          _sizeAutoCapableCache = sizeAutoCapable;\n          _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\n          _autoUpdateCache = autoUpdate;\n          _overflowBehaviorCache = extendDeep({}, overflowBehavior);\n          _textareaDynWidthCache = textareaDynWidth;\n          _textareaDynHeightCache = textareaDynHeight;\n          _hasOverflowCache = _hasOverflowCache || {\n            x: false,\n            y: false\n          }; //set correct class name to the host element\n\n          if (classNameChanged) {\n            removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\n            addClass(_hostElement, className !== undefined$1 && className !== null && className.length > 0 ? className : _classNameThemeNone);\n          } //set correct auto Update\n\n\n          if (autoUpdateChanged) {\n            if (autoUpdate === true || autoUpdate === null && _autoUpdateRecommended) {\n              disconnectMutationObservers();\n              autoUpdateLoop.add(_base);\n            } else {\n              autoUpdateLoop.remove(_base);\n              connectMutationObservers();\n            }\n          } //activate or deactivate size auto capability\n\n\n          if (sizeAutoCapableChanged) {\n            if (sizeAutoCapable) {\n              if (_contentGlueElement) {\n                _contentGlueElement.show();\n              } else {\n                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\n\n                _paddingElement.before(_contentGlueElement);\n              }\n\n              if (_sizeAutoObserverAdded) {\n                _sizeAutoObserverElement.show();\n              } else {\n                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\n                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\n\n                _contentGlueElement.before(_sizeAutoObserverElement);\n\n                var oldSize = {\n                  w: -1,\n                  h: -1\n                };\n                setupResizeObserver(_sizeAutoObserverElement, function () {\n                  var newSize = {\n                    w: _sizeAutoObserverElementNative[LEXICON.oW],\n                    h: _sizeAutoObserverElementNative[LEXICON.oH]\n                  };\n\n                  if (checkCache(newSize, oldSize)) {\n                    if (_initialized && _heightAutoCache && newSize.h > 0 || _widthAutoCache && newSize.w > 0) {\n                      update();\n                    } else if (_initialized && !_heightAutoCache && newSize.h === 0 || !_widthAutoCache && newSize.w === 0) {\n                      update();\n                    }\n                  }\n\n                  oldSize = newSize;\n                });\n                _sizeAutoObserverAdded = true; //fix heightAuto detector bug if height is fixed but contentHeight is 0.\n                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\n\n                if (_cssCalc !== null) _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\n              }\n            } else {\n              if (_sizeAutoObserverAdded) _sizeAutoObserverElement.hide();\n              if (_contentGlueElement) _contentGlueElement.hide();\n            }\n          } //if force, update all resizeObservers too\n\n\n          if (force) {\n            _sizeObserverElement.find('*').trigger(_strScroll);\n\n            if (_sizeAutoObserverAdded) _sizeAutoObserverElement.find('*').trigger(_strScroll);\n          } //display hidden:\n\n\n          displayIsHidden = displayIsHidden === undefined$1 ? _hostElement.is(':hidden') : displayIsHidden; //textarea AutoWrapping:\n\n          var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\n          var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache); //detect direction:\n\n          var cssDirection = _hostElement.css('direction');\n\n          var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache); //detect box-sizing:\n\n          var boxSizing = _hostElement.css('box-sizing');\n\n          var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache); //detect padding:\n\n          var padding = getTopRightBottomLeftHost(_strPaddingMinus); //width + height auto detecting var:\n\n          var sizeAutoObserverElementBCRect; //exception occurs in IE8 sometimes (unknown exception)\n\n          try {\n            sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\n          } catch (ex) {\n            return;\n          }\n\n          _isRTL = cssDirection === 'rtl';\n          _isBorderBox = boxSizing === 'border-box';\n          var isRTLLeft = _isRTL ? _strLeft : _strRight;\n          var isRTLRight = _isRTL ? _strRight : _strLeft; //detect width auto:\n\n          var widthAutoResizeDetection = false;\n          var widthAutoObserverDetection = _sizeAutoObserverAdded && _hostElement.css(_strFloat) !== 'none'\n          /*|| _isTextarea */\n          ? MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0 && (!paddingAbsolute ? _hostElementNative[LEXICON.cW] - _paddingX > 0 : true) : false;\n\n          if (sizeAutoCapable && !widthAutoObserverDetection) {\n            var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\n\n            var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\n\n            _contentGlueElement.css(_strWidth, _strAuto);\n\n            var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n\n            if (!widthAutoResizeDetection) {\n              _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\n\n              tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n              _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n              widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n            }\n          }\n\n          var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\n          var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\n          var wasWidthAuto = !widthAuto && _widthAutoCache; //detect height auto:\n\n          var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0\n          /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */\n          : false;\n          var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\n          var wasHeightAuto = !heightAuto && _heightAutoCache; //detect border:\n          //we need the border only if border box and auto size\n\n          var updateBorderX = widthAuto && _isBorderBox || !_isBorderBox;\n          var updateBorderY = heightAuto && _isBorderBox || !_isBorderBox;\n          var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY); //detect margin:\n\n          var margin = getTopRightBottomLeftHost(_strMarginMinus); //vars to apply correct css\n\n          var contentElementCSS = {};\n          var contentGlueElementCSS = {}; //funcs\n\n          var getHostSize = function getHostSize() {\n            //has to be clientSize because offsetSize respect borders\n            return {\n              w: _hostElementNative[LEXICON.cW],\n              h: _hostElementNative[LEXICON.cH]\n            };\n          };\n\n          var getViewportSize = function getViewportSize() {\n            //viewport size is padding container because it never has padding, margin and a border\n            //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\n            //if this happens add the difference to the viewportSize to compensate the rounding error\n            return {\n              w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\n              h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\n            };\n          }; //set info for padding\n\n\n          var paddingAbsoluteX = _paddingX = padding.l + padding.r;\n          var paddingAbsoluteY = _paddingY = padding.t + padding.b;\n          paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\n          paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\n          padding.c = checkCacheAutoForce(padding, _cssPaddingCache); //set info for border\n\n          _borderX = border.l + border.r;\n          _borderY = border.t + border.b;\n          border.c = checkCacheAutoForce(border, _cssBorderCache); //set info for margin\n\n          _marginX = margin.l + margin.r;\n          _marginY = margin.t + margin.b;\n          margin.c = checkCacheAutoForce(margin, _cssMarginCache); //refresh cache\n\n          _textareaAutoWrappingCache = textareaAutoWrapping;\n          _cssDirectionCache = cssDirection;\n          _cssBoxSizingCache = boxSizing;\n          _widthAutoCache = widthAuto;\n          _heightAutoCache = heightAuto;\n          _cssPaddingCache = padding;\n          _cssBorderCache = border;\n          _cssMarginCache = margin; //IEFix direction changed\n\n          if (cssDirectionChanged && _sizeAutoObserverAdded) _sizeAutoObserverElement.css(_strFloat, isRTLRight); //apply padding:\n\n          if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\n            var paddingElementCSS = {};\n            var textareaCSS = {};\n            var paddingValues = [padding.t, padding.r, padding.b, padding.l];\n            setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\n\n            if (paddingAbsolute) {\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\n            } else {\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty);\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\n            }\n\n            _paddingElement.css(paddingElementCSS);\n\n            _targetElement.css(textareaCSS);\n          } //viewport size is padding container because it never has padding, margin and a border.\n\n\n          _viewportSize = getViewportSize(); //update Textarea\n\n          var textareaSize = _isTextarea ? textareaUpdate() : false;\n\n          var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\n\n          var textareaDynOrigSize = _isTextarea && textareaSize ? {\n            w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\n            h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\n          } : {};\n          _textareaSizeCache = textareaSize; //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\n\n          if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\n            contentElementCSS[_strHeight] = _strAuto;\n          } else if (heightAutoChanged || paddingAbsoluteChanged) {\n            contentElementCSS[_strHeight] = _strHundredPercent;\n          }\n\n          if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\n            contentElementCSS[_strWidth] = _strAuto;\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\n          } else if (widthAutoChanged || paddingAbsoluteChanged) {\n            contentElementCSS[_strWidth] = _strHundredPercent;\n            contentElementCSS[_strFloat] = _strEmpty;\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\n          }\n\n          if (widthAuto) {\n            //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\n            contentGlueElementCSS[_strWidth] = _strAuto;\n            contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\n            contentElementCSS[_strFloat] = isRTLRight;\n          } else {\n            contentGlueElementCSS[_strWidth] = _strEmpty;\n          }\n\n          if (heightAuto) {\n            //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\n            contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\n          } else {\n            contentGlueElementCSS[_strHeight] = _strEmpty;\n          }\n\n          if (sizeAutoCapable) _contentGlueElement.css(contentGlueElementCSS);\n\n          _contentElement.css(contentElementCSS); //CHECKPOINT HERE ~\n\n\n          contentElementCSS = {};\n          contentGlueElementCSS = {}; //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\n\n          if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\n            var strOverflow = 'overflow';\n            var strOverflowX = strOverflow + '-x';\n            var strOverflowY = strOverflow + '-y';\n            var strHidden = 'hidden';\n            var strVisible = 'visible'; //Reset the viewport (very important for natively overlaid scrollbars and zoom change\n            //don't change the overflow prop as it is very expensive and affects performance !A LOT!\n\n            if (!_nativeScrollbarStyling) {\n              var viewportElementResetCSS = {};\n              var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y : 0;\n              var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x : 0;\n              setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\n\n              _viewportElement.css(viewportElementResetCSS);\n            } //measure several sizes:\n\n\n            var contentMeasureElement = getContentMeasureElement(); //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\n\n            var contentSize = {\n              //use clientSize because natively overlaidScrollbars add borders\n              w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\n              h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\n            };\n            var scrollSize = {\n              w: contentMeasureElement[LEXICON.sW],\n              h: contentMeasureElement[LEXICON.sH]\n            }; //apply the correct viewport style and measure viewport size\n\n            if (!_nativeScrollbarStyling) {\n              viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\n              viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\n\n              _viewportElement.css(viewportElementResetCSS);\n            }\n\n            _viewportSize = getViewportSize(); //measure and correct several sizes\n\n            var hostSize = getHostSize();\n            var hostAbsoluteRectSize = {\n              w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\n              h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\n            };\n            var contentGlueSize = {\n              //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\n              //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\n              w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\n              h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\n            };\n            contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\n            _contentGlueSizeCache = contentGlueSize; //apply correct contentGlue size\n\n            if (sizeAutoCapable) {\n              //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\n              if (contentGlueSize.c || heightAuto || widthAuto) {\n                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\n                contentGlueElementCSS[_strHeight] = contentGlueSize.h; //textarea-sizes are already calculated correctly at this point\n\n                if (!_isTextarea) {\n                  contentSize = {\n                    //use clientSize because natively overlaidScrollbars add borders\n                    w: contentMeasureElement[LEXICON.cW],\n                    h: contentMeasureElement[LEXICON.cH]\n                  };\n                }\n              }\n\n              var textareaCoverCSS = {};\n\n              var setContentGlueElementCSSfunction = function setContentGlueElementCSSfunction(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var wh = scrollbarVars._w_h;\n                var strWH = scrollbarVars._width_height;\n                var autoSize = horizontal ? widthAuto : heightAuto;\n                var borderSize = horizontal ? _borderX : _borderY;\n                var paddingSize = horizontal ? _paddingX : _paddingY;\n                var marginSize = horizontal ? _marginX : _marginY;\n                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize); //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\n\n                if (!autoSize || !autoSize && border.c) contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1; //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\n\n                if (autoSize && contentSize[wh] < viewportSize && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\n                  if (_isTextarea) textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\n                  contentGlueElementCSS[strWH] -= 1;\n                } //make sure content glue size is at least 1\n\n\n                if (contentSize[wh] > 0) contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\n              };\n\n              setContentGlueElementCSSfunction(true);\n              setContentGlueElementCSSfunction(false);\n              if (_isTextarea) _textareaCoverElement.css(textareaCoverCSS);\n\n              _contentGlueElement.css(contentGlueElementCSS);\n            }\n\n            if (widthAuto) contentElementCSS[_strWidth] = _strHundredPercent;\n            if (widthAuto && !_isBorderBox && !_mutationObserversConnected) contentElementCSS[_strFloat] = 'none'; //apply and reset content style\n\n            _contentElement.css(contentElementCSS);\n\n            contentElementCSS = {}; //measure again, but this time all correct sizes:\n\n            var contentScrollSize = {\n              w: contentMeasureElement[LEXICON.sW],\n              h: contentMeasureElement[LEXICON.sH]\n            };\n            contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\n            _contentScrollSizeCache = contentScrollSize; //refresh viewport size after correct measuring\n\n            _viewportSize = getViewportSize();\n            hostSize = getHostSize();\n            hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\n            _hostSizeCache = hostSize;\n            var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\n            var previousOverflowAmount = _overflowAmountCache;\n            var overflowBehaviorIsVS = {};\n            var overflowBehaviorIsVH = {};\n            var overflowBehaviorIsS = {};\n            var overflowAmount = {};\n            var hasOverflow = {};\n            var hideOverflow = {};\n            var canScroll = {};\n\n            var viewportRect = _paddingElementNative[LEXICON.bCR]();\n\n            var setOverflowVariables = function setOverflowVariables(horizontal) {\n              var scrollbarVars = getScrollbarVars(horizontal);\n              var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n              var xyI = scrollbarVarsInverted._x_y;\n              var xy = scrollbarVars._x_y;\n              var wh = scrollbarVars._w_h;\n              var widthHeight = scrollbarVars._width_height;\n              var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\n              var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\n              var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\n              overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\n              overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\n              overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\n              overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\n              overflowAmount[xy] *= hideOverflowForceTextarea || checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1 ? 0 : 1;\n              hasOverflow[xy] = overflowAmount[xy] > 0; //hideOverflow:\n              //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\n              //xs || ys : true === overflow is hidden by \"overflow: scroll\"\n\n              hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI] : hasOverflow[xy];\n              hideOverflow[xy + 's'] = hideOverflow[xy] ? overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy] : false;\n              canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\n            };\n\n            setOverflowVariables(true);\n            setOverflowVariables(false);\n            overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\n            _overflowAmountCache = overflowAmount;\n            hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\n            _hasOverflowCache = hasOverflow;\n            hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\n            _hideOverflowCache = hideOverflow; //if native scrollbar is overlay at x OR y axis, prepare DOM\n\n            if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\n              var borderDesign = 'px solid transparent';\n              var contentArrangeElementCSS = {};\n              var arrangeContent = {};\n              var arrangeChanged = force;\n              var setContentElementCSS;\n\n              if (hasOverflow.x || hasOverflow.y) {\n                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\n                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\n                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\n                _arrangeContentSizeCache = arrangeContent;\n              }\n\n              if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\n                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\n\n                setContentElementCSS = function setContentElementCSS(horizontal) {\n                  var scrollbarVars = getScrollbarVars(horizontal);\n                  var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                  var xy = scrollbarVars._x_y;\n                  var strDirection = horizontal ? _strBottom : isRTLLeft;\n                  var invertedAutoSize = horizontal ? heightAuto : widthAuto;\n\n                  if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\n                    contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy] : _strEmpty;\n                    contentElementCSS[_strBorderMinus + strDirection] = (horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding ? _overlayScrollbarDummySize[xy] + borderDesign : _strEmpty;\n                  } else {\n                    arrangeContent[scrollbarVarsInverted._w_h] = contentElementCSS[_strMarginMinus + strDirection] = contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\n                    arrangeChanged = true;\n                  }\n                };\n\n                if (_nativeScrollbarStyling) {\n                  addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding);\n                } else {\n                  setContentElementCSS(true);\n                  setContentElementCSS(false);\n                }\n              }\n\n              if (ignoreOverlayScrollbarHiding) {\n                arrangeContent.w = arrangeContent.h = _strEmpty;\n                arrangeChanged = true;\n              }\n\n              if (arrangeChanged && !_nativeScrollbarStyling) {\n                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\n                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\n\n                if (!_contentArrangeElement) {\n                  _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\n\n                  _viewportElement.prepend(_contentArrangeElement);\n                }\n\n                _contentArrangeElement.css(contentArrangeElementCSS);\n              }\n\n              _contentElement.css(contentElementCSS);\n            }\n\n            var viewportElementCSS = {};\n            var paddingElementCSS = {};\n            var setViewportCSS;\n\n            if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\n              viewportElementCSS[isRTLRight] = _strEmpty;\n\n              setViewportCSS = function setViewportCSS(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                var xy = scrollbarVars._x_y;\n                var XY = scrollbarVars._X_Y;\n                var strDirection = horizontal ? _strBottom : isRTLLeft;\n\n                var reset = function reset() {\n                  viewportElementCSS[strDirection] = _strEmpty;\n                  _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\n                };\n\n                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\n                  viewportElementCSS[strOverflow + XY] = _strScroll;\n\n                  if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\n                    reset();\n                  } else {\n                    viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\n                    _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\n                  }\n                } else {\n                  viewportElementCSS[strOverflow + XY] = _strEmpty;\n                  reset();\n                }\n              };\n\n              setViewportCSS(true);\n              setViewportCSS(false); // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \n              // make viewport element greater in size (Firefox hide Scrollbars fix)\n              // because firefox starts hiding scrollbars on too small elements\n              // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\n              // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\n\n              if (!_nativeScrollbarStyling && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y) && (hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x || hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y)) {\n                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\n                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\n                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\n                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\n              } else {\n                viewportElementCSS[_strPaddingMinus + _strTop] = viewportElementCSS[_strMarginMinus + _strTop] = viewportElementCSS[_strPaddingMinus + isRTLRight] = viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\n              }\n\n              viewportElementCSS[_strPaddingMinus + isRTLLeft] = viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty; //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\n\n              if (hasOverflow.x && hideOverflow.x || hasOverflow.y && hideOverflow.y || hideOverflowForceTextarea) {\n                //only hide if is Textarea\n                if (_isTextarea && hideOverflowForceTextarea) {\n                  paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = strHidden;\n                }\n              } else {\n                if (!clipAlways || overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y) {\n                  //only un-hide if Textarea\n                  if (_isTextarea) {\n                    paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = _strEmpty;\n                  }\n\n                  viewportElementCSS[strOverflowX] = viewportElementCSS[strOverflowY] = strVisible;\n                }\n              }\n\n              _paddingElement.css(paddingElementCSS);\n\n              _viewportElement.css(viewportElementCSS);\n\n              viewportElementCSS = {}; //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\n\n              if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n                var elementStyle = _contentElementNative[LEXICON.s];\n                elementStyle.webkitTransform = 'scale(1)';\n                elementStyle.display = 'run-in';\n                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\n\n                elementStyle.webkitTransform = _strEmpty;\n              }\n              /*\r\n              //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n              if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                  _hostElement.hide();\r\n                  var dump = _hostElementNative[LEXICON.oH];\r\n                  _hostElement.show();\r\n              }\r\n              */\n\n            } //change to direction RTL and width auto Bugfix in Webkit\n            //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\n\n\n            contentElementCSS = {};\n\n            if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\n              if (_isRTL && widthAuto) {\n                var floatTmp = _contentElement.css(_strFloat);\n\n                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\n\n                _contentElement.css(_strFloat, floatTmp);\n\n                var posLeftWithFloat = MATH.round(_contentElement.position().left);\n                if (posLeftWithoutFloat !== posLeftWithFloat) contentElementCSS[_strLeft] = posLeftWithoutFloat;\n              } else {\n                contentElementCSS[_strLeft] = _strEmpty;\n              }\n            }\n\n            _contentElement.css(contentElementCSS); //handle scroll position\n\n\n            if (_isTextarea && contentSizeChanged) {\n              var textareaInfo = getTextareaInfo();\n\n              if (textareaInfo) {\n                var textareaRowsChanged = _textareaInfoCache === undefined$1 ? true : textareaInfo._rows !== _textareaInfoCache._rows;\n                var cursorRow = textareaInfo._cursorRow;\n                var cursorCol = textareaInfo._cursorColumn;\n                var widestRow = textareaInfo._widestRow;\n                var lastRow = textareaInfo._rows;\n                var lastCol = textareaInfo._columns;\n                var cursorPos = textareaInfo._cursorPosition;\n                var cursorMax = textareaInfo._cursorMax;\n                var cursorIsLastPosition = cursorPos >= cursorMax && _textareaHasFocus;\n                var textareaScrollAmount = {\n                  x: !textareaAutoWrapping && cursorCol === lastCol && cursorRow === widestRow ? _overflowAmountCache.x : -1,\n                  y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? currScroll.y === previousOverflowAmount.y : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\n                };\n                currScroll.x = textareaScrollAmount.x > -1 ? _isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\n\n                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\n              }\n\n              _textareaInfoCache = textareaInfo;\n            }\n\n            if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache) currScroll.x += _contentBorderSize.w || 0;\n            if (widthAuto) _hostElement[_strScrollLeft](0);\n            if (heightAuto) _hostElement[_strScrollTop](0);\n\n            _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y); //scrollbars management:\n\n\n            var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\n            var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\n            var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\n\n            var refreshScrollbarsVisibility = function refreshScrollbarsVisibility(showX, showY) {\n              showY = showY === undefined$1 ? showX : showY;\n              refreshScrollbarAppearance(true, showX, canScroll.x);\n              refreshScrollbarAppearance(false, showY, canScroll.y);\n            }; //manage class name which indicates scrollable overflow\n\n\n            addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\n            addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\n            addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y); //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\n\n            if (cssDirectionChanged && !_isBody) {\n              addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\n            } //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\n\n\n            if (_isBody) addClass(_hostElement, _classNameHostResizeDisabled);\n\n            if (resizeChanged) {\n              addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\n            } //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\n\n\n            if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\n              if (ignoreOverlayScrollbarHiding) {\n                if (ignoreOverlayScrollbarHidingChanged) {\n                  removeClass(_hostElement, _classNameHostScrolling);\n\n                  if (ignoreOverlayScrollbarHiding) {\n                    refreshScrollbarsVisibility(false);\n                  }\n                }\n              } else if (scrollbarsVisibilityAuto) {\n                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\n              } else if (scrollbarsVisibilityVisible) {\n                refreshScrollbarsVisibility(true);\n              } else if (scrollbarsVisibilityHidden) {\n                refreshScrollbarsVisibility(false);\n              }\n            } //manage the scrollbars auto hide feature (auto hide them after specific actions)\n\n\n            if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\n              setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\n              refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\n            } //manage scrollbars handle length & offset - don't remove!\n\n\n            if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\n              refreshScrollbarHandleLength(true);\n              refreshScrollbarHandleOffset(true);\n              refreshScrollbarHandleLength(false);\n              refreshScrollbarHandleOffset(false);\n            } //manage interactivity\n\n\n            if (scrollbarsClickScrollingChanged) refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\n            if (scrollbarsDragScrollingChanged) refreshScrollbarsInteractive(false, scrollbarsDragScrolling); //callbacks:\n\n            dispatchCallback('onDirectionChanged', {\n              isRTL: _isRTL,\n              dir: cssDirection\n            }, cssDirectionChanged);\n            dispatchCallback('onHostSizeChanged', {\n              width: _hostSizeCache.w,\n              height: _hostSizeCache.h\n            }, hostSizeChanged);\n            dispatchCallback('onContentSizeChanged', {\n              width: _contentScrollSizeCache.w,\n              height: _contentScrollSizeCache.h\n            }, contentSizeChanged);\n            dispatchCallback('onOverflowChanged', {\n              x: hasOverflow.x,\n              y: hasOverflow.y,\n              xScrollable: hideOverflow.xs,\n              yScrollable: hideOverflow.ys,\n              clipped: hideOverflow.x || hideOverflow.y\n            }, hasOverflow.c || hideOverflow.c);\n            dispatchCallback('onOverflowAmountChanged', {\n              x: overflowAmount.x,\n              y: overflowAmount.y\n            }, overflowAmount.c);\n          } //fix body min size\n\n\n          if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\n            //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\n            if (!_bodyMinSizeCache.f) bodyMinSizeChanged();\n            if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x) _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\n            if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y) _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\n            _bodyMinSizeCache.c = false;\n          }\n\n          if (_initialized && changedOptions.updateOnLoad) {\n            updateElementsOnLoad();\n          } //freezeResizeObserver(_sizeObserverElement, false);\n          //freezeResizeObserver(_sizeAutoObserverElement, false);\n\n\n          dispatchCallback('onUpdated', {\n            forced: force\n          });\n        }\n        /**\r\n         * Updates the found elements of which the load event shall be handled.\r\n         */\n\n\n        function updateElementsOnLoad() {\n          if (!_isTextarea) {\n            eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n              _contentElement.find(updateOnLoadSelector).each(function (i, el) {\n                // if element doesn't have a updateOnLoadCallback applied\n                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\n                  _updateOnLoadElms.push(el);\n\n                  FRAMEWORK(el).off(_updateOnLoadEventName, updateOnLoadCallback).on(_updateOnLoadEventName, updateOnLoadCallback);\n                }\n              });\n            });\n          }\n        } //==== Options ====//\n\n        /**\r\n         * Sets new options but doesn't call the update method.\r\n         * @param newOptions The object which contains the new options.\r\n         * @returns {*} A object which contains the changed options.\r\n         */\n\n\n        function setOptions(newOptions) {\n          var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions);\n\n          _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\n          _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\n          return validatedOpts._prepared;\n        } //==== Structure ====//\n\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupStructureDOM(destroy) {\n          var strParent = 'parent';\n          var classNameResizeObserverHost = 'os-resize-observer-host';\n          var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\n          var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\n          var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\n          var adoptAttrsMap = {};\n\n          var applyAdoptedAttrs = function applyAdoptedAttrs() {\n            var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\n            each(adoptAttrsMap, function (key, value) {\n              if (type(value) == TYPES.s) {\n                if (key == LEXICON.c) applyAdoptedAttrsElm.addClass(value);else applyAdoptedAttrsElm.attr(key, value);\n              }\n            });\n          };\n\n          var hostElementClassNames = [_classNameHostElement, _classNameHostElementForeign, _classNameHostTextareaElement, _classNameHostResizeDisabled, _classNameHostRTL, _classNameHostScrollbarHorizontalHidden, _classNameHostScrollbarVerticalHidden, _classNameHostTransition, _classNameHostScrolling, _classNameHostOverflow, _classNameHostOverflowX, _classNameHostOverflowY, _classNameThemeNone, _classNameTextareaElement, _classNameTextInherit, _classNameCache].join(_strSpace);\n          var hostElementCSS = {}; //get host element as first element, because that's the most upper element and required for the other elements\n\n          _hostElement = _hostElement || (_isTextarea ? _domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement)) : _targetElement);\n          _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\n          _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\n          _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\n          _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\n          _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined$1); //add this class to workaround class changing issues with UI frameworks especially Vue\n\n          if (_domExists) addClass(_hostElement, _classNameHostElementForeign); //on destroy, remove all generated class names from the host element before collecting the adopted attributes \n          //to prevent adopting generated class names\n\n          if (destroy) removeClass(_hostElement, hostElementClassNames); //collect all adopted attributes\n\n          adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\n\n          if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\n            each(adoptAttrs, function (i, v) {\n              if (type(v) == TYPES.s) {\n                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\n              }\n            });\n          }\n\n          if (!destroy) {\n            if (_isTextarea) {\n              if (!_currentPreparedOptions.sizeAutoCapable) {\n                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\n                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\n              }\n\n              if (!_domExists) _targetElement.addClass(_classNameTextInherit).wrap(_hostElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n              _hostElement = _targetElement[strParent]().css(hostElementCSS);\n            }\n\n            if (!_domExists) {\n              //add the correct class to the target element\n              addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement); //wrap the content into the generated elements to create the required DOM\n\n              _hostElement.wrapInner(_contentElement).wrapInner(_viewportElement).wrapInner(_paddingElement).prepend(_sizeObserverElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n\n              _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\n              _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\n              _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\n\n              if (_isTextarea) {\n                _contentElement.prepend(_textareaCoverElement);\n\n                applyAdoptedAttrs();\n              }\n            }\n\n            if (_nativeScrollbarStyling) addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\n            if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y) addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\n            if (_isBody) addClass(_htmlElement, _classNameHTMLElement);\n            _sizeObserverElementNative = _sizeObserverElement[0];\n            _hostElementNative = _hostElement[0];\n            _paddingElementNative = _paddingElement[0];\n            _viewportElementNative = _viewportElement[0];\n            _contentElementNative = _contentElement[0];\n            updateViewportAttrsFromTarget();\n          } else {\n            if (_domExists && _initialized) {\n              //clear size observer\n              _sizeObserverElement.children().remove(); //remove the style property and classes from already generated elements\n\n\n              each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\n                if (elm) {\n                  removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n                }\n              }); //add classes to the host element which was removed previously to match the expected DOM\n\n              addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\n            } else {\n              //remove size observer\n              remove(_sizeObserverElement); //unwrap the content to restore DOM\n\n              _contentElement.contents().unwrap().unwrap().unwrap();\n\n              if (_isTextarea) {\n                _targetElement.unwrap();\n\n                remove(_hostElement);\n                remove(_textareaCoverElement);\n                applyAdoptedAttrs();\n              }\n            }\n\n            if (_isTextarea) _targetElement.removeAttr(LEXICON.s);\n            if (_isBody) removeClass(_htmlElement, _classNameHTMLElement);\n          }\n        }\n        /**\r\n         * Adds or removes all wrapper elements interactivity events.\r\n         * @param destroy Indicates whether the Events shall be added or removed.\r\n         */\n\n\n        function setupStructureEvents() {\n          var textareaKeyDownRestrictedKeyCodes = [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, //F1 to F12\n          33, 34, //page up, page down\n          37, 38, 39, 40, //left, up, right, down arrows\n          16, 17, 18, 19, 20, 144 //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\n          ];\n          var textareaKeyDownKeyCodesList = [];\n          var textareaUpdateIntervalID;\n          var scrollStopTimeoutId;\n          var scrollStopDelay = 175;\n          var strFocus = 'focus';\n\n          function updateTextarea(doClearInterval) {\n            textareaUpdate();\n\n            _base.update(_strAuto);\n\n            if (doClearInterval && _autoUpdateRecommended) clearInterval(textareaUpdateIntervalID);\n          }\n\n          function textareaOnScroll(event) {\n            _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\n\n            _targetElement[_strScrollTop](0);\n\n            COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n            return false;\n          }\n\n          function textareaOnDrop(event) {\n            setTimeout(function () {\n              if (!_destroyed) updateTextarea();\n            }, 50);\n          }\n\n          function textareaOnFocus() {\n            _textareaHasFocus = true;\n            addClass(_hostElement, strFocus);\n          }\n\n          function textareaOnFocusout() {\n            _textareaHasFocus = false;\n            textareaKeyDownKeyCodesList = [];\n            removeClass(_hostElement, strFocus);\n            updateTextarea(true);\n          }\n\n          function textareaOnKeyDown(event) {\n            var keyCode = event.keyCode;\n\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\n                updateTextarea();\n                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\n              }\n\n              if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0) textareaKeyDownKeyCodesList.push(keyCode);\n            }\n          }\n\n          function textareaOnKeyUp(event) {\n            var keyCode = event.keyCode;\n            var index = inArray(keyCode, textareaKeyDownKeyCodesList);\n\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n              if (index > -1) textareaKeyDownKeyCodesList.splice(index, 1);\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) updateTextarea(true);\n            }\n          }\n\n          function contentOnTransitionEnd(event) {\n            if (_autoUpdateCache === true) return;\n            event = event.originalEvent || event;\n            if (isSizeAffectingCSSProperty(event.propertyName)) _base.update(_strAuto);\n          }\n\n          function viewportOnScroll(event) {\n            if (!_sleeping) {\n              if (scrollStopTimeoutId !== undefined$1) clearTimeout(scrollStopTimeoutId);else {\n                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n                if (!nativeOverlayScrollbarsAreActive()) addClass(_hostElement, _classNameHostScrolling);\n                dispatchCallback('onScrollStart', event);\n              } //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\n              //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\n              //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\n\n              if (!_scrollbarsHandlesDefineScrollPos) {\n                refreshScrollbarHandleOffset(true);\n                refreshScrollbarHandleOffset(false);\n              }\n\n              dispatchCallback('onScroll', event);\n              scrollStopTimeoutId = setTimeout(function () {\n                if (!_destroyed) {\n                  //OnScrollStop:\n                  clearTimeout(scrollStopTimeoutId);\n                  scrollStopTimeoutId = undefined$1;\n                  if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n                  if (!nativeOverlayScrollbarsAreActive()) removeClass(_hostElement, _classNameHostScrolling);\n                  dispatchCallback('onScrollStop', event);\n                }\n              }, scrollStopDelay);\n            }\n          }\n\n          if (_isTextarea) {\n            if (_msieVersion > 9 || !_autoUpdateRecommended) {\n              addDestroyEventListener(_targetElement, 'input', updateTextarea);\n            } else {\n              addDestroyEventListener(_targetElement, [_strKeyDownEvent, _strKeyUpEvent], [textareaOnKeyDown, textareaOnKeyUp]);\n            }\n\n            addDestroyEventListener(_targetElement, [_strScroll, 'drop', strFocus, strFocus + 'out'], [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\n          } else {\n            addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\n          }\n\n          addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\n        } //==== Scrollbars ====//\n\n        /**\r\n         * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupScrollbarsDOM(destroy) {\n          var selectOrGenerateScrollbarDOM = function selectOrGenerateScrollbarDOM(isHorizontal) {\n            var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\n            var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\n            var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\n            var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\n\n            if (!_domExists && !destroy) {\n              scrollbar.append(track);\n              track.append(handle);\n            }\n\n            return {\n              _scrollbar: scrollbar,\n              _track: track,\n              _handle: handle\n            };\n          };\n\n          function resetScrollbarDOM(isHorizontal) {\n            var scrollbarVars = getScrollbarVars(isHorizontal);\n            var scrollbar = scrollbarVars._scrollbar;\n            var track = scrollbarVars._track;\n            var handle = scrollbarVars._handle;\n\n            if (_domExists && _initialized) {\n              each([scrollbar, track, handle], function (i, elm) {\n                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n              });\n            } else {\n              remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\n            }\n          }\n\n          var horizontalElements;\n          var verticalElements;\n\n          if (!destroy) {\n            horizontalElements = selectOrGenerateScrollbarDOM(true);\n            verticalElements = selectOrGenerateScrollbarDOM();\n            _scrollbarHorizontalElement = horizontalElements._scrollbar;\n            _scrollbarHorizontalTrackElement = horizontalElements._track;\n            _scrollbarHorizontalHandleElement = horizontalElements._handle;\n            _scrollbarVerticalElement = verticalElements._scrollbar;\n            _scrollbarVerticalTrackElement = verticalElements._track;\n            _scrollbarVerticalHandleElement = verticalElements._handle;\n\n            if (!_domExists) {\n              _paddingElement.after(_scrollbarVerticalElement);\n\n              _paddingElement.after(_scrollbarHorizontalElement);\n            }\n          } else {\n            resetScrollbarDOM(true);\n            resetScrollbarDOM();\n          }\n        }\n        /**\r\n         * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n         * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n         */\n\n\n        function setupScrollbarEvents(isHorizontal) {\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\n          var xy = scrollbarVars._x_y;\n          var XY = scrollbarVars._X_Y;\n          var scroll = _strScroll + scrollbarVars._Left_Top;\n          var strActive = 'active';\n          var strSnapHandle = 'snapHandle';\n          var strClickEvent = 'click';\n          var scrollDurationFactor = 1;\n          var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\n\n          var trackTimeout;\n          var mouseDownScroll;\n          var mouseDownOffset;\n          var mouseDownInvertedScale;\n\n          function getPointerPosition(event) {\n            return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\n          }\n\n          function getPreparedScrollbarsOption(name) {\n            return _currentPreparedOptions.scrollbars[name];\n          }\n\n          function increaseTrackScrollAmount() {\n            scrollDurationFactor = 0.5;\n          }\n\n          function decreaseTrackScrollAmount() {\n            scrollDurationFactor = 1;\n          }\n\n          function stopClickEventPropagation(event) {\n            COMPATIBILITY.stpP(event);\n          }\n\n          function documentKeyDown(event) {\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) increaseTrackScrollAmount();\n          }\n\n          function documentKeyUp(event) {\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) decreaseTrackScrollAmount();\n          }\n\n          function onMouseTouchDownContinue(event) {\n            var originalEvent = event.originalEvent || event;\n            var isTouchEvent = originalEvent.touches !== undefined$1;\n            return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || isTouchEvent && !getPreparedScrollbarsOption('touchSupport') ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n          }\n\n          function documentDragMove(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var trackLength = scrollbarVarsInfo._trackLength;\n              var handleLength = scrollbarVarsInfo._handleLength;\n              var scrollRange = scrollbarVarsInfo._maxScroll;\n              var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\n              var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\n              var scrollDelta = scrollRange * scrollDeltaPercent;\n              scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\n              if (_isRTL && isHorizontal && !_rtlScrollBehavior.i) scrollDelta *= -1;\n\n              _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\n\n              if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\n              if (!_supportPassiveEvents) COMPATIBILITY.prvD(event);\n            } else documentMouseTouchUp(event);\n          }\n\n          function documentMouseTouchUp(event) {\n            event = event || event.originalEvent;\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart], true);\n            COMPATIBILITY.rAF()(function () {\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, {\n                _capture: true\n              });\n            });\n            if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, true);\n            _scrollbarsHandlesDefineScrollPos = false;\n            removeClass(_bodyElement, _classNameDragging);\n            removeClass(scrollbarVars._handle, strActive);\n            removeClass(scrollbarVars._track, strActive);\n            removeClass(scrollbarVars._scrollbar, strActive);\n            mouseDownScroll = undefined$1;\n            mouseDownOffset = undefined$1;\n            mouseDownInvertedScale = 1;\n            decreaseTrackScrollAmount();\n\n            if (trackTimeout !== undefined$1) {\n              _base.scrollStop();\n\n              clearTimeout(trackTimeout);\n              trackTimeout = undefined$1;\n            }\n\n            if (event) {\n              var rect = _hostElementNative[LEXICON.bCR]();\n\n              var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom; //if mouse is outside host element\n\n              if (!mouseInsideHost) hostOnMouseLeave();\n              if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n            }\n          }\n\n          function onHandleMouseTouchDown(event) {\n            if (onMouseTouchDownContinue(event)) onHandleMouseTouchDownAction(event);\n          }\n\n          function onHandleMouseTouchDownAction(event) {\n            mouseDownScroll = _viewportElement[scroll]();\n            mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\n            if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL) mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\n            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n            mouseDownOffset = getPointerPosition(event);\n            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n            addClass(_bodyElement, _classNameDragging);\n            addClass(scrollbarVars._handle, strActive);\n            addClass(scrollbarVars._scrollbar, strActive);\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\n            COMPATIBILITY.rAF()(function () {\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, {\n                _capture: true\n              });\n            });\n            if (_msieVersion || !_documentMixed) COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n          }\n\n          function onTrackMouseTouchDown(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\n              var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\n              var scrollBaseDuration = 270 * handleToViewportRatio;\n              var scrollFirstIterationDelay = 400 * handleToViewportRatio;\n\n              var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\n\n              var ctrlKey = event.ctrlKey;\n              var instantScroll = event.shiftKey;\n              var instantScrollTransition = instantScroll && ctrlKey;\n              var isFirstIteration = true;\n              var easing = 'linear';\n              var decreaseScroll;\n              var finishedCondition;\n\n              var scrollActionFinsished = function scrollActionFinsished(transition) {\n                if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, transition);\n              };\n\n              var scrollActionInstantFinished = function scrollActionInstantFinished() {\n                scrollActionFinsished();\n                onHandleMouseTouchDownAction(event);\n              };\n\n              var scrollAction = function scrollAction() {\n                if (!_destroyed) {\n                  var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\n                  var handleOffset = scrollbarVarsInfo._handleOffset;\n                  var trackLength = scrollbarVarsInfo._trackLength;\n                  var handleLength = scrollbarVarsInfo._handleLength;\n                  var scrollRange = scrollbarVarsInfo._maxScroll;\n                  var currScroll = scrollbarVarsInfo._currentScroll;\n                  var scrollDuration = scrollBaseDuration * scrollDurationFactor;\n                  var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\n                  var instantScrollPosition = scrollRange * ((mouseOffset - handleLength / 2) / (trackLength - handleLength)); // 100% * positionPercent\n\n                  var rtlIsNormal = _isRTL && isHorizontal && (!_rtlScrollBehavior.i && !_rtlScrollBehavior.n || _normalizeRTLCache);\n                  var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\n                  var scrollObj = {};\n                  var animationObj = {\n                    easing: easing,\n                    step: function step(now) {\n                      if (_scrollbarsHandlesDefineScrollPos) {\n                        _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\n\n\n                        refreshScrollbarHandleOffset(isHorizontal, now);\n                      }\n                    }\n                  };\n                  instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\n                  instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition; //_base.scrollStop();\n\n                  if (instantScroll) {\n                    _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\n\n\n                    if (instantScrollTransition) {\n                      //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\n                      //and the animation stops at the correct point\n                      instantScrollPosition = _viewportElement[scroll](); //scroll back to the position before instant scrolling so animation can be performed\n\n                      _viewportElement[scroll](currScroll);\n\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition;\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\n                      scrollObj[xy] = instantScrollPosition;\n\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\n                        duration: 130,\n                        complete: scrollActionInstantFinished\n                      }));\n                    } else scrollActionInstantFinished();\n                  } else {\n                    decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\n                    finishedCondition = rtlIsNormal ? decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset : decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset;\n\n                    if (finishedCondition) {\n                      clearTimeout(trackTimeout);\n\n                      _base.scrollStop();\n\n                      trackTimeout = undefined$1;\n                      scrollActionFinsished(true);\n                    } else {\n                      trackTimeout = setTimeout(scrollAction, timeoutDelay);\n                      scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\n\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\n                        duration: scrollDuration\n                      }));\n                    }\n\n                    isFirstIteration = false;\n                  }\n                }\n              };\n\n              if (ctrlKey) increaseTrackScrollAmount();\n              mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n              mouseDownOffset = COMPATIBILITY.page(event)[xy];\n              _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n              addClass(_bodyElement, _classNameDragging);\n              addClass(scrollbarVars._track, strActive);\n              addClass(scrollbarVars._scrollbar, strActive);\n              setupResponsiveEventListener(_documentElement, [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\n              scrollAction();\n              COMPATIBILITY.prvD(event);\n              COMPATIBILITY.stpP(event);\n            }\n          }\n\n          function onTrackMouseTouchEnter(event) {\n            //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\n            _scrollbarsHandleHovered = true;\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n          }\n\n          function onTrackMouseTouchLeave(event) {\n            _scrollbarsHandleHovered = false;\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n          }\n\n          function onScrollbarMouseTouchDown(event) {\n            COMPATIBILITY.stpP(event);\n          }\n\n          addDestroyEventListener(scrollbarVars._handle, _strMouseTouchDownEvent, onHandleMouseTouchDown);\n          addDestroyEventListener(scrollbarVars._track, [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave], [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\n          addDestroyEventListener(scrollbarVars._scrollbar, _strMouseTouchDownEvent, onScrollbarMouseTouchDown);\n\n          if (_supportTransition) {\n            addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\n              if (event.target !== scrollbarVars._scrollbar[0]) return;\n              refreshScrollbarHandleLength(isHorizontal);\n              refreshScrollbarHandleOffset(isHorizontal);\n            });\n          }\n        }\n        /**\r\n         * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n         * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n         * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n         * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n         */\n\n\n        function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\n          var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\n          var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\n          addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\n          addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\n        }\n        /**\r\n         * Autoshows / autohides both scrollbars with.\r\n         * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n         * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n         */\n\n\n        function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\n          clearTimeout(_scrollbarsAutoHideTimeoutId);\n\n          if (shallBeVisible) {\n            //if(_hasOverflowCache.x && _hideOverflowCache.xs)\n            removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden); //if(_hasOverflowCache.y && _hideOverflowCache.ys)\n\n            removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n          } else {\n            var anyActive;\n            var strActive = 'active';\n\n            var hide = function hide() {\n              if (!_scrollbarsHandleHovered && !_destroyed) {\n                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n              }\n            };\n\n            if (_scrollbarsAutoHideDelay > 0 && delayfree !== true) _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);else hide();\n          }\n        }\n        /**\r\n         * Refreshes the handle length of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         */\n\n\n        function refreshScrollbarHandleLength(isHorizontal) {\n          var handleCSS = {};\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var digit = 1000000; //get and apply intended handle length\n\n          var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\n          handleCSS[scrollbarVars._width_height] = MATH.floor(handleRatio * 100 * digit) / digit + '%'; //the last * digit / digit is for flooring to the 4th digit\n\n          if (!nativeOverlayScrollbarsAreActive()) scrollbarVars._handle.css(handleCSS); //measure the handle length to respect min & max length\n\n          scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\n          scrollbarVarsInfo._handleLengthRatio = handleRatio;\n        }\n        /**\r\n         * Refreshes the handle offset of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n         */\n\n\n        function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\n          var transition = type(scrollOrTransition) == TYPES.b;\n          var transitionDuration = 250;\n          var isRTLisHorizontal = _isRTL && isHorizontal;\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var strTranslateBrace = 'translate(';\n\n          var strTransform = VENDORS._cssProperty('transform');\n\n          var strTransition = VENDORS._cssProperty('transition');\n\n          var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\n          var currentScroll = scrollOrTransition === undefined$1 || transition ? nativeScroll : scrollOrTransition; //measure the handle length to respect min & max length\n\n          var handleLength = scrollbarVarsInfo._handleLength;\n          var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\n          var handleTrackDiff = trackLength - handleLength;\n          var handleCSS = {};\n          var transformOffset;\n          var translateValue; //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\n          // because its a bit behind during the small delay when content size updates\n          //(delay = mutationObserverContentLag, if its 0 then this var could be used)\n\n          var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\n\n          var getScrollRatio = function getScrollRatio(base) {\n            return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\n          };\n\n          var getHandleOffset = function getHandleOffset(scrollRatio) {\n            var offset = handleTrackDiff * scrollRatio;\n            offset = isNaN(offset) ? 0 : offset;\n            offset = isRTLisHorizontal && !_rtlScrollBehavior.i ? trackLength - handleLength - offset : offset;\n            offset = MATH.max(0, offset);\n            return offset;\n          };\n\n          var scrollRatio = getScrollRatio(nativeScroll);\n          var unsnappedScrollRatio = getScrollRatio(currentScroll);\n          var handleOffset = getHandleOffset(unsnappedScrollRatio);\n          var snappedHandleOffset = getHandleOffset(scrollRatio);\n          scrollbarVarsInfo._maxScroll = maxScroll;\n          scrollbarVarsInfo._currentScroll = nativeScroll;\n          scrollbarVarsInfo._currentScrollRatio = scrollRatio;\n\n          if (_supportTransform) {\n            transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\n            //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\n\n            translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\n            handleCSS[strTransform] = translateValue; //apply or clear up transition\n\n            if (_supportTransition) handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\n          } else handleCSS[scrollbarVars._left_top] = handleOffset; //only apply css if offset has changed and overflow exists.\n\n\n          if (!nativeOverlayScrollbarsAreActive()) {\n            scrollbarVars._handle.css(handleCSS); //clear up transition\n\n\n            if (_supportTransform && _supportTransition && transition) {\n              scrollbarVars._handle.one(_strTransitionEndEvent, function () {\n                if (!_destroyed) scrollbarVars._handle.css(strTransition, _strEmpty);\n              });\n            }\n          }\n\n          scrollbarVarsInfo._handleOffset = handleOffset;\n          scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\n          scrollbarVarsInfo._trackLength = trackLength;\n        }\n        /**\r\n         * Refreshes the interactivity of the given scrollbar element.\r\n         * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n         * @param value True for interactivity false for no interactivity.\r\n         */\n\n\n        function refreshScrollbarsInteractive(isTrack, value) {\n          var action = value ? 'removeClass' : 'addClass';\n          var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\n          var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\n          var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\n          element1[action](className);\n          element2[action](className);\n        }\n        /**\r\n         * Returns a object which is used for fast access for specific variables.\r\n         * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n         * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n         */\n\n\n        function getScrollbarVars(isHorizontal) {\n          return {\n            _width_height: isHorizontal ? _strWidth : _strHeight,\n            _Width_Height: isHorizontal ? 'Width' : 'Height',\n            _left_top: isHorizontal ? _strLeft : _strTop,\n            _Left_Top: isHorizontal ? 'Left' : 'Top',\n            _x_y: isHorizontal ? _strX : _strY,\n            _X_Y: isHorizontal ? 'X' : 'Y',\n            _w_h: isHorizontal ? 'w' : 'h',\n            _l_t: isHorizontal ? 'l' : 't',\n            _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\n            _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\n            _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\n            _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\n          };\n        } //==== Scrollbar Corner ====//\n\n        /**\r\n         * Builds or destroys the scrollbar corner DOM element.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupScrollbarCornerDOM(destroy) {\n          _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\n\n          if (!destroy) {\n            if (!_domExists) {\n              _hostElement.append(_scrollbarCornerElement);\n            }\n          } else {\n            if (_domExists && _initialized) {\n              removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n            } else {\n              remove(_scrollbarCornerElement);\n            }\n          }\n        }\n        /**\r\n         * Initializes all scrollbar corner interactivity events.\r\n         */\n\n\n        function setupScrollbarCornerEvents() {\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\n          var mouseDownPosition = {};\n          var mouseDownSize = {};\n          var mouseDownInvertedScale = {};\n          var reconnectMutationObserver;\n\n          function documentDragMove(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var pageOffset = getCoordinates(event);\n              var hostElementCSS = {};\n              if (_resizeHorizontal || _resizeBoth) hostElementCSS[_strWidth] = mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x;\n              if (_resizeVertical || _resizeBoth) hostElementCSS[_strHeight] = mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y;\n\n              _hostElement.css(hostElementCSS);\n\n              COMPATIBILITY.stpP(event);\n            } else {\n              documentMouseTouchUp(event);\n            }\n          }\n\n          function documentMouseTouchUp(event) {\n            var eventIsTrusted = event !== undefined$1;\n            setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp], true);\n            removeClass(_bodyElement, _classNameDragging);\n            if (_scrollbarCornerElement.releaseCapture) _scrollbarCornerElement.releaseCapture();\n\n            if (eventIsTrusted) {\n              if (reconnectMutationObserver) connectMutationObservers();\n\n              _base.update(_strAuto);\n            }\n\n            reconnectMutationObserver = false;\n          }\n\n          function onMouseTouchDownContinue(event) {\n            var originalEvent = event.originalEvent || event;\n            var isTouchEvent = originalEvent.touches !== undefined$1;\n            return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n          }\n\n          function getCoordinates(event) {\n            return _msieVersion && insideIFrame ? {\n              x: event.screenX,\n              y: event.screenY\n            } : COMPATIBILITY.page(event);\n          }\n\n          addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\n            if (onMouseTouchDownContinue(event) && !_resizeNone) {\n              if (_mutationObserversConnected) {\n                reconnectMutationObserver = true;\n                disconnectMutationObservers();\n              }\n\n              mouseDownPosition = getCoordinates(event);\n              mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\n              mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\n              mouseDownInvertedScale = getHostElementInvertedScale();\n              setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\n              addClass(_bodyElement, _classNameDragging);\n              if (_scrollbarCornerElement.setCapture) _scrollbarCornerElement.setCapture();\n              COMPATIBILITY.prvD(event);\n              COMPATIBILITY.stpP(event);\n            }\n          });\n        } //==== Utils ====//\n\n        /**\r\n         * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n         * @param name The name of the target which shall be called.\r\n         * @param args The args with which the callback shall be called.\r\n         * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n         */\n\n\n        function dispatchCallback(name, args, dependent) {\n          if (dependent === false) return;\n\n          if (_initialized) {\n            var callback = _currentPreparedOptions.callbacks[name];\n            var extensionOnName = name;\n            var ext;\n            if (extensionOnName.substr(0, 2) === 'on') extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\n            if (type(callback) == TYPES.f) callback.call(_base, args);\n            each(_extensions, function () {\n              ext = this;\n              if (type(ext.on) == TYPES.f) ext.on(extensionOnName, args);\n            });\n          } else if (!_destroyed) _callbacksInitQeueue.push({\n            n: name,\n            a: args\n          });\n        }\n        /**\r\n         * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n         * @param targetCSSObject The css object to which the values shall be applied.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n         * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n         */\n\n\n        function setTopRightBottomLeft(targetCSSObject, prefix, values) {\n          prefix = prefix || _strEmpty;\n          values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\n          targetCSSObject[prefix + _strTop] = values[0];\n          targetCSSObject[prefix + _strRight] = values[1];\n          targetCSSObject[prefix + _strBottom] = values[2];\n          targetCSSObject[prefix + _strLeft] = values[3];\n        }\n        /**\r\n         * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n         * @param zeroX True if the x axis shall be 0.\r\n         * @param zeroY True if the y axis shall be 0.\r\n         * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n         */\n\n\n        function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\n          suffix = suffix || _strEmpty;\n          prefix = prefix || _strEmpty;\n          return {\n            t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\n            r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\n            b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\n            l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\n          };\n        }\n        /**\r\n         * Returns the computed CSS transition string from the given element.\r\n         * @param element The element from which the transition string shall be returned.\r\n         * @returns {string} The CSS transition string from the given element.\r\n         */\n\n\n        function getCSSTransitionString(element) {\n          var transitionStr = VENDORS._cssProperty('transition');\n\n          var assembledValue = element.css(transitionStr);\n          if (assembledValue) return assembledValue;\n          var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\n          var regExpMain = new RegExp(regExpString);\n          var regExpValidate = new RegExp('^(' + regExpString + ')+$');\n          var properties = 'property duration timing-function delay'.split(' ');\n          var result = [];\n          var strResult;\n          var valueArray;\n          var i = 0;\n          var j;\n\n          var splitCssStyleByComma = function splitCssStyleByComma(str) {\n            strResult = [];\n            if (!str.match(regExpValidate)) return str;\n\n            while (str.match(regExpMain)) {\n              strResult.push(RegExp.$1);\n              str = str.replace(regExpMain, _strEmpty);\n            }\n\n            return strResult;\n          };\n\n          for (; i < properties[LEXICON.l]; i++) {\n            valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\n\n            for (j = 0; j < valueArray[LEXICON.l]; j++) {\n              result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\n            }\n          }\n\n          return result.join(', ');\n        }\n        /**\r\n         * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n         * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n         * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n         */\n\n\n        function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\n          var i;\n          var split;\n          var appendix;\n\n          var appendClasses = function appendClasses(classes, condition) {\n            appendix = '';\n\n            if (condition && _typeof(classes) == TYPES.s) {\n              split = classes.split(_strSpace);\n\n              for (i = 0; i < split[LEXICON.l]; i++) {\n                appendix += '|' + split[i] + '$';\n              } // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\n\n            }\n\n            return appendix;\n          };\n\n          return new RegExp('(^' + _classNameHostElement + '([-_].+|)$)' + appendClasses(_classNameCache, withCurrClassNameOption) + appendClasses(_oldClassName, withOldClassNameOption), 'g');\n        }\n        /**\r\n         * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n         * @returns {{x: number, y: number}} The scale of the host-element.\r\n         */\n\n\n        function getHostElementInvertedScale() {\n          var rect = _paddingElementNative[LEXICON.bCR]();\n\n          return {\n            x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\n            y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\n          };\n        }\n        /**\r\n         * Checks whether the given object is a HTMLElement.\r\n         * @param o The object which shall be checked.\r\n         * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n         */\n\n\n        function isHTMLElement(o) {\n          var strOwnerDocument = 'ownerDocument';\n          var strHTMLElement = 'HTMLElement';\n          var wnd = o && o[strOwnerDocument] ? o[strOwnerDocument].parentWindow || window : window;\n          return _typeof(wnd[strHTMLElement]) == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\n          o && _typeof(o) == TYPES.o && o !== null && o.nodeType === 1 && _typeof(o.nodeName) == TYPES.s;\n        }\n        /**\r\n         * Compares 2 arrays and returns the differences between them as a array.\r\n         * @param a1 The first array which shall be compared.\r\n         * @param a2 The second array which shall be compared.\r\n         * @returns {Array} The differences between the two arrays.\r\n         */\n\n\n        function getArrayDifferences(a1, a2) {\n          var a = [];\n          var diff = [];\n          var i;\n          var k;\n\n          for (i = 0; i < a1.length; i++) {\n            a[a1[i]] = true;\n          }\n\n          for (i = 0; i < a2.length; i++) {\n            if (a[a2[i]]) delete a[a2[i]];else a[a2[i]] = true;\n          }\n\n          for (k in a) {\n            diff.push(k);\n          }\n\n          return diff;\n        }\n        /**\r\n         * Returns Zero or the number to which the value can be parsed.\r\n         * @param value The value which shall be parsed.\r\n         * @param toFloat Indicates whether the number shall be parsed to a float.\r\n         */\n\n\n        function parseToZeroOrNumber(value, toFloat) {\n          var num = toFloat ? parseFloat(value) : parseInt(value, 10);\n          return isNaN(num) ? 0 : num;\n        }\n        /**\r\n         * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n         * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n         */\n\n\n        function getTextareaInfo() {\n          //read needed values\n          var textareaCursorPosition = _targetElementNative.selectionStart;\n          if (textareaCursorPosition === undefined$1) return;\n\n          var textareaValue = _targetElement.val();\n\n          var textareaLength = textareaValue[LEXICON.l];\n          var textareaRowSplit = textareaValue.split('\\n');\n          var textareaLastRow = textareaRowSplit[LEXICON.l];\n          var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\n          var widestRow = 0;\n          var textareaLastCol = 0;\n          var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\n          var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\n          var rowCols;\n          var i; //get widest Row and the last column of the textarea\n\n          for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\n            rowCols = textareaRowSplit[i][LEXICON.l];\n\n            if (rowCols > textareaLastCol) {\n              widestRow = i + 1;\n              textareaLastCol = rowCols;\n            }\n          }\n\n          return {\n            _cursorRow: cursorRow,\n            //cursorRow\n            _cursorColumn: cursorCol,\n            //cursorCol\n            _rows: textareaLastRow,\n            //rows\n            _columns: textareaLastCol,\n            //cols\n            _widestRow: widestRow,\n            //wRow\n            _cursorPosition: textareaCursorPosition,\n            //pos\n            _cursorMax: textareaLength //max\n\n          };\n        }\n        /**\r\n         * Determines whether native overlay scrollbars are active.\r\n         * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n         */\n\n\n        function nativeOverlayScrollbarsAreActive() {\n          return _ignoreOverlayScrollbarHidingCache && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y;\n        }\n        /**\r\n         * Gets the element which is used to measure the content size.\r\n         * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n         */\n\n\n        function getContentMeasureElement() {\n          return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\n        }\n        /**\r\n         * Generates a string which represents a HTML div with the given classes or attributes.\r\n         * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n         * @param content The content of the div as string.\r\n         * @returns {string} The concated string which represents a HTML div and its content.\r\n         */\n\n\n        function generateDiv(classesOrAttrs, content) {\n          return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ? 'class=\"' + classesOrAttrs + '\"' : function () {\n            var key;\n            var attrs = _strEmpty;\n\n            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\n              for (key in classesOrAttrs) {\n                attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\n              }\n            }\n\n            return attrs;\n          }() : _strEmpty) + '>' + (content || _strEmpty) + '</div>';\n        }\n        /**\r\n         * Selects or generates a div with the given class attribute.\r\n         * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n         * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n         * If its a boolean it decides whether only the children of the host element shall be selected.\r\n         * @returns {*} The generated or selected element.\r\n         */\n\n\n        function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\n          var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\n          var selectParent = onlyChildren ? _hostElement : selectParentOrOnlyChildren || _hostElement;\n          return _domExists && !selectParent[LEXICON.l] ? null : _domExists ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0) : FRAMEWORK(generateDiv(className));\n        }\n        /**\r\n         * Gets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be got.\r\n         * @param path The property of which the value shall be got.\r\n         * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n         */\n\n\n        function getObjectPropVal(obj, path) {\n          var splits = path.split(_strDot);\n          var i = 0;\n          var val;\n\n          for (; i < splits.length; i++) {\n            if (!obj[LEXICON.hOP](splits[i])) return;\n            val = obj[splits[i]];\n            if (i < splits.length && type(val) == TYPES.o) obj = val;\n          }\n\n          return val;\n        }\n        /**\r\n         * Sets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be set.\r\n         * @param path The property of which the value shall be set.\r\n         * @param val The value of the property which shall be set.\r\n         */\n\n\n        function setObjectPropVal(obj, path, val) {\n          var splits = path.split(_strDot);\n          var splitsLength = splits.length;\n          var i = 0;\n          var extendObj = {};\n          var extendObjRoot = extendObj;\n\n          for (; i < splitsLength; i++) {\n            extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\n          }\n\n          FRAMEWORK.extend(obj, extendObjRoot, true);\n        }\n        /**\t\r\n         * Runs a action for each selector inside the updateOnLoad option.\t\r\n         * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n         */\n\n\n        function eachUpdateOnLoad(action) {\n          var updateOnLoad = _currentPreparedOptions.updateOnLoad;\n          updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\n\n          if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\n            each(updateOnLoad, action);\n          }\n        } //==== Utils Cache ====//\n\n        /**\r\n         * Compares two values or objects and returns true if they aren't equal.\r\n         * @param current The first value or object which shall be compared.\r\n         * @param cache The second value or object which shall be compared.\r\n         * @param force If true the returned value is always true.\r\n         * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n         */\n\n\n        function checkCache(current, cache, force) {\n          if (force) return force;\n\n          if (type(current) == TYPES.o && type(cache) == TYPES.o) {\n            for (var prop in current) {\n              if (prop !== 'c') {\n                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\n                  if (checkCache(current[prop], cache[prop])) return true;\n                } else {\n                  return true;\n                }\n              }\n            }\n          } else {\n            return current !== cache;\n          }\n\n          return false;\n        } //==== Shortcuts ====//\n\n        /**\r\n         * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n         */\n\n\n        function extendDeep() {\n          return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\n        }\n        /**\r\n         * jQuery addClass method shortcut.\r\n         */\n\n\n        function addClass(el, classes) {\n          return _frameworkProto.addClass.call(el, classes);\n        }\n        /**\r\n         * jQuery removeClass method shortcut.\r\n         */\n\n\n        function removeClass(el, classes) {\n          return _frameworkProto.removeClass.call(el, classes);\n        }\n        /**\r\n         * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n         */\n\n\n        function addRemoveClass(el, classes, doAdd) {\n          return doAdd ? addClass(el, classes) : removeClass(el, classes);\n        }\n        /**\r\n         * jQuery remove method shortcut.\r\n         */\n\n\n        function remove(el) {\n          return _frameworkProto.remove.call(el);\n        }\n        /**\r\n         * Finds the first child element with the given selector of the given element.\r\n         * @param el The root element from which the selector shall be valid.\r\n         * @param selector The selector of the searched element.\r\n         * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n         */\n\n\n        function findFirst(el, selector) {\n          return _frameworkProto.find.call(el, selector).eq(0);\n        } //==== API ====//\n\n        /**\r\n         * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n         * This behavior can be reset by calling the update method.\r\n         */\n\n\n        _base.sleep = function () {\n          _sleeping = true;\n        };\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param force True if every property shall be updated and the cache shall be ignored.\r\n         * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n         * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n         * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n         * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n         * @returns {boolean|undefined} \r\n         * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n         * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n         * undefined otherwise.\r\n         */\n\n\n        _base.update = function (force) {\n          if (_destroyed) return;\n          var attrsChanged;\n          var contentSizeC;\n          var isString = type(force) == TYPES.s;\n          var doUpdateAuto;\n          var mutHost;\n          var mutContent;\n\n          if (isString) {\n            if (force === _strAuto) {\n              attrsChanged = meaningfulAttrsChanged();\n              contentSizeC = updateAutoContentSizeChanged();\n              doUpdateAuto = attrsChanged || contentSizeC;\n\n              if (doUpdateAuto) {\n                update({\n                  _contentSizeChanged: contentSizeC,\n                  _changedOptions: _initialized ? undefined$1 : _currentPreparedOptions\n                });\n              }\n            } else if (force === _strSync) {\n              if (_mutationObserversConnected) {\n                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\n                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\n              } else {\n                mutHost = _base.update(_strAuto);\n              }\n            } else if (force === 'zoom') {\n              update({\n                _hostSizeChanged: true,\n                _contentSizeChanged: true\n              });\n            }\n          } else {\n            force = _sleeping || force;\n            _sleeping = false;\n            if (!_base.update(_strSync) || force) update({\n              _force: force\n            });\n          }\n\n          updateElementsOnLoad();\n          return doUpdateAuto || mutHost || mutContent;\n        };\n        /**\r\n         Gets or sets the current options. The update method will be called automatically if new options were set.\r\n         * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n         * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n         * @returns {*}\r\n         */\n\n\n        _base.options = function (newOptions, value) {\n          var option = {};\n          var changedOps; //return current options if newOptions are undefined or empty\n\n          if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\n            if (type(newOptions) == TYPES.s) {\n              if (arguments.length > 1) {\n                setObjectPropVal(option, newOptions, value);\n                changedOps = setOptions(option);\n              } else return getObjectPropVal(_currentOptions, newOptions);\n            } else return _currentOptions;\n          } else {\n            changedOps = setOptions(newOptions);\n          }\n\n          if (!FRAMEWORK.isEmptyObject(changedOps)) {\n            update({\n              _changedOptions: changedOps\n            });\n          }\n        };\n        /**\r\n         * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n         */\n\n\n        _base.destroy = function () {\n          if (_destroyed) return; //remove this instance from auto update loop\n\n          autoUpdateLoop.remove(_base); //disconnect all mutation observers\n\n          disconnectMutationObservers(); //remove all resize observers\n\n          setupResizeObserver(_sizeObserverElement);\n          setupResizeObserver(_sizeAutoObserverElement); //remove all extensions\n\n          for (var extName in _extensions) {\n            _base.removeExt(extName);\n          } //remove all 'destroy' events\n\n\n          while (_destroyEvents[LEXICON.l] > 0) {\n            _destroyEvents.pop()();\n          } //remove all events from host element\n\n\n          setupHostMouseTouchEvents(true); //remove all helper / detection elements\n\n          if (_contentGlueElement) remove(_contentGlueElement);\n          if (_contentArrangeElement) remove(_contentArrangeElement);\n          if (_sizeAutoObserverAdded) remove(_sizeAutoObserverElement); //remove all generated DOM\n\n          setupScrollbarsDOM(true);\n          setupScrollbarCornerDOM(true);\n          setupStructureDOM(true); //remove all generated image load events\n\n          for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++) {\n            FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\n          }\n\n          _updateOnLoadElms = undefined$1;\n          _destroyed = true;\n          _sleeping = true; //remove this instance from the instances list\n\n          INSTANCES(pluginTargetElement, 0);\n          dispatchCallback('onDestroyed'); //remove all properties and methods\n          //for (var property in _base)\n          //    delete _base[property];\n          //_base = undefined;\n        };\n        /**\r\n         * Scrolls to a given position or element.\r\n         * @param coordinates\r\n         * 1. Can be \"coordinates\" which looks like:\r\n         *    { x : ?, y : ? } OR          Object with x and y properties\r\n         *    { left : ?, top : ? } OR     Object with left and top properties\r\n         *    { l : ?, t : ? } OR          Object with l and t properties\r\n         *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n         *    ?                            A single value which stays for both axis\r\n         *    A value can be a number, a string or a calculation.\r\n         *\r\n         *    Operators:\r\n         *    [NONE]  The current scroll will be overwritten by the value.\r\n         *    '+='    The value will be added to the current scroll offset\r\n         *    '-='    The value will be subtracted from the current scroll offset\r\n         *    '*='    The current scroll wil be multiplicated by the value.\r\n         *    '/='    The current scroll wil be divided by the value.\r\n         *\r\n         *    Units:\r\n         *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n         *    'px'    Same as none\r\n         *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n         *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n         *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n         *\r\n         *    example final values:\r\n         *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n         *\r\n         * 2. Can be a HTML or jQuery element:\r\n         *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n         *\r\n         * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n         *    {\r\n         *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n         *      scroll : [string, array, object],               Default value is 'always'.\r\n         *      block : [string, array, object],                Default value is 'begin'.\r\n         *      margin : [number, boolean, array, object]       Default value is false.\r\n         *    }\r\n         *\r\n         *    Possible scroll settings are:\r\n         *    'always'      Scrolls always.\r\n         *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n         *    'never'       Scrolls never.\r\n         *\r\n         *    Possible block settings are:\r\n         *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n         *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n         *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n         *    'nearest' The element will be docked to the nearest edge(s).\r\n         *\r\n         *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n         *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n         *    [NUMBER]                                          The margin will be used for all edges.\r\n         *\r\n         * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n         * @param easing The animation easing.\r\n         * @param complete The animation complete callback.\r\n         * @returns {{\r\n         *   position: {x: number, y: number},\r\n         *   ratio: {x: number, y: number},\r\n         *   max: {x: number, y: number},\r\n         *   handleOffset: {x: number, y: number},\r\n         *   handleLength: {x: number, y: number},\r\n         *   handleLengthRatio: {x: number, y: number}, t\r\n         *   rackLength: {x: number, y: number},\r\n         *   isRTL: boolean,\r\n         *   isRTLNormalized: boolean\r\n         *  }}\r\n         */\n\n\n        _base.scroll = function (coordinates, duration, easing, complete) {\n          if (arguments.length === 0 || coordinates === undefined$1) {\n            var infoX = _scrollHorizontalInfo;\n            var infoY = _scrollVerticalInfo;\n            var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\n            var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\n            var scrollX = infoX._currentScroll;\n            var scrollXRatio = infoX._currentScrollRatio;\n            var maxScrollX = infoX._maxScroll;\n            scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\n            scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\n            scrollX *= normalizeNegate ? -1 : 1;\n            maxScrollX *= normalizeNegate ? -1 : 1;\n            return {\n              position: {\n                x: scrollX,\n                y: infoY._currentScroll\n              },\n              ratio: {\n                x: scrollXRatio,\n                y: infoY._currentScrollRatio\n              },\n              max: {\n                x: maxScrollX,\n                y: infoY._maxScroll\n              },\n              handleOffset: {\n                x: infoX._handleOffset,\n                y: infoY._handleOffset\n              },\n              handleLength: {\n                x: infoX._handleLength,\n                y: infoY._handleLength\n              },\n              handleLengthRatio: {\n                x: infoX._handleLengthRatio,\n                y: infoY._handleLengthRatio\n              },\n              trackLength: {\n                x: infoX._trackLength,\n                y: infoY._trackLength\n              },\n              snappedHandleOffset: {\n                x: infoX._snappedHandleOffset,\n                y: infoY._snappedHandleOffset\n              },\n              isRTL: _isRTL,\n              isRTLNormalized: _normalizeRTLCache\n            };\n          }\n\n          _base.update(_strSync);\n\n          var normalizeRTL = _normalizeRTLCache;\n          var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\n          var coordinatesYAxisProps = [_strY, _strTop, 't'];\n          var coordinatesOperators = ['+=', '-=', '*=', '/='];\n          var durationIsObject = type(duration) == TYPES.o;\n          var completeCallback = durationIsObject ? duration.complete : complete;\n          var i;\n          var finalScroll = {};\n          var specialEasing = {};\n          var doScrollLeft;\n          var doScrollTop;\n          var animationOptions;\n          var strEnd = 'end';\n          var strBegin = 'begin';\n          var strCenter = 'center';\n          var strNearest = 'nearest';\n          var strAlways = 'always';\n          var strNever = 'never';\n          var strIfNeeded = 'ifneeded';\n          var strLength = LEXICON.l;\n          var settingsAxis;\n          var settingsScroll;\n          var settingsBlock;\n          var settingsMargin;\n          var finalElement;\n          var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\n          var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\n          var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\n          var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\n          var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\n          var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\n          var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\n\n          var updateScrollbarInfos = function updateScrollbarInfos() {\n            if (doScrollLeft) refreshScrollbarHandleOffset(true);\n            if (doScrollTop) refreshScrollbarHandleOffset(false);\n          };\n\n          var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined$1 : function () {\n            updateScrollbarInfos();\n            completeCallback();\n          };\n\n          function checkSettingsStringValue(currValue, allowedValues) {\n            for (i = 0; i < allowedValues[strLength]; i++) {\n              if (currValue === allowedValues[i]) return true;\n            }\n\n            return false;\n          }\n\n          function getRawScroll(isX, coordinates) {\n            var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\n            coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\n            if (COMPATIBILITY.isA(coordinates)) return isX ? coordinates[0] : coordinates[1];else if (type(coordinates) == TYPES.o) {\n              //decides RTL normalization \"hack\" with .n\n              //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \n              for (i = 0; i < coordinateProps[strLength]; i++) {\n                if (coordinateProps[i] in coordinates) return coordinates[coordinateProps[i]];\n              }\n            }\n          }\n\n          function getFinalScroll(isX, rawScroll) {\n            var isString = type(rawScroll) == TYPES.s;\n            var operator;\n            var amount;\n            var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\n            var currScroll = scrollInfo._currentScroll;\n            var maxScroll = scrollInfo._maxScroll;\n            var mult = ' * ';\n            var finalValue;\n            var isRTLisX = _isRTL && isX;\n            var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\n            var strReplace = 'replace';\n            var evalFunc = eval;\n            var possibleOperator;\n\n            if (isString) {\n              //check operator\n              if (rawScroll[strLength] > 2) {\n                possibleOperator = rawScroll.substr(0, 2);\n                if (inArray(possibleOperator, coordinatesOperators) > -1) operator = possibleOperator;\n              } //calculate units and shortcuts\n\n\n              rawScroll = operator ? rawScroll.substr(2) : rawScroll;\n              rawScroll = rawScroll[strReplace](/min/g, 0) //'min' = 0%\n              [strReplace](/</g, 0) //'<'   = 0%\n              [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'max' = 100%\n              [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'>'   = 100%\n              [strReplace](/px/g, _strEmpty)[strReplace](/%/g, mult + maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0)[strReplace](/vw/g, mult + _viewportSize.w)[strReplace](/vh/g, mult + _viewportSize.h);\n              amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\n            } else {\n              amount = rawScroll;\n            }\n\n            if (amount !== undefined$1 && !isNaN(amount) && type(amount) == TYPES.n) {\n              var normalizeIsRTLisX = normalizeRTL && isRTLisX;\n              var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\n              var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\n              var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\n              operatorCurrScroll = invert ? maxScroll - operatorCurrScroll : operatorCurrScroll;\n\n              switch (operator) {\n                case '+=':\n                  finalValue = operatorCurrScroll + amount;\n                  break;\n\n                case '-=':\n                  finalValue = operatorCurrScroll - amount;\n                  break;\n\n                case '*=':\n                  finalValue = operatorCurrScroll * amount;\n                  break;\n\n                case '/=':\n                  finalValue = operatorCurrScroll / amount;\n                  break;\n\n                default:\n                  finalValue = amount;\n                  break;\n              }\n\n              finalValue = invert ? maxScroll - finalValue : finalValue;\n              finalValue *= negate ? -1 : 1;\n              finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\n            }\n\n            return finalValue === currScroll ? undefined$1 : finalValue;\n          }\n\n          function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\n            var resultDefault = [defaultValue, defaultValue];\n            var valueType = type(value);\n            var valueArrLength;\n            var valueArrItem; //value can be [ string, or array of two strings ]\n\n            if (valueType == valueInternalType) {\n              value = [value, value];\n            } else if (valueType == TYPES.a) {\n              valueArrLength = value[strLength];\n              if (valueArrLength > 2 || valueArrLength < 1) value = resultDefault;else {\n                if (valueArrLength === 1) value[1] = defaultValue;\n\n                for (i = 0; i < valueArrLength; i++) {\n                  valueArrItem = value[i];\n\n                  if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\n                    value = resultDefault;\n                    break;\n                  }\n                }\n              }\n            } else if (valueType == TYPES.o) value = [value[_strX] || defaultValue, value[_strY] || defaultValue];else value = resultDefault;\n\n            return {\n              x: value[0],\n              y: value[1]\n            };\n          }\n\n          function generateMargin(marginTopRightBottomLeftArray) {\n            var result = [];\n            var currValue;\n            var currValueType;\n            var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\n\n            for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\n              if (i === valueDirections[strLength]) break;\n              currValue = marginTopRightBottomLeftArray[i];\n              currValueType = type(currValue);\n              if (currValueType == TYPES.b) result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);else result.push(currValueType == TYPES.n ? currValue : 0);\n            }\n\n            return result;\n          }\n\n          if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\n            //get settings\n            var margin = coordinatesIsElementObj ? coordinates.margin : 0;\n            var axis = coordinatesIsElementObj ? coordinates.axis : 0;\n            var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\n            var block = coordinatesIsElementObj ? coordinates.block : 0;\n            var marginDefault = [0, 0, 0, 0];\n            var marginType = type(margin);\n            var marginLength;\n            finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\n\n            if (finalElement[strLength] > 0) {\n              //margin can be [ boolean, number, array of 2, array of 4, object ]\n              if (marginType == TYPES.n || marginType == TYPES.b) margin = generateMargin([margin, margin, margin, margin]);else if (marginType == TYPES.a) {\n                marginLength = margin[strLength];\n                if (marginLength === 2) margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);else if (marginLength >= 4) margin = generateMargin(margin);else margin = marginDefault;\n              } else if (marginType == TYPES.o) margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);else margin = marginDefault; //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\n\n              settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\n              settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\n              settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\n              settingsMargin = margin;\n              var viewportScroll = {\n                l: _scrollHorizontalInfo._currentScroll,\n                t: _scrollVerticalInfo._currentScroll\n              }; // use padding element instead of viewport element because padding element has never padding, margin or position applied.\n\n              var viewportOffset = _paddingElement.offset(); //get coordinates\n\n\n              var elementOffset = finalElement.offset();\n              var doNotScroll = {\n                x: settingsScroll.x == strNever || settingsAxis == _strY,\n                y: settingsScroll.y == strNever || settingsAxis == _strX\n              };\n              elementOffset[_strTop] -= settingsMargin[0];\n              elementOffset[_strLeft] -= settingsMargin[3];\n              var elementScrollCoordinates = {\n                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\n                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\n              };\n\n              if (_isRTL) {\n                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\n                if (_rtlScrollBehavior.n && normalizeRTL) elementScrollCoordinates.x *= -1;\n                if (_rtlScrollBehavior.i && normalizeRTL) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\n              } //measuring is required\n\n\n              if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\n                var measuringElm = finalElement[0];\n                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\n                  width: measuringElm[LEXICON.oW],\n                  height: measuringElm[LEXICON.oH]\n                };\n                var elementSize = {\n                  w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\n                  h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\n                };\n\n                var finalizeBlock = function finalizeBlock(isX) {\n                  var vars = getScrollbarVars(isX);\n                  var wh = vars._w_h;\n                  var lt = vars._left_top;\n                  var xy = vars._x_y;\n                  var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\n                  var blockIsCenter = settingsBlock[xy] == strCenter;\n                  var blockIsNearest = settingsBlock[xy] == strNearest;\n                  var scrollNever = settingsScroll[xy] == strNever;\n                  var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\n                  var vpSize = _viewportSize[wh];\n                  var vpOffset = viewportOffset[lt];\n                  var elSize = elementSize[wh];\n                  var elOffset = elementOffset[lt];\n                  var divide = blockIsCenter ? 2 : 1;\n                  var elementCenterOffset = elOffset + elSize / 2;\n                  var viewportCenterOffset = vpOffset + vpSize / 2;\n                  var isInView = elSize <= vpSize && elOffset >= vpOffset && elOffset + elSize <= vpOffset + vpSize;\n                  if (scrollNever) doNotScroll[xy] = true;else if (!doNotScroll[xy]) {\n                    if (blockIsNearest || scrollIfNeeded) {\n                      doNotScroll[xy] = scrollIfNeeded ? isInView : false;\n                      blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\n                    }\n\n                    elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? (vpSize / divide - elSize / divide) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\n                  }\n                };\n\n                finalizeBlock(true);\n                finalizeBlock(false);\n              }\n\n              if (doNotScroll.y) delete elementScrollCoordinates.y;\n              if (doNotScroll.x) delete elementScrollCoordinates.x;\n              coordinates = elementScrollCoordinates;\n            }\n          }\n\n          finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\n          finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\n          doScrollLeft = finalScroll[_strScrollLeft] !== undefined$1;\n          doScrollTop = finalScroll[_strScrollTop] !== undefined$1;\n\n          if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\n            if (durationIsObject) {\n              duration.complete = proxyCompleteCallback;\n\n              _viewportElement.animate(finalScroll, duration);\n            } else {\n              animationOptions = {\n                duration: duration,\n                complete: proxyCompleteCallback\n              };\n\n              if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\n                specialEasing[_strScrollLeft] = easing[0] || easing.x;\n                specialEasing[_strScrollTop] = easing[1] || easing.y;\n                animationOptions.specialEasing = specialEasing;\n              } else {\n                animationOptions.easing = easing;\n              }\n\n              _viewportElement.animate(finalScroll, animationOptions);\n            }\n          } else {\n            if (doScrollLeft) _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\n            if (doScrollTop) _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\n            updateScrollbarInfos();\n          }\n        };\n        /**\r\n         * Stops all scroll animations.\r\n         * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n         */\n\n\n        _base.scrollStop = function (param1, param2, param3) {\n          _viewportElement.stop(param1, param2, param3);\n\n          return _base;\n        };\n        /**\r\n         * Returns all relevant elements.\r\n         * @param elementName The name of the element which shall be returned.\r\n         * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n         */\n\n\n        _base.getElements = function (elementName) {\n          var obj = {\n            target: _targetElementNative,\n            host: _hostElementNative,\n            padding: _paddingElementNative,\n            viewport: _viewportElementNative,\n            content: _contentElementNative,\n            scrollbarHorizontal: {\n              scrollbar: _scrollbarHorizontalElement[0],\n              track: _scrollbarHorizontalTrackElement[0],\n              handle: _scrollbarHorizontalHandleElement[0]\n            },\n            scrollbarVertical: {\n              scrollbar: _scrollbarVerticalElement[0],\n              track: _scrollbarVerticalTrackElement[0],\n              handle: _scrollbarVerticalHandleElement[0]\n            },\n            scrollbarCorner: _scrollbarCornerElement[0]\n          };\n          return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\n        };\n        /**\r\n         * Returns a object which describes the current state of this instance.\r\n         * @param stateProperty A specific property from the state object which shall be returned.\r\n         * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n         */\n\n\n        _base.getState = function (stateProperty) {\n          function prepare(obj) {\n            if (!FRAMEWORK.isPlainObject(obj)) return obj;\n            var extended = extendDeep({}, obj);\n\n            var changePropertyName = function changePropertyName(from, to) {\n              if (extended[LEXICON.hOP](from)) {\n                extended[to] = extended[from];\n                delete extended[from];\n              }\n            };\n\n            changePropertyName('w', _strWidth); //change w to width\n\n            changePropertyName('h', _strHeight); //change h to height\n\n            delete extended.c; //delete c (the 'changed' prop)\n\n            return extended;\n          }\n\n          var obj = {\n            destroyed: !!prepare(_destroyed),\n            sleeping: !!prepare(_sleeping),\n            autoUpdate: prepare(!_mutationObserversConnected),\n            widthAuto: prepare(_widthAutoCache),\n            heightAuto: prepare(_heightAutoCache),\n            padding: prepare(_cssPaddingCache),\n            overflowAmount: prepare(_overflowAmountCache),\n            hideOverflow: prepare(_hideOverflowCache),\n            hasOverflow: prepare(_hasOverflowCache),\n            contentScrollSize: prepare(_contentScrollSizeCache),\n            viewportSize: prepare(_viewportSize),\n            hostSize: prepare(_hostSizeCache),\n            documentMixed: prepare(_documentMixed)\n          };\n          return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\n        };\n        /**\r\n         * Gets all or specific extension instance.\r\n         * @param extName The name of the extension from which the instance shall be got.\r\n         * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n         */\n\n\n        _base.ext = function (extName) {\n          var result;\n\n          var privateMethods = _extensionsPrivateMethods.split(' ');\n\n          var i = 0;\n\n          if (type(extName) == TYPES.s) {\n            if (_extensions[LEXICON.hOP](extName)) {\n              result = extendDeep({}, _extensions[extName]);\n\n              for (; i < privateMethods.length; i++) {\n                delete result[privateMethods[i]];\n              }\n            }\n          } else {\n            result = {};\n\n            for (i in _extensions) {\n              result[i] = extendDeep({}, _base.ext(i));\n            }\n          }\n\n          return result;\n        };\n        /**\r\n         * Adds a extension to this instance.\r\n         * @param extName The name of the extension which shall be added.\r\n         * @param extensionOptions The extension options which shall be used.\r\n         * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n         */\n\n\n        _base.addExt = function (extName, extensionOptions) {\n          var registeredExtensionObj = _plugin.extension(extName);\n\n          var instance;\n          var instanceAdded;\n          var instanceContract;\n          var contractResult;\n          var contractFulfilled = true;\n\n          if (registeredExtensionObj) {\n            if (!_extensions[LEXICON.hOP](extName)) {\n              instance = registeredExtensionObj.extensionFactory.call(_base, extendDeep({}, registeredExtensionObj.defaultOptions), FRAMEWORK, COMPATIBILITY);\n\n              if (instance) {\n                instanceContract = instance.contract;\n\n                if (type(instanceContract) == TYPES.f) {\n                  contractResult = instanceContract(window);\n                  contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\n                }\n\n                if (contractFulfilled) {\n                  _extensions[extName] = instance;\n                  instanceAdded = instance.added;\n                  if (type(instanceAdded) == TYPES.f) instanceAdded(extensionOptions);\n                  return _base.ext(extName);\n                }\n              }\n            } else return _base.ext(extName);\n          } else console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\n        };\n        /**\r\n         * Removes a extension from this instance.\r\n         * @param extName The name of the extension which shall be removed.\r\n         * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n         */\n\n\n        _base.removeExt = function (extName) {\n          var instance = _extensions[extName];\n          var instanceRemoved;\n\n          if (instance) {\n            delete _extensions[extName];\n            instanceRemoved = instance.removed;\n            if (type(instanceRemoved) == TYPES.f) instanceRemoved();\n            return true;\n          }\n\n          return false;\n        };\n        /**\r\n         * Constructs the plugin.\r\n         * @param targetElement The element to which the plugin shall be applied.\r\n         * @param options The initial options of the plugin.\r\n         * @param extensions The extension(s) which shall be added right after the initialization.\r\n         * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n         */\n\n\n        function construct(targetElement, options, extensions) {\n          _defaultOptions = globals.defaultOptions;\n          _nativeScrollbarStyling = globals.nativeScrollbarStyling;\n          _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n          _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\n          _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\n          _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior); //parse & set options but don't update\n\n          setOptions(extendDeep({}, _defaultOptions, options));\n          _cssCalc = globals.cssCalc;\n          _msieVersion = globals.msie;\n          _autoUpdateRecommended = globals.autoUpdateRecommended;\n          _supportTransition = globals.supportTransition;\n          _supportTransform = globals.supportTransform;\n          _supportPassiveEvents = globals.supportPassiveEvents;\n          _supportResizeObserver = globals.supportResizeObserver;\n          _supportMutationObserver = globals.supportMutationObserver;\n          _documentElement = FRAMEWORK(targetElement.ownerDocument);\n          _documentElementNative = _documentElement[0];\n          _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\n          _windowElementNative = _windowElement[0];\n          _htmlElement = findFirst(_documentElement, 'html');\n          _bodyElement = findFirst(_htmlElement, 'body');\n          _targetElement = FRAMEWORK(targetElement);\n          _targetElementNative = _targetElement[0];\n          _isTextarea = _targetElement.is('textarea');\n          _isBody = _targetElement.is('body');\n          _documentMixed = _documentElementNative !== document;\n          /* On a div Element The if checks only whether:\r\n           * - the targetElement has the class \"os-host\"\r\n           * - the targetElement has a a child with the class \"os-padding\"\r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-host\" element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding\">\r\n           *          <div class=\"os-viewport\">\r\n           *              <div class=\"os-content\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           *\r\n           * =====================================================================================\r\n           * \r\n           * On a Textarea Element The if checks only whether:\r\n           * - the targetElement has the class \"os-textarea\" \r\n           * - the targetElement is inside a element with the class \"os-content\" \r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-textarea\" (textarea) element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host-textarea\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding os-text-inherit\">\r\n           *          <div class=\"os-viewport os-text-inherit\">\r\n           *              <div class=\"os-content os-text-inherit\">\r\n           *                  <div class=\"os-textarea-cover\"></div>\r\n           *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n           *              </div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           */\n\n          _domExists = _isTextarea ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement) : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\n          var initBodyScroll;\n\n          var _bodyMouseTouchDownListener; //check if the plugin hasn't to be initialized\n\n\n          if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\n            dispatchCallback('onInitializationWithdrawn');\n\n            if (_domExists) {\n              setupStructureDOM(true);\n              setupScrollbarsDOM(true);\n              setupScrollbarCornerDOM(true);\n            }\n\n            _destroyed = true;\n            _sleeping = true;\n            return _base;\n          }\n\n          if (_isBody) {\n            initBodyScroll = {};\n            initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\n            initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\n\n            _bodyMouseTouchDownListener = function bodyMouseTouchDownListener() {\n              _viewportElement.removeAttr(LEXICON.ti);\n\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, true, true);\n            };\n          } //build OverlayScrollbars DOM\n\n\n          setupStructureDOM();\n          setupScrollbarsDOM();\n          setupScrollbarCornerDOM(); //create OverlayScrollbars events\n\n          setupStructureEvents();\n          setupScrollbarEvents(true);\n          setupScrollbarEvents(false);\n          setupScrollbarCornerEvents(); //create mutation observers\n\n          createMutationObservers(); //build resize observer for the host element\n\n          setupResizeObserver(_sizeObserverElement, hostOnResized);\n\n          if (_isBody) {\n            //apply the body scroll to handle it right in the update method\n            _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t); //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\n\n\n            if (document.activeElement == targetElement && _viewportElementNative.focus) {\n              //set a tabindex to make the viewportElement focusable\n              _viewportElement.attr(LEXICON.ti, '-1');\n\n              _viewportElementNative.focus();\n              /* the tabindex has to be removed due to;\r\n               * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n               * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n               */\n\n\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, false, true);\n            }\n          } //update for the first time & initialize cache\n\n\n          _base.update(_strAuto); //the plugin is initialized now!\n\n\n          _initialized = true;\n          dispatchCallback('onInitialized'); //call all callbacks which would fire before the initialized was complete\n\n          each(_callbacksInitQeueue, function (index, value) {\n            dispatchCallback(value.n, value.a);\n          });\n          _callbacksInitQeueue = []; //add extensions\n\n          if (type(extensions) == TYPES.s) extensions = [extensions];\n          if (COMPATIBILITY.isA(extensions)) each(extensions, function (index, value) {\n            _base.addExt(value);\n          });else if (FRAMEWORK.isPlainObject(extensions)) each(extensions, function (key, value) {\n            _base.addExt(key, value);\n          }); //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\n\n          setTimeout(function () {\n            if (_supportTransition && !_destroyed) addClass(_hostElement, _classNameHostTransition);\n          }, 333);\n          return _base;\n        }\n\n        if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\n          INSTANCES(pluginTargetElement, _base);\n        }\n\n        return _base;\n      }\n      /**\r\n       * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n       * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n       * @param options The custom options with which the plugin shall be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*}\r\n       */\n\n\n      _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\n        if (arguments[LEXICON.l] === 0) return this;\n        var arr = [];\n        var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\n        var inst;\n        var result; //pluginTargetElements is null or undefined\n\n        if (!pluginTargetElements) return optsIsPlainObj || !options ? result : arr;\n        /*\r\n           pluginTargetElements will be converted to:\r\n           1. A jQueryElement Array\r\n           2. A HTMLElement Array\r\n           3. A Array with a single HTML Element\r\n           so pluginTargetElements is always a array.\r\n        */\n\n        pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined$1 ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\n        initOverlayScrollbarsStatics();\n\n        if (pluginTargetElements[LEXICON.l] > 0) {\n          if (optsIsPlainObj) {\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\n              inst = v;\n              if (inst !== undefined$1) arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\n            });\n          } else {\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\n              inst = INSTANCES(v);\n              if (options === '!' && _plugin.valid(inst) || COMPATIBILITY.type(options) == TYPES.f && options(v, inst)) arr.push(inst);else if (options === undefined$1) arr.push(inst);\n            });\n          }\n\n          result = arr[LEXICON.l] === 1 ? arr[0] : arr;\n        }\n\n        return result;\n      };\n      /**\r\n       * Returns a object which contains global information about the plugin and each instance of it.\r\n       * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n       */\n\n\n      _plugin.globals = function () {\n        initOverlayScrollbarsStatics();\n        var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\n        delete globals['msie'];\n        return globals;\n      };\n      /**\r\n       * Gets or Sets the default options for each new plugin initialization.\r\n       * @param newDefaultOptions The object with which the default options shall be extended.\r\n       */\n\n\n      _plugin.defaultOptions = function (newDefaultOptions) {\n        initOverlayScrollbarsStatics();\n        var currDefaultOptions = _pluginsGlobals.defaultOptions;\n        if (newDefaultOptions === undefined$1) return FRAMEWORK.extend(true, {}, currDefaultOptions); //set the new default options\n\n        _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\n      };\n      /**\r\n       * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n       * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n       * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n       */\n\n\n      _plugin.valid = function (osInstance) {\n        return osInstance instanceof _plugin && !osInstance.getState().destroyed;\n      };\n      /**\r\n       * Registers, Unregisters or returns a extension.\r\n       * Register: Pass the name and the extension. (defaultOptions is optional)\r\n       * Unregister: Pass the name and anything except a function as extension parameter.\r\n       * Get extension: Pass the name of the extension which shall be got.\r\n       * Get all extensions: Pass no arguments.\r\n       * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n       * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n       * @param defaultOptions The default options which shall be used for the registered extension.\r\n       */\n\n\n      _plugin.extension = function (extensionName, extension, defaultOptions) {\n        var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\n        var argLen = arguments[LEXICON.l];\n        var i = 0;\n\n        if (argLen < 1 || !extNameTypeString) {\n          //return a copy of all extension objects\n          return FRAMEWORK.extend(true, {\n            length: _pluginsExtensions[LEXICON.l]\n          }, _pluginsExtensions);\n        } else if (extNameTypeString) {\n          if (COMPATIBILITY.type(extension) == TYPES.f) {\n            //register extension\n            _pluginsExtensions.push({\n              name: extensionName,\n              extensionFactory: extension,\n              defaultOptions: defaultOptions\n            });\n          } else {\n            for (; i < _pluginsExtensions[LEXICON.l]; i++) {\n              if (_pluginsExtensions[i].name === extensionName) {\n                if (argLen > 1) _pluginsExtensions.splice(i, 1); //remove extension\n                else return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\n              }\n            }\n          }\n        }\n      };\n\n      return _plugin;\n    }();\n\n    if (JQUERY && JQUERY.fn) {\n      /**\r\n       * The jQuery initialization interface.\r\n       * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n       */\n      JQUERY.fn.overlayScrollbars = function (options, extensions) {\n        var _elements = this;\n\n        if (JQUERY.isPlainObject(options)) {\n          JQUERY.each(_elements, function () {\n            PLUGIN(this, options, extensions);\n          });\n          return _elements;\n        } else return PLUGIN(_elements, options);\n      };\n    }\n\n    return PLUGIN;\n  });\n})(OverlayScrollbars$1);\n\nvar OverlayScrollbars = OverlayScrollbars$1.exports;\n/**\n * Using overlayscrollbars-react component results use the esm modules\n * which doesn't go through babel leading to IE 11 uncompatibility\n * A PR is submitted that may fix this:\n * https://github.com/KingSora/OverlayScrollbars/pull/218\n * */\n\nvar OverlayScrollbarsComponent = function OverlayScrollbarsComponent(_a) {\n  var _a$options = _a.options,\n      options = _a$options === void 0 ? {} : _a$options,\n      extensions = _a.extensions,\n      className = _a.className,\n      children = _a.children,\n      rest = __rest(_a, [\"options\", \"extensions\", \"className\", \"children\"]);\n\n  var osTargetRef = useRef();\n  var osInstance = useRef();\n  useEffect(function () {\n    osInstance.current = OverlayScrollbars(osTargetRef.current, options, extensions);\n    mergeHostClassNames(osInstance.current, className);\n    return function () {\n      if (OverlayScrollbars.valid(osInstance.current)) {\n        osInstance.current.destroy();\n        osInstance.current = null;\n      }\n    };\n  }, []);\n  useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      osInstance.current.options(options);\n    }\n  }, [options]);\n  useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      mergeHostClassNames(osInstance.current, className);\n    }\n  }, [className]);\n  return React__default.createElement(\"div\", Object.assign({\n    className: \"os-host\"\n  }, rest, {\n    ref: osTargetRef\n  }), React__default.createElement(\"div\", {\n    className: \"os-resize-observer-host\"\n  }), React__default.createElement(\"div\", {\n    className: \"os-padding\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-viewport\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-content\"\n  }, children))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-horizontal \"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-vertical\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar-corner\"\n  }));\n};\n\nfunction mergeHostClassNames(osInstance, className) {\n  if (OverlayScrollbars.valid(osInstance)) {\n    var _osInstance$getElemen = osInstance.getElements(),\n        host = _osInstance$getElemen.host;\n\n    var regex = new RegExp(\"(^os-host([-_].+|)$)|\".concat(osInstance.options().className.replace(/\\s/g, '$|'), \"$\"), 'g');\n    var osClassNames = host.className.split(' ').filter(function (name) {\n      return name.match(regex);\n    }).join(' ');\n    host.className = \"\".concat(osClassNames, \" \").concat(className || '');\n  }\n}\n\nexport { OverlayScrollbarsComponent, OverlayScrollbarsComponent as default };\n"],
  "mappings": "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",
  "names": ["_typeof", "obj", "Symbol", "iterator", "constructor", "prototype", "OverlayScrollbars$1", "exports", "module", "global", "factory", "document", "undefined", "window", "commonjsGlobal", "undefined$1", "PLUGINNAME", "TYPES", "o", "f", "a", "s", "b", "n", "u", "z", "LEXICON", "c", "i", "l", "p", "ti", "oH", "cH", "sH", "oW", "cW", "sW", "hOP", "bCR", "VENDORS", "jsCache", "cssCache", "cssPrefixes", "jsPrefixes", "firstLetterToUpper", "str", "charAt", "toUpperCase", "slice", "_cssPrefixes", "_jsPrefixes", "_cssProperty", "name", "result", "uppercasedName", "elmStyle", "createElement", "resultPossibilities", "v", "currVendorWithoutDashes", "length", "replace", "_cssPropertyValue", "property", "values", "suffix", "dummyStyle", "possbleValues", "split", "preparedSuffix", "prop", "cssText", "_jsAPI", "isInterface", "fallback", "toLowerCase", "COMPATIBILITY", "windowSize", "x", "innerWidth", "documentElement", "body", "innerHeight", "bind", "func", "thisObj", "proto", "aArgs", "Array", "call", "arguments", "fNOP", "fBound", "apply", "concat", "wW", "wH", "mO", "rO", "rAF", "setTimeout", "cAF", "id", "clearTimeout", "now", "Date", "getTime", "stpP", "event", "stopPropagation", "cancelBubble", "prvD", "preventDefault", "cancelable", "returnValue", "page", "originalEvent", "strPage", "strClient", "strX", "strY", "target", "srcElement", "eventDoc", "ownerDocument", "doc", "touches", "touch", "y", "scrollLeft", "clientLeft", "scrollTop", "clientTop", "mBtn", "button", "which", "inA", "item", "arr", "e", "isA", "def", "isArray", "type", "Object", "toString", "MATH", "Math", "JQUERY", "jQuery", "EASING", "_easingsMath", "PI", "cos", "sin", "w", "pow", "t", "sqrt", "asin", "abs", "swing", "d", "linear", "easeInQuad", "easeOutQuad", "easeInOutQuad", "easeInCubic", "easeOutCubic", "easeInOutCubic", "easeInQuart", "easeOutQuart", "easeInOutQuart", "easeInQuint", "easeOutQuint", "easeInOutQuint", "easeInSine", "easeOutSine", "easeInOutSine", "easeInExpo", "easeOutExpo", "easeInOutExpo", "easeInCirc", "easeOutCirc", "easeInOutCirc", "easeInElastic", "easeOutElastic", "easeInOutElastic", "easeInBack", "easeOutBack", "easeInOutBack", "easeInBounce", "easeOutBounce", "easeInOutBounce", "FRAMEWORK", "_rnothtmlwhite", "_strSpace", "_strEmpty", "_strScrollLeft", "_strScrollTop", "_animations", "_type", "_cssNumber", "animationIterationCount", "columnCount", "fillOpacity", "flexGrow", "flexShrink", "fontWeight", "lineHeight", "opacity", "order", "orphans", "widows", "zIndex", "zoom", "extend", "src", "copyIsArray", "copy", "options", "clone", "deep", "FakejQuery", "isPlainObject", "inArray", "fromIndex", "isFunction", "isEmptyObject", "key", "hasOwnProperty", "hasOwnConstructor", "hasIsPrototypeOf", "_each", "callback", "isArrayLike", "stripAndCollapse", "value", "tokens", "match", "join", "matches", "elem", "selector", "nodeList", "parentNode", "querySelectorAll", "insertAdjacentElement", "el", "strategy", "child", "insertAdjacentHTML", "nodeType", "setCSSVal", "val", "parseCSSVal", "startNextAnimationInQ", "animObj", "removeFromQ", "index", "nextAnim", "q", "splice", "_animate", "props", "duration", "easing", "complete", "setAnimationValue", "guaranteedNext", "hasOptions", "from", "to", "progress", "step", "specialEasing", "push", "css", "timeNow", "end", "percent", "fromVal", "toVal", "easedVal", "timeStart", "_frame", "elapsed", "qPos", "qObj", "frame", "stop", "max", "parseFloat", "start", "pos", "speacialEasing", "startTime", "_stop", "clearQ", "jumpToEnd", "elementIsVisible", "getClientRects", "base", "elements", "elms", "innerHTML", "children", "self", "on", "eventName", "handler", "eventNameLength", "each", "addEventListener", "detachEvent", "attachEvent", "off", "removeEventListener", "one", "oneEventName", "oneHandler", "trigger", "createEvent", "initEvent", "dispatchEvent", "fireEvent", "append", "prepend", "before", "after", "remove", "removeChild", "unwrap", "parents", "parent", "firstChild", "insertBefore", "wrapAll", "wrapperHTML", "nodes", "wrapper", "deepest", "previousSibling", "childNodes", "appendChild", "nextSibling", "wrapInner", "contents", "wrap", "styles", "cptStyle", "getCptStyle", "getComputedStyle", "currentStyle", "getPropertyValue", "hasClass", "className", "classNamePrepared", "classList", "contains", "indexOf", "addClass", "classes", "cur", "curValue", "clazz", "finalValue", "supportClassList", "elmClassList", "add", "removeClass", "hide", "display", "show", "attr", "attrName", "getAttribute", "setAttribute", "removeAttr", "removeAttribute", "offset", "rect", "pageXOffset", "pageYOffset", "top", "left", "position", "offsetTop", "offsetLeft", "first", "eq", "last", "find", "ch", "is", "childs", "animate", "jump", "INSTANCES", "_targets", "_instancePropertyString", "instance", "argLen", "PLUGIN", "_plugin", "_pluginsGlobals", "_pluginsAutoUpdateLoop", "_pluginsExtensions", "_pluginsOptions", "possibleTemplateTypes", "restrictedStringsSplit", "restrictedStringsPossibilitiesSplit", "classNameAllowedValues", "numberAllowedValues", "booleanNullAllowedValues", "booleanTrueTemplate", "booleanFalseTemplate", "callbackTemplate", "updateOnLoadTemplate", "inheritedAttrsTemplate", "resizeAllowedValues", "overflowBehaviorAllowedValues", "scrollbarsVisibilityAllowedValues", "scrollbarsAutoHideAllowedValues", "optionsDefaultsAndTemplate", "resize", "sizeAutoCapable", "clipAlways", "normalizeRTL", "paddingAbsolute", "autoUpdate", "autoUpdateInterval", "updateOnLoad", "nativeScrollbarsOverlaid", "showNativeScrollbars", "initialize", "overflowBehavior", "scrollbars", "visibility", "autoHide", "autoHideDelay", "dragScrolling", "clickScrolling", "touchSupport", "snapHandle", "textarea", "dynWidth", "dynHeight", "inheritedAttrs", "callbacks", "onInitialized", "onInitializationWithdrawn", "onDestroyed", "onScrollStart", "onScroll", "onScrollStop", "onOverflowChanged", "onOverflowAmountChanged", "onDirectionChanged", "onContentSizeChanged", "onHostSizeChanged", "onUpdated", "convert", "template", "recursive", "valType", "_defaults", "_template", "_validate", "writeErrors", "diffObj", "validatedOptions", "validatedOptionsPrepared", "objectCopy", "isEmptyObj", "checkObjectProps", "data", "diffData", "prevPropName", "isValid", "isDiff", "templateValue", "templateValueType", "templateIsComplex", "templateTypes", "dataDiffValue", "dataValue", "dataValueType", "propPrefix", "error", "errorPossibleTypes", "errorRestrictedStrings", "restrictedStringValuesSplit", "restrictedStringValuesPossibilitiesSplit", "isRestrictedValue", "mainPossibility", "currType", "j", "console", "warn", "JSON", "stringify", "_default", "_prepared", "initOverlayScrollbarsStatics", "OverlayScrollbarsGlobals", "OverlayScrollbarsAutoUpdateLoop", "defaultOptions", "_base", "strOverflow", "strHidden", "strScroll", "bodyElement", "scrollbarDummyElement", "scrollbarDummyElement0", "dummyContainerChild", "nativeScrollbarSize", "calcNativeScrollbarSize", "nativeScrollbarIsOverlaid", "msie", "ua", "navigator", "userAgent", "strIndexOf", "strSubString", "trident", "edge", "rv", "parseIntFunc", "parseInt", "autoUpdateLoop", "autoUpdateRecommended", "nativeScrollbarStyling", "ex", "overlayScrollbarDummySize", "cssCalc", "restrictedMeasuring", "scrollSize", "h", "scrollSize2", "rtlScrollBehavior", "dummyContainerOffset", "dummyContainerChildOffset", "dummyContainerChildOffsetAfterScroll", "supportTransform", "supportTransition", "supportPassiveEvents", "supportsPassive", "defineProperty", "get", "supportResizeObserver", "supportMutationObserver", "windowWidth", "windowHeight", "windowDpr", "getWindowDPR", "onResize", "newW", "newH", "deltaW", "deltaH", "deltaWRatio", "round", "deltaHRatio", "absDeltaW", "absDeltaH", "absDeltaWRatio", "absDeltaHRatio", "newDPR", "deltaIsBigger", "difference", "differenceIsBiggerThanOne", "dprChanged", "isZoom", "oldScrollbarSize", "newScrollbarSize", "update", "valOne", "valTwo", "absValOne", "absValTwo", "dDPI", "screen", "deviceXDPI", "sDPI", "logicalXDPI", "devicePixelRatio", "measureElement", "globals", "_inArray", "_getNow", "_strAutoUpdate", "_strAutoUpdateInterval", "_strLength", "_loopingInstances", "_loopingInstancesIntervalCache", "_loopIsActive", "_loopIntervalDefault", "_loopInterval", "_loopTimeOld", "_loopID", "loop", "timeNew", "timeDelta", "lowestInterval", "instanceOptions", "instanceAutoUpdateAllowed", "instanceAutoUpdateInterval", "min", "OverlayScrollbarsInstance", "pluginTargetElement", "extensions", "_frameworkProto", "isHTMLElement", "inst", "_nativeScrollbarIsOverlaid", "_overlayScrollbarDummySize", "_rtlScrollBehavior", "_autoUpdateRecommended", "_msieVersion", "_nativeScrollbarStyling", "_cssCalc", "_nativeScrollbarSize", "_supportTransition", "_supportTransform", "_supportPassiveEvents", "_supportResizeObserver", "_supportMutationObserver", "_initialized", "_destroyed", "_isTextarea", "_isBody", "_documentMixed", "_domExists", "_isBorderBox", "_sizeAutoObserverAdded", "_paddingX", "_paddingY", "_borderX", "_borderY", "_marginX", "_marginY", "_isRTL", "_sleeping", "_contentBorderSize", "_scrollHorizontalInfo", "_scrollVerticalInfo", "_viewportSize", "_nativeScrollbarMinSize", "_strMinusHidden", "_strMarginMinus", "_strPaddingMinus", "_strBorderMinus", "_strTop", "_strRight", "_strBottom", "_strLeft", "_strMinMinus", "_strMaxMinus", "_strWidth", "_strHeight", "_strFloat", "_strAuto", "_strSync", "_strScroll", "_strHundredPercent", "_strX", "_strY", "_strDot", "_strScrollbar", "_strMinusHorizontal", "_strMinusVertical", "_strMouseTouchDownEvent", "_strMouseTouchUpEvent", "_strMouseTouchMoveEvent", "_strMouseEnter", "_strMouseLeave", "_strKeyDownEvent", "_strKeyUpEvent", "_strSelectStartEvent", "_strTransitionEndEvent", "_strResizeObserverProperty", "_cassNamesPrefix", "_classNameHTMLElement", "_classNameHostElement", "_classNameHostElementForeign", "_classNameHostTextareaElement", "_classNameHostScrollbarHorizontalHidden", "_classNameHostScrollbarVerticalHidden", "_classNameHostTransition", "_classNameHostRTL", "_classNameHostResizeDisabled", "_classNameHostScrolling", "_classNameHostOverflow", "_classNameHostOverflowX", "_classNameHostOverflowY", "_classNameTextareaElement", "_classNameTextareaCoverElement", "_classNamePaddingElement", "_classNameViewportElement", "_classNameViewportNativeScrollbarsInvisible", "_classNameViewportNativeScrollbarsOverlaid", "_classNameContentElement", "_classNameContentArrangeElement", "_classNameContentGlueElement", "_classNameSizeAutoObserverElement", "_classNameResizeObserverElement", "_classNameResizeObserverItemElement", "_classNameResizeObserverItemFinalElement", "_classNameTextInherit", "_classNameScrollbar", "_classNameScrollbarTrack", "_classNameScrollbarTrackOff", "_classNameScrollbarHandle", "_classNameScrollbarHandleOff", "_classNameScrollbarUnusable", "_classNameScrollbarAutoHidden", "_classNameScrollbarCorner", "_classNameScrollbarCornerResize", "_classNameScrollbarCornerResizeB", "_classNameScrollbarCornerResizeH", "_classNameScrollbarCornerResizeV", "_classNameScrollbarHorizontal", "_classNameScrollbarVertical", "_classNameDragging", "_classNameThemeNone", "_classNamesDynamicDestroy", "_callbacksInitQeueue", "_viewportAttrsFromTarget", "_defaultOptions", "_currentOptions", "_currentPreparedOptions", "_extensions", "_extensionsPrivateMethods", "_lastUpdateTime", "_swallowedUpdateHints", "_swallowedUpdateTimeout", "_swallowUpdateLag", "_updateOnLoadEventName", "_updateOnLoadElms", "_windowElement", "_documentElement", "_htmlElement", "_bodyElement", "_targetElement", "_hostElement", "_sizeAutoObserverElement", "_sizeObserverElement", "_paddingElement", "_viewportElement", "_contentElement", "_contentArrangeElement", "_contentGlueElement", "_textareaCoverElement", "_scrollbarCornerElement", "_scrollbarHorizontalElement", "_scrollbarHorizontalTrackElement", "_scrollbarHorizontalHandleElement", "_scrollbarVerticalElement", "_scrollbarVerticalTrackElement", "_scrollbarVerticalHandleElement", "_windowElementNative", "_documentElementNative", "_targetElementNative", "_hostElementNative", "_sizeAutoObserverElementNative", "_sizeObserverElementNative", "_paddingElementNative", "_viewportElementNative", "_contentElementNative", "_hostSizeCache", "_contentScrollSizeCache", "_arrangeContentSizeCache", "_hasOverflowCache", "_hideOverflowCache", "_widthAutoCache", "_heightAutoCache", "_cssBoxSizingCache", "_cssPaddingCache", "_cssBorderCache", "_cssMarginCache", "_cssDirectionCache", "_cssDirectionDetectedCache", "_paddingAbsoluteCache", "_clipAlwaysCache", "_contentGlueSizeCache", "_overflowBehaviorCache", "_overflowAmountCache", "_ignoreOverlayScrollbarHidingCache", "_autoUpdateCache", "_sizeAutoCapableCache", "_contentElementScrollSizeChangeDetectedCache", "_hostElementSizeChangeDetectedCache", "_scrollbarsVisibilityCache", "_scrollbarsAutoHideCache", "_scrollbarsClickScrollingCache", "_scrollbarsDragScrollingCache", "_resizeCache", "_normalizeRTLCache", "_classNameCache", "_oldClassName", "_textareaAutoWrappingCache", "_textareaInfoCache", "_textareaSizeCache", "_textareaDynHeightCache", "_textareaDynWidthCache", "_bodyMinSizeCache", "_updateAutoCache", "_mutationObserverHost", "_mutationObserverContent", "_mutationObserverHostCallback", "_mutationObserverContentCallback", "_mutationObserversConnected", "_mutationObserverAttrsTextarea", "_mutationObserverAttrsHost", "_destroyEvents", "_textareaHasFocus", "_scrollbarsAutoHideTimeoutId", "_scrollbarsAutoHideMoveTimeoutId", "_scrollbarsAutoHideDelay", "_scrollbarsAutoHideNever", "_scrollbarsAutoHideScroll", "_scrollbarsAutoHideMove", "_scrollbarsAutoHideLeave", "_scrollbarsHandleHovered", "_scrollbarsHandlesDefineScrollPos", "_resizeNone", "_resizeBoth", "_resizeHorizontal", "_resizeVertical", "setupResponsiveEventListener", "element", "eventNames", "listener", "passiveOrOptions", "collected", "method", "onOff", "events", "passiveOrOptionsIsObj", "passive", "_passive", "capture", "_capture", "nativeParam", "addDestroyEventListener", "setupResizeObserver", "targetElement", "onElementResizedCallback", "resizeObserver", "strAnimationStartEvent", "strChildNodes", "constScroll", "generateDiv", "observer", "observe", "dir", "style", "observerElement", "shrinkElement", "expandElement", "expandElementChild", "widthCache", "heightCache", "isDirty", "rAFId", "currWidth", "currHeight", "factor", "reset", "onResized", "expandChildCSS", "observerElementCSS", "setTopRightBottomLeft", "isIE", "findFirst", "onload", "wnd", "contentDocument", "defaultView", "directionChanged", "scrollLeftValue", "resizeObserverObj", "disconnect", "createMutationObservers", "mutationObserverContentLag", "mutationObserver", "contentLastUpdate", "mutationTarget", "mutationAttrName", "mutationIsClass", "oldMutationVal", "newClassVal", "hostClassNameRegex", "contentTimeout", "sizeAuto", "action", "mutations", "doUpdate", "doUpdateForce", "mutation", "mutatedAttrs", "attributeName", "oldValue", "createHostClassNameRegExp", "filter", "hostClassNamesChanged", "updateViewportAttrsFromTarget", "isUnknownMutation", "textareaUpdate", "connectMutationObservers", "attributes", "attributeOldValue", "attributeFilter", "subtree", "childList", "characterData", "disconnectMutationObservers", "hostOnResized", "changed", "hostSize", "checkCache", "_hostSizeChanged", "hostOnMouseEnter", "refreshScrollbarsAutoHide", "hostOnMouseLeave", "hostOnMouseMove", "documentOnSelectStart", "updateOnLoadCallback", "elm", "eachUpdateOnLoad", "updateOnLoadSelector", "_contentSizeChanged", "setupHostMouseTouchEvents", "destroy", "bodyMinSizeChanged", "bodyMinSize", "parseToZeroOrNumber", "oldClassNames", "newClassNames", "currClasses", "oldClasses", "diff", "getArrayDifferences", "idx", "regex", "mutationType", "strClosest", "updateAutoContentSizeChanged", "contentMeasureElement", "getContentMeasureElement", "textareaValueLength", "setCSS", "float", "bodyMinSizeC", "contentElementScrollSize", "meaningfulAttrsChanged", "curr", "cache", "changedAttrs", "checks", "_elem", "_attrs", "check", "isSizeAffectingCSSProperty", "propertyName", "flexBasis", "affectingPropsX", "affectingPropsXContentBox", "affectingPropsY", "affectingPropsYContentBox", "_strS", "_strVS", "checkX", "checkY", "sizeIsAffected", "checkPropertyName", "attrs", "targetAttr", "wrapAttrOff", "minWidth", "minHeight", "doMeasure", "origWidth", "width", "origHeight", "height", "_originalWidth", "_originalHeight", "_dynamicWidth", "_dynamicHeight", "updateHints", "_force", "hostSizeChanged", "contentSizeChanged", "force", "changedOptions", "_changedOptions", "swallow", "displayIsHidden", "extendDeep", "checkCacheAutoForce", "currScroll", "currentPreparedOptionsScrollbars", "currentPreparedOptionsTextarea", "scrollbarsVisibility", "scrollbarsVisibilityChanged", "scrollbarsAutoHide", "scrollbarsAutoHideChanged", "scrollbarsClickScrolling", "scrollbarsClickScrollingChanged", "scrollbarsDragScrolling", "scrollbarsDragScrollingChanged", "classNameChanged", "resizeChanged", "paddingAbsoluteChanged", "clipAlwaysChanged", "sizeAutoCapableChanged", "ignoreOverlayScrollbarHiding", "ignoreOverlayScrollbarHidingChanged", "autoUpdateChanged", "overflowBehaviorChanged", "textareaDynWidth", "textareaDynWidthChanged", "textareaDynHeight", "textareaDynHeightChanged", "oldSize", "newSize", "textareaAutoWrapping", "textareaAutoWrappingChanged", "cssDirection", "cssDirectionChanged", "boxSizing", "boxSizingChanged", "padding", "getTopRightBottomLeftHost", "sizeAutoObserverElementBCRect", "isRTLLeft", "isRTLRight", "widthAutoResizeDetection", "widthAutoObserverDetection", "right", "tmpCurrHostWidth", "tmpCurrContentGlueWidth", "tmpNewHostWidth", "widthAuto", "widthAutoChanged", "wasWidthAuto", "heightAuto", "bottom", "heightAutoChanged", "wasHeightAuto", "updateBorderX", "updateBorderY", "border", "margin", "contentElementCSS", "contentGlueElementCSS", "getHostSize", "getViewportSize", "paddingAbsoluteX", "r", "paddingAbsoluteY", "paddingElementCSS", "textareaCSS", "paddingValues", "textareaSize", "textareaSizeChanged", "textareaDynOrigSize", "strOverflowX", "strOverflowY", "strVisible", "viewportElementResetCSS", "resetXTmp", "ys", "resetBottomTmp", "xs", "contentSize", "hostAbsoluteRectSize", "contentGlueSize", "textareaCoverCSS", "setContentGlueElementCSSfunction", "horizontal", "scrollbarVars", "getScrollbarVars", "wh", "_w_h", "strWH", "_width_height", "autoSize", "borderSize", "paddingSize", "marginSize", "viewportSize", "contentScrollSize", "hideOverflowForceTextarea", "previousOverflowAmount", "overflowBehaviorIsVS", "overflowBehaviorIsVH", "overflowBehaviorIsS", "overflowAmount", "hasOverflow", "hideOverflow", "canScroll", "viewportRect", "setOverflowVariables", "scrollbarVarsInverted", "xyI", "_x_y", "xy", "widthHeight", "scrollMax", "_Left_Top", "fractionalOverflowAmount", "checkFractionalOverflowAmount", "borderDesign", "contentArrangeElementCSS", "arrangeContent", "arrangeChanged", "setContentElementCSS", "strDirection", "invertedAutoSize", "addRemoveClass", "viewportElementCSS", "setViewportCSS", "XY", "_X_Y", "elementStyle", "webkitTransform", "floatTmp", "posLeftWithoutFloat", "posLeftWithFloat", "textareaInfo", "getTextareaInfo", "textareaRowsChanged", "_rows", "cursorRow", "_cursorRow", "cursorCol", "_cursorColumn", "widestRow", "_widestRow", "lastRow", "lastCol", "_columns", "cursorPos", "_cursorPosition", "cursorMax", "_cursorMax", "cursorIsLastPosition", "textareaScrollAmount", "scrollbarsVisibilityVisible", "scrollbarsVisibilityHidden", "scrollbarsVisibilityAuto", "refreshScrollbarsVisibility", "showX", "showY", "refreshScrollbarAppearance", "refreshScrollbarHandleLength", "refreshScrollbarHandleOffset", "refreshScrollbarsInteractive", "dispatchCallback", "isRTL", "xScrollable", "yScrollable", "clipped", "updateElementsOnLoad", "forced", "setOptions", "newOptions", "validatedOpts", "setupStructureDOM", "strParent", "classNameResizeObserverHost", "classNameTextareaElementFull", "textareaClass", "adoptAttrs", "adoptAttrsMap", "applyAdoptedAttrs", "applyAdoptedAttrsElm", "hostElementClassNames", "hostElementCSS", "selectOrGenerateDivByClass", "setupStructureEvents", "textareaKeyDownRestrictedKeyCodes", "textareaKeyDownKeyCodesList", "textareaUpdateIntervalID", "scrollStopTimeoutId", "scrollStopDelay", "strFocus", "updateTextarea", "doClearInterval", "clearInterval", "textareaOnScroll", "textareaOnDrop", "textareaOnFocus", "textareaOnFocusout", "textareaOnKeyDown", "keyCode", "setInterval", "textareaOnKeyUp", "contentOnTransitionEnd", "viewportOnScroll", "nativeOverlayScrollbarsAreActive", "setupScrollbarsDOM", "selectOrGenerateScrollbarDOM", "isHorizontal", "scrollbarClassName", "scrollbar", "track", "handle", "_scrollbar", "_track", "_handle", "resetScrollbarDOM", "horizontalElements", "verticalElements", "setupScrollbarEvents", "scrollbarVarsInfo", "_info", "insideIFrame", "scroll", "strActive", "strSnapHandle", "strClickEvent", "scrollDurationFactor", "increaseDecreaseScrollAmountKeyCodes", "trackTimeout", "mouseDownScroll", "mouseDownOffset", "mouseDownInvertedScale", "getPointerPosition", "getPreparedScrollbarsOption", "increaseTrackScrollAmount", "decreaseTrackScrollAmount", "stopClickEventPropagation", "documentKeyDown", "documentKeyUp", "onMouseTouchDownContinue", "isTouchEvent", "documentDragMove", "trackLength", "_trackLength", "handleLength", "_handleLength", "scrollRange", "_maxScroll", "scrollRaw", "scrollDeltaPercent", "scrollDelta", "isFinite", "documentMouseTouchUp", "scrollStop", "mouseInsideHost", "clientX", "clientY", "onHandleMouseTouchDown", "onHandleMouseTouchDownAction", "isNaN", "getHostElementInvertedScale", "onTrackMouseTouchDown", "handleToViewportRatio", "scrollDistance", "scrollBaseDuration", "scrollFirstIterationDelay", "trackOffset", "_left_top", "ctrlKey", "instantScroll", "shiftKey", "instantScrollTransition", "isFirstIteration", "decreaseScroll", "finishedCondition", "scrollActionFinsished", "transition", "scrollActionInstantFinished", "scrollAction", "mouseOffset", "handleOffset", "_handleOffset", "_currentScroll", "scrollDuration", "timeoutDelay", "instantScrollPosition", "rtlIsNormal", "decreaseScrollCondition", "scrollObj", "animationObj", "onTrackMouseTouchEnter", "onTrackMouseTouchLeave", "onScrollbarMouseTouchDown", "shallBeVisible", "scrollbarHiddenClassName", "scrollbarElement", "delayfree", "anyActive", "handleCSS", "digit", "handleRatio", "floor", "_Width_Height", "_handleLengthRatio", "scrollOrTransition", "transitionDuration", "isRTLisHorizontal", "strTranslateBrace", "strTransform", "strTransition", "nativeScroll", "currentScroll", "handleTrackDiff", "transformOffset", "translateValue", "maxScroll", "getScrollRatio", "getHandleOffset", "scrollRatio", "unsnappedScrollRatio", "snappedHandleOffset", "_currentScrollRatio", "getCSSTransitionString", "_snappedHandleOffset", "isTrack", "element1", "element2", "_l_t", "setupScrollbarCornerDOM", "setupScrollbarCornerEvents", "mouseDownPosition", "mouseDownSize", "reconnectMutationObserver", "pageOffset", "getCoordinates", "eventIsTrusted", "releaseCapture", "screenX", "screenY", "setCapture", "args", "dependent", "extensionOnName", "ext", "substr", "targetCSSObject", "prefix", "zeroX", "zeroY", "transitionStr", "assembledValue", "regExpString", "regExpMain", "RegExp", "regExpValidate", "properties", "strResult", "valueArray", "splitCssStyleByComma", "$1", "withCurrClassNameOption", "withOldClassNameOption", "appendix", "appendClasses", "condition", "strOwnerDocument", "strHTMLElement", "parentWindow", "nodeName", "a1", "a2", "k", "toFloat", "num", "textareaCursorPosition", "selectionStart", "textareaValue", "textareaLength", "textareaRowSplit", "textareaLastRow", "textareaCurrentCursorRowSplit", "textareaLastCol", "rowCols", "classesOrAttrs", "content", "selectParentOrOnlyChildren", "onlyChildren", "selectParent", "getObjectPropVal", "path", "splits", "setObjectPropVal", "splitsLength", "extendObj", "extendObjRoot", "current", "doAdd", "sleep", "attrsChanged", "contentSizeC", "isString", "doUpdateAuto", "mutHost", "mutContent", "takeRecords", "option", "changedOps", "extName", "removeExt", "pop", "coordinates", "infoX", "infoY", "normalizeInvert", "normalizeNegate", "scrollX", "scrollXRatio", "maxScrollX", "ratio", "handleLengthRatio", "isRTLNormalized", "coordinatesXAxisProps", "coordinatesYAxisProps", "coordinatesOperators", "durationIsObject", "completeCallback", "finalScroll", "doScrollLeft", "doScrollTop", "animationOptions", "strEnd", "strBegin", "strCenter", "strNearest", "strAlways", "strNever", "strIfNeeded", "strLength", "settingsAxis", "settingsScroll", "settingsBlock", "settingsMargin", "finalElement", "elementObjSettingsAxisValues", "elementObjSettingsBlockValues", "elementObjSettingsScrollValues", "coordinatesIsElementObj", "possibleElement", "possibleElementIsJQuery", "possibleElementIsHTMLElement", "updateScrollbarInfos", "proxyCompleteCallback", "checkSettingsStringValue", "currValue", "allowedValues", "getRawScroll", "isX", "coordinateProps", "getFinalScroll", "rawScroll", "operator", "amount", "scrollInfo", "mult", "isRTLisX", "normalizeShortcuts", "strReplace", "evalFunc", "eval", "possibleOperator", "toFixed", "normalizeIsRTLisX", "operatorCurrScroll", "invert", "negate", "getPerAxisValue", "valueInternalType", "defaultValue", "resultDefault", "valueType", "valueArrLength", "valueArrItem", "generateMargin", "marginTopRightBottomLeftArray", "currValueType", "valueDirections", "axis", "block", "marginDefault", "marginType", "marginLength", "viewportScroll", "viewportOffset", "elementOffset", "doNotScroll", "elementScrollCoordinates", "measuringElm", "rawElementSize", "elementSize", "finalizeBlock", "vars", "lt", "blockIsEnd", "blockIsCenter", "blockIsNearest", "scrollNever", "scrollIfNeeded", "vpSize", "vpOffset", "elSize", "elOffset", "divide", "elementCenterOffset", "viewportCenterOffset", "isInView", "param1", "param2", "param3", "getElements", "elementName", "host", "viewport", "scrollbarHorizontal", "scrollbarVertical", "scrollbarCorner", "getState", "stateProperty", "prepare", "extended", "changePropertyName", "destroyed", "sleeping", "documentMixed", "privateMethods", "addExt", "extensionOptions", "registeredExtensionObj", "extension", "instanceAdded", "instanceContract", "contractResult", "contractFulfilled", "extensionFactory", "contract", "added", "instanceRemoved", "removed", "construct", "initBodyScroll", "_bodyMouseTouchDownListener", "bodyMouseTouchDownListener", "activeElement", "focus", "valid", "pluginTargetElements", "optsIsPlainObj", "newDefaultOptions", "currDefaultOptions", "osInstance", "extensionName", "extNameTypeString", "fn", "overlayScrollbars", "_elements", "OverlayScrollbars", "OverlayScrollbarsComponent", "_a", "_a$options", "rest", "__rest", "osTargetRef", "useRef", "useEffect", "mergeHostClassNames", "React__default", "assign", "ref", "_osInstance$getElemen", "osClassNames"]
}
