{
  "version": 3,
  "sources": ["../../../../node_modules/object-assign/index.js"],
  "sourcesContent": ["/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n"],
  "mappings": ";;;;;;AAAA;;;;AAQA,QAAIA,wBAAwBC,OAAOD;AACnC,QAAIE,iBAAiBD,OAAOE,UAAUD;AACtC,QAAIE,mBAAmBH,OAAOE,UAAUE;AAExC,aAASC,SAASC,KAAK;AACtB,UAAIA,QAAQ,QAAQA,QAAQC,QAAW;AACtC,cAAM,IAAIC,UAAU,uDAAd;MACN;AAED,aAAOR,OAAOM,GAAD;IACb;AAED,aAASG,kBAAkB;AAC1B,UAAI;AACH,YAAI,CAACT,OAAOU,QAAQ;AACnB,iBAAO;QACP;AAKD,YAAIC,QAAQ,IAAIC,OAAO,KAAX;AACZD,cAAM,KAAK;AACX,YAAIX,OAAOa,oBAAoBF,KAA3B,EAAkC,OAAO,KAAK;AACjD,iBAAO;QACP;AAGD,YAAIG,QAAQ,CAAA;AACZ,iBAASC,IAAI,GAAGA,IAAI,IAAIA,KAAK;AAC5BD,gBAAM,MAAMF,OAAOI,aAAaD,CAApB,KAA0BA;QACtC;AACD,YAAIE,SAASjB,OAAOa,oBAAoBC,KAA3B,EAAkCI,IAAI,SAAUC,GAAG;AAC/D,iBAAOL,MAAMK;QACb,CAFY;AAGb,YAAIF,OAAOG,KAAK,EAAZ,MAAoB,cAAc;AACrC,iBAAO;QACP;AAGD,YAAIC,QAAQ,CAAA;AACZ,+BAAuBC,MAAM,EAA7B,EAAiCC,QAAQ,SAAUC,QAAQ;AAC1DH,gBAAMG,UAAUA;QAChB,CAFD;AAGA,YAAIxB,OAAOyB,KAAKzB,OAAOU,OAAO,CAAA,GAAIW,KAAlB,CAAZ,EAAsCD,KAAK,EAA3C,MACF,wBAAwB;AACzB,iBAAO;QACP;AAED,eAAO;MACP,SAAQM,KAAP;AAED,eAAO;MACP;IACD;AAEDC,WAAOC,UAAUnB,gBAAe,IAAKT,OAAOU,SAAS,SAAUmB,QAAQC,QAAQ;AAC9E,UAAIC;AACJ,UAAIC,KAAK3B,SAASwB,MAAD;AACjB,UAAII;AAEJ,eAASC,IAAI,GAAGA,IAAIC,UAAUC,QAAQF,KAAK;AAC1CH,eAAO/B,OAAOmC,UAAUD,EAAX;AAEb,iBAASG,OAAON,MAAM;AACrB,cAAI9B,eAAeqC,KAAKP,MAAMM,GAA1B,GAAgC;AACnCL,eAAGK,OAAON,KAAKM;UACf;QACD;AAED,YAAItC,uBAAuB;AAC1BkC,oBAAUlC,sBAAsBgC,IAAD;AAC/B,mBAAShB,IAAI,GAAGA,IAAIkB,QAAQG,QAAQrB,KAAK;AACxC,gBAAIZ,iBAAiBmC,KAAKP,MAAME,QAAQlB,EAApC,GAAyC;AAC5CiB,iBAAGC,QAAQlB,MAAMgB,KAAKE,QAAQlB;YAC9B;UACD;QACD;MACD;AAED,aAAOiB;IACP;;;",
  "names": ["getOwnPropertySymbols", "Object", "hasOwnProperty", "prototype", "propIsEnumerable", "propertyIsEnumerable", "toObject", "val", "undefined", "TypeError", "shouldUseNative", "assign", "test1", "String", "getOwnPropertyNames", "test2", "i", "fromCharCode", "order2", "map", "n", "join", "test3", "split", "forEach", "letter", "keys", "err", "module", "exports", "target", "source", "from", "to", "symbols", "s", "arguments", "length", "key", "call"]
}
