{
  "version": 3,
  "sources": ["../../../../node_modules/core-js/internals/string-trim-forced.js", "../../../../node_modules/core-js/modules/es.string.trim.js"],
  "sourcesContent": ["var PROPER_FUNCTION_NAME = require('../internals/function-name').PROPER;\nvar fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]()\n      || non[METHOD_NAME]() !== non\n      || (PROPER_FUNCTION_NAME && whitespaces[METHOD_NAME].name !== METHOD_NAME);\n  });\n};\n", "'use strict';\nvar $ = require('../internals/export');\nvar $trim = require('../internals/string-trim').trim;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\n// `String.prototype.trim` method\n// https://tc39.es/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAAA;;;QAAIA,uBAAuBC,wBAAsCC;AACjE,QAAIC,QAAQF;AACZ,QAAIG,cAAcH;AAElB,QAAII,MAAM;AAIVC,WAAOC,UAAU,SAAUC,aAAa;AACtC,aAAOL,MAAM,WAAY;AACvB,eAAO,CAAC,CAACC,YAAYI,aAAZ,KACJH,IAAIG,aAAJ,MAAuBH,OACtBL,wBAAwBI,YAAYI,aAAaC,SAASD;MACjE,CAJW;IAKb;;;;;ACdD,IACIE,GACAC,OACAC;AAHJ;;;;AACA,IAAIF,IAAIG;AACR,IAAIF,QAAQE,sBAAoCC;AAChD,IAAIF,yBAAyBC;AAI7BH,MAAE;MAAEK,QAAQ;MAAUC,OAAO;MAAMC,QAAQL,uBAAuB,MAAD;IAA/D,GAA2E;MAC3EE,MAAM,SAASA,OAAO;AACpB,eAAOH,MAAM,IAAD;MACb;IAH0E,CAA5E;;;",
  "names": ["PROPER_FUNCTION_NAME", "require", "PROPER", "fails", "whitespaces", "non", "module", "exports", "METHOD_NAME", "name", "$", "$trim", "forcedStringTrimMethod", "require", "trim", "target", "proto", "forced"]
}
