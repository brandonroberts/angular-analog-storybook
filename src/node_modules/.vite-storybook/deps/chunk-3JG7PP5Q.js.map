{
  "version": 3,
  "sources": ["../../../../node_modules/qs/lib/formats.js", "../../../../node_modules/qs/lib/utils.js", "../../../../node_modules/qs/lib/stringify.js", "../../../../node_modules/qs/lib/parse.js", "../../../../node_modules/qs/lib/index.js"],
  "sourcesContent": ["'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n", "'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        /* eslint operator-linebreak: [2, \"before\"] */\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n", "'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar split = String.prototype.split;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            if (generateArrayPrefix === 'comma' && encodeValuesOnly) {\n                var valuesArray = split.call(String(obj), ',');\n                var valuesJoined = '';\n                for (var i = 0; i < valuesArray.length; ++i) {\n                    valuesJoined += (i === 0 ? '' : ',') + formatter(encoder(valuesArray[i], defaults.encoder, charset, 'value', format));\n                }\n                return [formatter(keyValue) + (commaRoundTrip && isArray(obj) && valuesArray.length === 1 ? '[]' : '') + '=' + valuesJoined];\n            }\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + '[]' : prefix;\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            strictNullHandling,\n            skipNulls,\n            encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n    if (opts && 'commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    var commaRoundTrip = generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('\u2713')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n", "'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the \u2713 character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the \u2713 character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('\u2713')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (cleanRoot !== '__proto__') {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n", "'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n"],
  "mappings": "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",
  "names": ["replace", "String", "prototype", "percentTwenties", "Format", "RFC1738", "RFC3986", "module", "exports", "formatters", "value", "call", "formats", "require", "has", "Object", "prototype", "hasOwnProperty", "isArray", "Array", "hexTable", "array", "i", "push", "toString", "toUpperCase", "compactQueue", "queue", "length", "item", "pop", "obj", "prop", "compacted", "j", "arrayToObject", "source", "options", "plainObjects", "create", "merge", "target", "allowPrototypes", "call", "concat", "mergeTarget", "forEach", "targetItem", "keys", "reduce", "acc", "key", "value", "assign", "assignSingleSource", "decode", "str", "decoder", "charset", "strWithoutPlus", "replace", "unescape", "decodeURIComponent", "e", "encode", "defaultEncoder", "kind", "format", "string", "Symbol", "String", "escape", "$0", "parseInt", "slice", "out", "c", "charCodeAt", "RFC1738", "charAt", "compact", "o", "refs", "val", "indexOf", "isRegExp", "isBuffer", "constructor", "combine", "a", "b", "maybeMap", "fn", "mapped", "module", "exports", "getSideChannel", "require", "utils", "formats", "has", "Object", "prototype", "hasOwnProperty", "arrayPrefixGenerators", "brackets", "prefix", "comma", "indices", "key", "repeat", "isArray", "Array", "split", "String", "push", "pushToArray", "arr", "valueOrArray", "apply", "toISO", "Date", "toISOString", "defaultFormat", "defaults", "addQueryPrefix", "allowDots", "charset", "charsetSentinel", "delimiter", "encode", "encoder", "encodeValuesOnly", "format", "formatter", "formatters", "serializeDate", "date", "call", "skipNulls", "strictNullHandling", "isNonNullishPrimitive", "v", "sentinel", "stringify", "object", "generateArrayPrefix", "commaRoundTrip", "filter", "sort", "sideChannel", "obj", "tmpSc", "step", "findFlag", "get", "pos", "RangeError", "maybeMap", "value", "isBuffer", "keyValue", "valuesArray", "valuesJoined", "i", "length", "values", "objKeys", "join", "keys", "adjustedPrefix", "j", "keyPrefix", "set", "valueSideChannel", "normalizeStringifyOptions", "opts", "TypeError", "module", "exports", "options", "arrayFormat", "joined", "utils", "require", "has", "Object", "prototype", "hasOwnProperty", "isArray", "Array", "defaults", "allowDots", "allowPrototypes", "allowSparse", "arrayLimit", "charset", "charsetSentinel", "comma", "decoder", "decode", "delimiter", "depth", "ignoreQueryPrefix", "interpretNumericEntities", "parameterLimit", "parseArrays", "plainObjects", "strictNullHandling", "str", "replace", "$0", "numberStr", "String", "fromCharCode", "parseInt", "parseArrayValue", "val", "options", "indexOf", "split", "isoSentinel", "parseValues", "parseQueryStringValues", "obj", "cleanStr", "limit", "Infinity", "undefined", "parts", "skipIndex", "i", "length", "part", "bracketEqualsPos", "pos", "key", "slice", "maybeMap", "encodedVal", "call", "combine", "parseObject", "chain", "valuesParsed", "leaf", "root", "concat", "create", "cleanRoot", "charAt", "index", "isNaN", "parseKeys", "parseQueryStringKeys", "givenKey", "brackets", "child", "segment", "exec", "parent", "keys", "push", "normalizeParseOptions", "opts", "TypeError", "isRegExp", "module", "exports", "tempObj", "newObj", "merge", "compact", "stringify", "require", "parse", "formats", "module", "exports"]
}
