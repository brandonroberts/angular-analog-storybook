{
  "version": 3,
  "sources": ["../../../../node_modules/core-js/modules/es.string.match.js"],
  "sourcesContent": ["'use strict';\nvar call = require('../internals/function-call');\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar getMethod = require('../internals/get-method');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@match logic\nfixRegExpWellKnownSymbolLogic('match', function (MATCH, nativeMatch, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.es/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = requireObjectCoercible(this);\n      var matcher = regexp == undefined ? undefined : getMethod(regexp, MATCH);\n      return matcher ? call(matcher, regexp, O) : new RegExp(regexp)[MATCH](toString(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@match\n    function (string) {\n      var rx = anObject(this);\n      var S = toString(string);\n      var res = maybeCallNative(nativeMatch, rx, S);\n\n      if (res.done) return res.value;\n\n      if (!rx.global) return regExpExec(rx, S);\n\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = toString(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA,IACIA,MACAC,+BACAC,UACAC,UACAC,UACAC,wBACAC,WACAC,oBACAC;AATJ;;;;AACA,IAAIR,OAAOS;AACX,IAAIR,gCAAgCQ;AACpC,IAAIP,WAAWO;AACf,IAAIN,WAAWM;AACf,IAAIL,WAAWK;AACf,IAAIJ,yBAAyBI;AAC7B,IAAIH,YAAYG;AAChB,IAAIF,qBAAqBE;AACzB,IAAID,aAAaC;AAGjBR,kCAA8B,SAAS,SAAUS,OAAOC,aAAaC,iBAAiB;AACpF,aAAO;QAGL,SAASC,MAAMC,QAAQ;AACrB,cAAIC,IAAIV,uBAAuB,IAAD;AAC9B,cAAIW,UAAUF,UAAUG,SAAYA,SAAYX,UAAUQ,QAAQJ,KAAT;AACzD,iBAAOM,UAAUhB,KAAKgB,SAASF,QAAQC,CAAlB,IAAuB,IAAIG,OAAOJ,MAAX,EAAmBJ,OAAON,SAASW,CAAD,CAAlC;QAC7C;QAGD,SAAUI,QAAQ;AAChB,cAAIC,KAAKlB,SAAS,IAAD;AACjB,cAAImB,IAAIjB,SAASe,MAAD;AAChB,cAAIG,MAAMV,gBAAgBD,aAAaS,IAAIC,CAAlB;AAEzB,cAAIC,IAAIC;AAAM,mBAAOD,IAAIE;AAEzB,cAAI,CAACJ,GAAGK;AAAQ,mBAAOjB,WAAWY,IAAIC,CAAL;AAEjC,cAAIK,cAAcN,GAAGO;AACrBP,aAAGQ,YAAY;AACf,cAAIC,IAAI,CAAA;AACR,cAAIC,IAAI;AACR,cAAIC;AACJ,kBAAQA,SAASvB,WAAWY,IAAIC,CAAL,OAAa,MAAM;AAC5C,gBAAIW,WAAW5B,SAAS2B,OAAO,EAAR;AACvBF,cAAEC,KAAKE;AACP,gBAAIA,aAAa;AAAIZ,iBAAGQ,YAAYrB,mBAAmBc,GAAGlB,SAASiB,GAAGQ,SAAJ,GAAgBF,WAA5B;AACtDI;UACD;AACD,iBAAOA,MAAM,IAAI,OAAOD;QACzB;MA/BI;IAiCR,CAlC4B;;;",
  "names": ["call", "fixRegExpWellKnownSymbolLogic", "anObject", "toLength", "toString", "requireObjectCoercible", "getMethod", "advanceStringIndex", "regExpExec", "require", "MATCH", "nativeMatch", "maybeCallNative", "match", "regexp", "O", "matcher", "undefined", "RegExp", "string", "rx", "S", "res", "done", "value", "global", "fullUnicode", "unicode", "lastIndex", "A", "n", "result", "matchStr"]
}
