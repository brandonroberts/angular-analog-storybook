{
  "version": 3,
  "sources": ["../../../../node_modules/has-tostringtag/shams.js", "../../../../node_modules/is-regex/index.js", "../../../../node_modules/is-symbol/index.js"],
  "sourcesContent": ["'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n", "'use strict';\n\nvar callBound = require('call-bind/callBound');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar has;\nvar $exec;\nvar isRegexMarker;\nvar badStringifier;\n\nif (hasToStringTag) {\n\thas = callBound('Object.prototype.hasOwnProperty');\n\t$exec = callBound('RegExp.prototype.exec');\n\tisRegexMarker = {};\n\n\tvar throwRegexMarker = function () {\n\t\tthrow isRegexMarker;\n\t};\n\tbadStringifier = {\n\t\ttoString: throwRegexMarker,\n\t\tvalueOf: throwRegexMarker\n\t};\n\n\tif (typeof Symbol.toPrimitive === 'symbol') {\n\t\tbadStringifier[Symbol.toPrimitive] = throwRegexMarker;\n\t}\n}\n\nvar $toString = callBound('Object.prototype.toString');\nvar gOPD = Object.getOwnPropertyDescriptor;\nvar regexClass = '[object RegExp]';\n\nmodule.exports = hasToStringTag\n\t// eslint-disable-next-line consistent-return\n\t? function isRegex(value) {\n\t\tif (!value || typeof value !== 'object') {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar descriptor = gOPD(value, 'lastIndex');\n\t\tvar hasLastIndexDataProperty = descriptor && has(descriptor, 'value');\n\t\tif (!hasLastIndexDataProperty) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\t$exec(value, badStringifier);\n\t\t} catch (e) {\n\t\t\treturn e === isRegexMarker;\n\t\t}\n\t}\n\t: function isRegex(value) {\n\t\t// In older browsers, typeof regex incorrectly returns 'function'\n\t\tif (!value || (typeof value !== 'object' && typeof value !== 'function')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $toString(value) === regexClass;\n\t};\n", "'use strict';\n\nvar toStr = Object.prototype.toString;\nvar hasSymbols = require('has-symbols')();\n\nif (hasSymbols) {\n\tvar symToStr = Symbol.prototype.toString;\n\tvar symStringRegex = /^Symbol\\(.*\\)$/;\n\tvar isSymbolObject = function isRealSymbolObject(value) {\n\t\tif (typeof value.valueOf() !== 'symbol') {\n\t\t\treturn false;\n\t\t}\n\t\treturn symStringRegex.test(symToStr.call(value));\n\t};\n\n\tmodule.exports = function isSymbol(value) {\n\t\tif (typeof value === 'symbol') {\n\t\t\treturn true;\n\t\t}\n\t\tif (toStr.call(value) !== '[object Symbol]') {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\treturn isSymbolObject(value);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n} else {\n\n\tmodule.exports = function isSymbol(value) {\n\t\t// this environment does not support Symbols.\n\t\treturn false && value;\n\t};\n}\n"],
  "mappings": ";;;;;;;;;;;AAAA,IAAAA,iBAAA;;;;AAEA,QAAIC,aAAaC;AAEjBC,WAAOC,UAAU,SAASC,sBAAsB;AAC/C,aAAOJ,WAAU,KAAM,CAAC,CAACK,OAAOC;IAChC;;;;;ACND;;;;AAEA,QAAIC,YAAYC;AAChB,QAAIC,iBAAiBD,iBAAA;AACrB,QAAIE;AACJ,QAAIC;AACJ,QAAIC;AACJ,QAAIC;AAEJ,QAAIJ,gBAAgB;AACnBC,YAAMH,UAAU,iCAAD;AACfI,cAAQJ,UAAU,uBAAD;AACjBK,sBAAgB,CAAA;AAEZE,yBAAmB,WAAY;AAClC,cAAMF;MACN;AACDC,uBAAiB;QAChBE,UAAUD;QACVE,SAASF;MAFO;AAKjB,UAAI,OAAOG,OAAOC,gBAAgB,UAAU;AAC3CL,uBAAeI,OAAOC,eAAeJ;MACrC;IACD;AAXIA;AAaL,QAAIK,YAAYZ,UAAU,2BAAD;AACzB,QAAIa,OAAOC,OAAOC;AAClB,QAAIC,aAAa;AAEjBC,WAAOC,UAAUhB,iBAEd,SAASiB,QAAQC,OAAO;AACzB,UAAI,CAACA,SAAS,OAAOA,UAAU,UAAU;AACxC,eAAO;MACP;AAED,UAAIC,aAAaR,KAAKO,OAAO,WAAR;AACrB,UAAIE,2BAA2BD,cAAclB,IAAIkB,YAAY,OAAb;AAChD,UAAI,CAACC,0BAA0B;AAC9B,eAAO;MACP;AAED,UAAI;AACHlB,cAAMgB,OAAOd,cAAR;MACL,SAAQiB,GAAP;AACD,eAAOA,MAAMlB;MACb;IACD,IACC,SAASc,QAAQC,OAAO;AAEzB,UAAI,CAACA,SAAU,OAAOA,UAAU,YAAY,OAAOA,UAAU,YAAa;AACzE,eAAO;MACP;AAED,aAAOR,UAAUQ,KAAD,MAAYJ;IAC5B;;;;;ACzDF;;;;AAEA,QAAIQ,QAAQC,OAAOC,UAAUC;AAC7B,QAAIC,aAAaC,sBAAA;AAEjB,QAAID,YAAY;AACXE,iBAAWC,OAAOL,UAAUC;AAC5BK,uBAAiB;AACjBC,uBAAiB,SAASC,mBAAmBC,OAAO;AACvD,YAAI,OAAOA,MAAMC,QAAN,MAAoB,UAAU;AACxC,iBAAO;QACP;AACD,eAAOJ,eAAeK,KAAKP,SAASQ,KAAKH,KAAd,CAApB;MACP;AAEDI,aAAOC,UAAU,SAASC,SAASN,OAAO;AACzC,YAAI,OAAOA,UAAU,UAAU;AAC9B,iBAAO;QACP;AACD,YAAIX,MAAMc,KAAKH,KAAX,MAAsB,mBAAmB;AAC5C,iBAAO;QACP;AACD,YAAI;AACH,iBAAOF,eAAeE,KAAD;QACrB,SAAQO,GAAP;AACD,iBAAO;QACP;MACD;IACD,OAAM;AAENH,aAAOC,UAAU,SAASC,SAASN,OAAO;AAEzC,eAAO;MACP;IACD;AA5BIL;AACAE;AACAC;;;",
  "names": ["require_shams", "hasSymbols", "require", "module", "exports", "hasToStringTagShams", "Symbol", "toStringTag", "callBound", "require", "hasToStringTag", "has", "$exec", "isRegexMarker", "badStringifier", "throwRegexMarker", "toString", "valueOf", "Symbol", "toPrimitive", "$toString", "gOPD", "Object", "getOwnPropertyDescriptor", "regexClass", "module", "exports", "isRegex", "value", "descriptor", "hasLastIndexDataProperty", "e", "toStr", "Object", "prototype", "toString", "hasSymbols", "require", "symToStr", "Symbol", "symStringRegex", "isSymbolObject", "isRealSymbolObject", "value", "valueOf", "test", "call", "module", "exports", "isSymbol", "e"]
}
