{
  "version": 3,
  "sources": ["dep:unfetch", "../../../../node_modules/unfetch/dist/unfetch.module.js"],
  "sourcesContent": ["import d from \"../node_modules/unfetch/dist/unfetch.module.js\";export default d;", "export default function(e,n){return n=n||{},new Promise(function(t,r){var s=new XMLHttpRequest,o=[],u=[],i={},a=function(){return{ok:2==(s.status/100|0),statusText:s.statusText,status:s.status,url:s.responseURL,text:function(){return Promise.resolve(s.responseText)},json:function(){return Promise.resolve(s.responseText).then(JSON.parse)},blob:function(){return Promise.resolve(new Blob([s.response]))},clone:a,headers:{keys:function(){return o},entries:function(){return u},get:function(e){return i[e.toLowerCase()]},has:function(e){return e.toLowerCase()in i}}}};for(var l in s.open(n.method||\"get\",e,!0),s.onload=function(){s.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm,function(e,n,t){o.push(n=n.toLowerCase()),u.push([n,t]),i[n]=i[n]?i[n]+\",\"+t:t}),t(a())},s.onerror=r,s.withCredentials=\"include\"==n.credentials,n.headers)s.setRequestHeader(l,n.headers[l]);s.send(n.body||null)})}\n//# sourceMappingURL=unfetch.module.js.map\n"],
  "mappings": ";;;;;AAAA;;;ACAA;AAAe,SAAf,uBAAwBA,GAAEC,GAAE;AAAC,SAAOA,IAAEA,KAAG,CAAA,GAAG,IAAIC,QAAQ,SAASC,GAAEC,GAAE;AAAC,QAAIC,IAAE,IAAIC,eAAJ,GAAmBC,IAAE,CAAA,GAAGC,IAAE,CAAA,GAAGC,IAAE,CAAA,GAAGC,IAAE,WAAU;AAAC,aAAM;QAACC,IAAG,MAAIN,EAAEO,SAAO,MAAI;QAAGC,YAAWR,EAAEQ;QAAWD,QAAOP,EAAEO;QAAOE,KAAIT,EAAEU;QAAYC,MAAK,WAAU;AAAC,iBAAOd,QAAQe,QAAQZ,EAAEa,YAAlB;QAAgC;QAACC,MAAK,WAAU;AAAC,iBAAOjB,QAAQe,QAAQZ,EAAEa,YAAlB,EAAgCE,KAAKC,KAAKC,KAA1C;QAAiD;QAACC,MAAK,WAAU;AAAC,iBAAOrB,QAAQe,QAAQ,IAAIO,KAAK,CAACnB,EAAEoB,QAAH,CAAT,CAAhB;QAAwC;QAACC,OAAMhB;QAAEiB,SAAQ;UAACC,MAAK,WAAU;AAAC,mBAAOrB;UAAE;UAACsB,SAAQ,WAAU;AAAC,mBAAOrB;UAAE;UAACsB,KAAI,SAAS9B,IAAE;AAAC,mBAAOS,EAAET,GAAE+B,YAAF;UAAiB;UAACC,KAAI,SAAShC,IAAE;AAAC,mBAAOA,GAAE+B,YAAF,KAAkBtB;UAAE;QAA9I;MAAnS;IAAob;AAAC,aAAQwB,KAAK5B,EAAE6B,KAAKjC,EAAEkC,UAAQ,OAAMnC,GAAE,IAAzB,GAA6BK,EAAE+B,SAAO,WAAU;AAAC/B,QAAEgC,sBAAF,EAA0BC,QAAQ,gCAA+B,SAAStC,IAAEC,IAAEE,IAAE;AAACI,UAAEgC,KAAKtC,KAAEA,GAAE8B,YAAF,CAAT,GAA0BvB,EAAE+B,KAAK,CAACtC,IAAEE,EAAH,CAAP,GAAcM,EAAER,MAAGQ,EAAER,MAAGQ,EAAER,MAAG,MAAIE,KAAEA;MAAE,CAAhJ,GAAkJA,EAAEO,EAAC,CAAF;IAAM,GAACL,EAAEmC,UAAQpC,GAAEC,EAAEoC,kBAAgB,aAAWxC,EAAEyC,aAAYzC,EAAE0B;AAAQtB,QAAEsC,iBAAiBV,GAAEhC,EAAE0B,QAAQM,EAA/B;AAAmC5B,MAAEuC,KAAK3C,EAAE4C,QAAM,IAAf;EAAqB,CAA31B;AAA61B;;;ADA10B,IAAO,kBAAQ;",
  "names": ["e", "n", "Promise", "t", "r", "s", "XMLHttpRequest", "o", "u", "i", "a", "ok", "status", "statusText", "url", "responseURL", "text", "resolve", "responseText", "json", "then", "JSON", "parse", "blob", "Blob", "response", "clone", "headers", "keys", "entries", "get", "toLowerCase", "has", "l", "open", "method", "onload", "getAllResponseHeaders", "replace", "push", "onerror", "withCredentials", "credentials", "setRequestHeader", "send", "body"]
}
