{
  "version": 3,
  "sources": ["../../../../node_modules/core-js/modules/es.string.from-code-point.js"],
  "sourcesContent": ["var $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\nvar $RangeError = RangeError;\nvar fromCharCode = String.fromCharCode;\n// eslint-disable-next-line es-x/no-string-fromcodepoint -- required for testing\nvar $fromCodePoint = String.fromCodePoint;\nvar join = uncurryThis([].join);\n\n// length should be 1, old FF problem\nvar INCORRECT_LENGTH = !!$fromCodePoint && $fromCodePoint.length != 1;\n\n// `String.fromCodePoint` method\n// https://tc39.es/ecma262/#sec-string.fromcodepoint\n$({ target: 'String', stat: true, arity: 1, forced: INCORRECT_LENGTH }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  fromCodePoint: function fromCodePoint(x) {\n    var elements = [];\n    var length = arguments.length;\n    var i = 0;\n    var code;\n    while (length > i) {\n      code = +arguments[i++];\n      if (toAbsoluteIndex(code, 0x10FFFF) !== code) throw $RangeError(code + ' is not a valid code point');\n      elements[i] = code < 0x10000\n        ? fromCharCode(code)\n        : fromCharCode(((code -= 0x10000) >> 10) + 0xD800, code % 0x400 + 0xDC00);\n    } return join(elements, '');\n  }\n});\n"],
  "mappings": ";;;;;;;;;;AAAA;IAAIA,IAAIC;AACR,IAAIC,cAAcD;AAClB,IAAIE,kBAAkBF;AAEtB,IAAIG,cAAcC;AAClB,IAAIC,eAAeC,OAAOD;AAE1B,IAAIE,iBAAiBD,OAAOE;AAC5B,IAAIC,OAAOR,YAAY,CAAA,EAAGQ,IAAJ;AAGtB,IAAIC,mBAAmB,CAAC,CAACH,kBAAkBA,eAAeI,UAAU;AAIpEZ,EAAE;EAAEa,QAAQ;EAAUC,MAAM;EAAMC,OAAO;EAAGC,QAAQL;AAAlD,GAAsE;EAEtEF,eAAe,SAASA,cAAcQ,GAAG;AACvC,QAAIC,WAAW,CAAA;AACf,QAAIN,SAASO,UAAUP;AACvB,QAAIQ,IAAI;AACR,QAAIC;AACJ,WAAOT,SAASQ,GAAG;AACjBC,aAAO,CAACF,UAAUC;AAClB,UAAIjB,gBAAgBkB,MAAM,OAAP,MAAqBA;AAAM,cAAMjB,YAAYiB,OAAO,4BAAR;AAC/DH,eAASE,KAAKC,OAAO,QACjBf,aAAae,IAAD,IACZf,eAAee,QAAQ,UAAY,MAAM,OAAQA,OAAO,OAAQ,KAApD;IACjB;AAAC,WAAOX,KAAKQ,UAAU,EAAX;EACd;AAdqE,CAAvE;",
  "names": ["$", "require", "uncurryThis", "toAbsoluteIndex", "$RangeError", "RangeError", "fromCharCode", "String", "$fromCodePoint", "fromCodePoint", "join", "INCORRECT_LENGTH", "length", "target", "stat", "arity", "forced", "x", "elements", "arguments", "i", "code"]
}
