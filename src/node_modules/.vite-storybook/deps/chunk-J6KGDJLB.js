import {
  PreviewWeb,
  init_esm as init_esm6
} from "./chunk-WP637L6E.js";
import {
  require_es_map
} from "./chunk-OQZL3WW3.js";
import {
  createChannel,
  init_esm as init_esm4
} from "./chunk-MV7M3ECF.js";
import {
  ClientApi,
  init_esm as init_esm5
} from "./chunk-E4EGKUM3.js";
import {
  StoryStore,
  init_esm as init_esm3
} from "./chunk-KTUVAV7V.js";
import {
  require_dist
} from "./chunk-6U3CPX5O.js";
import {
  addons,
  init_public_api
} from "./chunk-ZXUQATKE.js";
import {
  esm_default,
  init_esm as init_esm2
} from "./chunk-FRD2Y65G.js";
import {
  init_es_array_from,
  init_es_array_map,
  init_es_function_name,
  init_es_object_assign,
  init_es_symbol,
  init_es_symbol_description,
  init_es_symbol_iterator
} from "./chunk-OPAZLAKG.js";
import {
  init_es_array_filter
} from "./chunk-VYLTT7BA.js";
import {
  init_es_array_slice,
  init_es_regexp_to_string,
  init_web_dom_collections_for_each
} from "./chunk-BNKHNS7O.js";
import {
  require_browser
} from "./chunk-N2FZLRTI.js";
import {
  init_es_array_concat,
  init_esm,
  init_web_dom_collections_iterator,
  logger,
  require_es_array_iterator,
  require_es_regexp_exec,
  require_es_string_iterator
} from "./chunk-WDY4P2NX.js";
import {
  require_es_object_to_string
} from "./chunk-IPK6NK5O.js";
import {
  require_window
} from "./chunk-XCM4TOIV.js";
import {
  __esm,
  __export,
  __toESM,
  init_define_ngDevMode
} from "./chunk-XN7ES5DP.js";

// node_modules/@storybook/core-client/dist/esm/preview/executeLoadable.js
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function executeLoadable(loadable) {
  var reqs = null;
  if (Array.isArray(loadable)) {
    reqs = loadable;
  } else if (loadable.keys) {
    reqs = [loadable];
  }
  var exportsMap = /* @__PURE__ */ new Map();
  if (reqs) {
    reqs.forEach(function(req) {
      req.keys().forEach(function(filename) {
        try {
          var fileExports = req(filename);
          exportsMap.set(typeof req.resolve === "function" ? req.resolve(filename) : filename, fileExports);
        } catch (error) {
          var errorString = error.message && error.stack ? "".concat(error.message, "\n ").concat(error.stack) : error.toString();
          logger.error("Unexpected error while loading ".concat(filename, ": ").concat(errorString));
        }
      });
    });
  } else {
    var exported = loadable();
    if (Array.isArray(exported) && exported.every(function(obj) {
      return obj.default != null;
    })) {
      exportsMap = new Map(exported.map(function(fileExports, index) {
        return ["exports-map-".concat(index), fileExports];
      }));
    } else if (exported) {
      logger.warn("Loader function passed to 'configure' should return void or an array of module exports that all contain a 'default' export. Received: ".concat(JSON.stringify(exported)));
    }
  }
  return exportsMap;
}
function executeLoadableForChanges(loadable, m) {
  var _m$hot, _m$hot$data, _m$hot2;
  var lastExportsMap = (m === null || m === void 0 ? void 0 : (_m$hot = m.hot) === null || _m$hot === void 0 ? void 0 : (_m$hot$data = _m$hot.data) === null || _m$hot$data === void 0 ? void 0 : _m$hot$data.lastExportsMap) || /* @__PURE__ */ new Map();
  if (m !== null && m !== void 0 && (_m$hot2 = m.hot) !== null && _m$hot2 !== void 0 && _m$hot2.dispose) {
    m.hot.accept();
    m.hot.dispose(function(data) {
      data.lastExportsMap = lastExportsMap;
    });
  }
  var exportsMap = executeLoadable(loadable);
  var added = /* @__PURE__ */ new Map();
  Array.from(exportsMap.entries()).filter(function(_ref) {
    var _ref2 = _slicedToArray(_ref, 2), fileExports = _ref2[1];
    return !!fileExports.default;
  }).filter(function(_ref3) {
    var _ref4 = _slicedToArray(_ref3, 2), fileName = _ref4[0], fileExports = _ref4[1];
    return lastExportsMap.get(fileName) !== fileExports;
  }).forEach(function(_ref5) {
    var _ref6 = _slicedToArray(_ref5, 2), fileName = _ref6[0], fileExports = _ref6[1];
    return added.set(fileName, fileExports);
  });
  var removed = /* @__PURE__ */ new Map();
  Array.from(lastExportsMap.keys()).filter(function(fileName) {
    return !exportsMap.has(fileName);
  }).forEach(function(fileName) {
    return removed.set(fileName, lastExportsMap.get(fileName));
  });
  lastExportsMap = exportsMap;
  return {
    added,
    removed
  };
}
var import_es_array_iterator, import_es_object_to_string, import_es_map, import_es_string_iterator, import_es_regexp_exec;
var init_executeLoadable = __esm({
  "node_modules/@storybook/core-client/dist/esm/preview/executeLoadable.js"() {
    init_define_ngDevMode();
    import_es_array_iterator = __toESM(require_es_array_iterator());
    import_es_object_to_string = __toESM(require_es_object_to_string());
    init_web_dom_collections_iterator();
    import_es_map = __toESM(require_es_map());
    import_es_string_iterator = __toESM(require_es_string_iterator());
    init_web_dom_collections_for_each();
    init_es_array_concat();
    init_es_regexp_to_string();
    init_es_array_map();
    init_es_array_filter();
    init_es_array_from();
    init_es_symbol();
    init_es_symbol_description();
    init_es_symbol_iterator();
    init_es_array_slice();
    init_es_function_name();
    import_es_regexp_exec = __toESM(require_es_regexp_exec());
    init_esm();
  }
});

// node_modules/@storybook/core-client/dist/esm/preview/start.js
function _slicedToArray2(arr, i) {
  return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i) || _unsupportedIterableToArray2(arr, i) || _nonIterableRest2();
}
function _nonIterableRest2() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray2(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray2(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray2(o, minLen);
}
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit2(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles2(arr) {
  if (Array.isArray(arr))
    return arr;
}
function start(renderToDOM) {
  var _ref = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, decorateStory = _ref.decorateStory, render = _ref.render;
  if (globalWindow) {
    globalWindow.IS_STORYBOOK = true;
  }
  if (FEATURES !== null && FEATURES !== void 0 && FEATURES.storyStoreV7) {
    return {
      forceReRender: removedApi("forceReRender"),
      getStorybook: removedApi("getStorybook"),
      configure: removedApi("configure"),
      clientApi: {
        addDecorator: removedApi("clientApi.addDecorator"),
        addParameters: removedApi("clientApi.addParameters"),
        clearDecorators: removedApi("clientApi.clearDecorators"),
        addLoader: removedApi("clientApi.addLoader"),
        setAddon: removedApi("clientApi.setAddon"),
        getStorybook: removedApi("clientApi.getStorybook"),
        storiesOf: removedApi("clientApi.storiesOf"),
        raw: removedApi("raw")
      }
    };
  }
  var channel = createChannel({
    page: "preview"
  });
  addons.setChannel(channel);
  var clientApi = new ClientApi();
  var preview = new PreviewWeb();
  var initialized = false;
  var importFn = function importFn2(path) {
    return clientApi.importFn(path);
  };
  function onStoriesChanged() {
    var storyIndex = clientApi.getStoryIndex();
    preview.onStoriesChanged({
      storyIndex,
      importFn
    });
  }
  clientApi.onImportFnChanged = onStoriesChanged;
  clientApi.storyStore = preview.storyStore;
  if (globalWindow) {
    globalWindow.__STORYBOOK_CLIENT_API__ = clientApi;
    globalWindow.__STORYBOOK_ADDONS_CHANNEL__ = channel;
    globalWindow.__STORYBOOK_PREVIEW__ = preview;
    globalWindow.__STORYBOOK_STORY_STORE__ = preview.storyStore;
  }
  return {
    forceReRender: function forceReRender() {
      return channel.emit(esm_default.FORCE_RE_RENDER);
    },
    getStorybook: function getStorybook() {
      return [];
    },
    raw: function raw() {
    },
    clientApi,
    configure: function configure(framework, loadable, m) {
      var showDeprecationWarning = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : true;
      if (showDeprecationWarning) {
        configureDeprecationWarning();
      }
      clientApi.addParameters({
        framework
      });
      var getProjectAnnotations = function getProjectAnnotations2() {
        var _executeLoadableForCh = executeLoadableForChanges(loadable, m), added = _executeLoadableForCh.added, removed = _executeLoadableForCh.removed;
        Array.from(added.entries()).forEach(function(_ref2) {
          var _ref3 = _slicedToArray2(_ref2, 2), fileName = _ref3[0], fileExports = _ref3[1];
          return clientApi.facade.addStoriesFromExports(fileName, fileExports);
        });
        Array.from(removed.entries()).forEach(function(_ref4) {
          var _ref5 = _slicedToArray2(_ref4, 1), fileName = _ref5[0];
          return clientApi.facade.clearFilenameExports(fileName);
        });
        return Object.assign({
          render
        }, clientApi.facade.projectAnnotations, {
          renderToDOM,
          applyDecorators: decorateStory
        });
      };
      if (!initialized) {
        preview.initialize({
          getStoryIndex: function getStoryIndex() {
            return clientApi.getStoryIndex();
          },
          importFn,
          getProjectAnnotations
        });
        initialized = true;
      } else {
        getProjectAnnotations();
        onStoriesChanged();
      }
    }
  };
}
var import_es_object_to_string2, import_es_string_iterator2, import_es_array_iterator2, import_es_regexp_exec2, import_global, import_util_deprecate, globalWindow, FEATURES, configureDeprecationWarning, removedApi;
var init_start = __esm({
  "node_modules/@storybook/core-client/dist/esm/preview/start.js"() {
    init_define_ngDevMode();
    import_es_object_to_string2 = __toESM(require_es_object_to_string());
    init_web_dom_collections_for_each();
    init_es_array_from();
    import_es_string_iterator2 = __toESM(require_es_string_iterator());
    import_es_array_iterator2 = __toESM(require_es_array_iterator());
    init_web_dom_collections_iterator();
    init_es_object_assign();
    init_es_symbol();
    init_es_symbol_description();
    init_es_symbol_iterator();
    init_es_array_slice();
    init_es_function_name();
    import_es_regexp_exec2 = __toESM(require_es_regexp_exec());
    import_global = __toESM(require_window());
    import_util_deprecate = __toESM(require_browser());
    init_esm5();
    init_esm6();
    init_esm4();
    init_public_api();
    init_esm2();
    init_executeLoadable();
    globalWindow = import_global.default.window;
    FEATURES = import_global.default.FEATURES;
    configureDeprecationWarning = (0, import_util_deprecate.default)(function() {
    }, "`configure()` is deprecated and will be removed in Storybook 7.0. \nPlease use the `stories` field of `main.js` to load stories.\nRead more at https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#deprecated-configure");
    removedApi = function removedApi2(name) {
      return function() {
        throw new Error("@storybook/client-api:".concat(name, " was removed in storyStoreV7."));
      };
    };
  }
});

// node_modules/@storybook/core-client/dist/esm/preview/index.js
var import_csf;
var init_preview = __esm({
  "node_modules/@storybook/core-client/dist/esm/preview/index.js"() {
    init_define_ngDevMode();
    init_esm5();
    init_esm3();
    import_csf = __toESM(require_dist());
    init_start();
  }
});

// node_modules/@storybook/core-client/dist/esm/preview/types.js
var init_types = __esm({
  "node_modules/@storybook/core-client/dist/esm/preview/types.js"() {
    init_define_ngDevMode();
  }
});

// node_modules/@storybook/core-client/dist/esm/index.js
var init_esm7 = __esm({
  "node_modules/@storybook/core-client/dist/esm/index.js"() {
    init_define_ngDevMode();
    init_preview();
    init_types();
  }
});

// node_modules/@storybook/core/dist/esm/index.js
var esm_exports = {};
__export(esm_exports, {
  ClientApi: () => ClientApi,
  StoryStore: () => StoryStore,
  start: () => start,
  toId: () => import_csf.toId
});
var init_esm8 = __esm({
  "node_modules/@storybook/core/dist/esm/index.js"() {
    init_define_ngDevMode();
    init_esm7();
  }
});

export {
  start,
  import_csf,
  esm_exports,
  init_esm8 as init_esm
};
//# sourceMappingURL=chunk-J6KGDJLB.js.map
