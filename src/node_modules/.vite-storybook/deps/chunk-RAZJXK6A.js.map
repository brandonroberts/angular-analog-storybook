{
  "version": 3,
  "sources": ["../../../../node_modules/core-js/internals/same-value.js", "../../../../node_modules/core-js/modules/es.string.search.js"],
  "sourcesContent": ["// `SameValue` abstract operation\n// https://tc39.es/ecma262/#sec-samevalue\n// eslint-disable-next-line es-x/no-object-is -- safe\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n", "'use strict';\nvar call = require('../internals/function-call');\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar sameValue = require('../internals/same-value');\nvar toString = require('../internals/to-string');\nvar getMethod = require('../internals/get-method');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@search logic\nfixRegExpWellKnownSymbolLogic('search', function (SEARCH, nativeSearch, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.es/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = requireObjectCoercible(this);\n      var searcher = regexp == undefined ? undefined : getMethod(regexp, SEARCH);\n      return searcher ? call(searcher, regexp, O) : new RegExp(regexp)[SEARCH](toString(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@search\n    function (string) {\n      var rx = anObject(this);\n      var S = toString(string);\n      var res = maybeCallNative(nativeSearch, rx, S);\n\n      if (res.done) return res.value;\n\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;;;AAGAA,WAAOC,UAAUC,OAAOC,MAAM,SAASA,GAAGC,GAAGC,GAAG;AAE9C,aAAOD,MAAMC,IAAID,MAAM,KAAK,IAAIA,MAAM,IAAIC,IAAID,KAAKA,KAAKC,KAAKA;IAC9D;;;;;ACND,IACIC,MACAC,+BACAC,UACAC,wBACAC,WACAC,UACAC,WACAC;AARJ;;;;AACA,IAAIP,OAAOQ;AACX,IAAIP,gCAAgCO;AACpC,IAAIN,WAAWM;AACf,IAAIL,yBAAyBK;AAC7B,IAAIJ,YAAYI;AAChB,IAAIH,WAAWG;AACf,IAAIF,YAAYE;AAChB,IAAID,aAAaC;AAGjBP,kCAA8B,UAAU,SAAUQ,QAAQC,cAAcC,iBAAiB;AACvF,aAAO;QAGL,SAASC,OAAOC,QAAQ;AACtB,cAAIC,IAAIX,uBAAuB,IAAD;AAC9B,cAAIY,WAAWF,UAAUG,SAAYA,SAAYV,UAAUO,QAAQJ,MAAT;AAC1D,iBAAOM,WAAWf,KAAKe,UAAUF,QAAQC,CAAnB,IAAwB,IAAIG,OAAOJ,MAAX,EAAmBJ,QAAQJ,SAASS,CAAD,CAAnC;QAC/C;QAGD,SAAUI,QAAQ;AAChB,cAAIC,KAAKjB,SAAS,IAAD;AACjB,cAAIkB,IAAIf,SAASa,MAAD;AAChB,cAAIG,MAAMV,gBAAgBD,cAAcS,IAAIC,CAAnB;AAEzB,cAAIC,IAAIC;AAAM,mBAAOD,IAAIE;AAEzB,cAAIC,oBAAoBL,GAAGM;AAC3B,cAAI,CAACrB,UAAUoB,mBAAmB,CAApB;AAAwBL,eAAGM,YAAY;AACrD,cAAIC,SAASnB,WAAWY,IAAIC,CAAL;AACvB,cAAI,CAAChB,UAAUe,GAAGM,WAAWD,iBAAf;AAAmCL,eAAGM,YAAYD;AAChE,iBAAOE,WAAW,OAAO,KAAKA,OAAOC;QACtC;MAtBI;IAwBR,CAzB4B;;;",
  "names": ["module", "exports", "Object", "is", "x", "y", "call", "fixRegExpWellKnownSymbolLogic", "anObject", "requireObjectCoercible", "sameValue", "toString", "getMethod", "regExpExec", "require", "SEARCH", "nativeSearch", "maybeCallNative", "search", "regexp", "O", "searcher", "undefined", "RegExp", "string", "rx", "S", "res", "done", "value", "previousLastIndex", "lastIndex", "result", "index"]
}
